
Pipe1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  000065c6  0000667a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000065c6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000b44  00800206  00800206  00006680  2**0
                  ALLOC
  3 .eeprom       00001000  00810000  00810000  00006680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000060  00000000  00000000  00007680  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000076e0  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000009c0  00000000  00000000  00007720  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000c54e  00000000  00000000  000080e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000239a  00000000  00000000  0001462e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000739e  00000000  00000000  000169c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000016a4  00000000  00000000  0001dd68  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002d58  00000000  00000000  0001f40c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000075fa  00000000  00000000  00022164  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000be8  00000000  00000000  0002975e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7b 08 	jmp	0x10f6	; 0x10f6 <__ctors_end>
       4:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
       8:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
       c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      10:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      14:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      18:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      1c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      20:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      24:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      28:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      2c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      30:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      34:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      38:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      3c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      40:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      44:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      48:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      4c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      50:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      54:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__vector_21>
      58:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      5c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      60:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      64:	0c 94 59 2f 	jmp	0x5eb2	; 0x5eb2 <__vector_25>
      68:	0c 94 84 2f 	jmp	0x5f08	; 0x5f08 <__vector_26>
      6c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      70:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      74:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      78:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      7c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      80:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      84:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      88:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      8c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      90:	0c 94 5c 2e 	jmp	0x5cb8	; 0x5cb8 <__vector_36>
      94:	0c 94 9c 2e 	jmp	0x5d38	; 0x5d38 <__vector_37>
      98:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      9c:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      a0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      a4:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      a8:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      ac:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      b0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      b4:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      b8:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      bc:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      c0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      c4:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      c8:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      cc:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      d0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      d4:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      d8:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      dc:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      e0:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__bad_interrupt>
      e4:	2a 1a       	sub	r2, r26
      e6:	35 1a       	sub	r3, r21
      e8:	41 1a       	sub	r4, r17
      ea:	5d 1a       	sub	r5, r29
      ec:	7a 1a       	sub	r7, r26
      ee:	9b 1a       	sub	r9, r27
      f0:	a6 1a       	sub	r10, r22
      f2:	b1 1a       	sub	r11, r17
      f4:	c6 1a       	sub	r12, r22
      f6:	dc 1a       	sub	r13, r28
      f8:	e4 1a       	sub	r14, r20
      fa:	f2 1a       	sub	r15, r18
      fc:	c6 1a       	sub	r12, r22
      fe:	1f 1b       	sub	r17, r31
     100:	2f 1b       	sub	r18, r31
     102:	53 1b       	sub	r21, r19
     104:	a5 1b       	sub	r26, r21
     106:	be 1b       	sub	r27, r30
     108:	d3 1b       	sub	r29, r19
     10a:	ec 1b       	sub	r30, r28
     10c:	f4 1b       	sub	r31, r20
     10e:	19 1c       	adc	r1, r9
     110:	19 1c       	adc	r1, r9
     112:	32 1c       	adc	r3, r2
     114:	3f 1c       	adc	r3, r15
     116:	2e 1c       	adc	r2, r14
     118:	9a 1c       	adc	r9, r10
     11a:	a2 1c       	adc	r10, r2
     11c:	ec 1c       	adc	r14, r12
     11e:	4e 1d       	adc	r20, r14
     120:	78 1d       	adc	r23, r8
     122:	a4 1d       	adc	r26, r4
     124:	d3 1d       	adc	r29, r3
     126:	db 1d       	adc	r29, r11
     128:	e1 1d       	adc	r30, r1
     12a:	9a 1c       	adc	r9, r10
     12c:	e9 1d       	adc	r30, r9
     12e:	fd 1d       	adc	r31, r13
     130:	e1 1d       	adc	r30, r1
     132:	3b 1e       	adc	r3, r27
     134:	48 1e       	adc	r4, r24
     136:	53 1e       	adc	r5, r19
     138:	68 1e       	adc	r6, r24
     13a:	81 1e       	adc	r8, r17
     13c:	a4 1e       	adc	r10, r20
     13e:	af 1e       	adc	r10, r31
     140:	b5 1e       	adc	r11, r21
     142:	ba 1e       	adc	r11, r26
     144:	cd 1e       	adc	r12, r29
     146:	ee 1e       	adc	r14, r30
     148:	01 1f       	adc	r16, r17
     14a:	ba 1e       	adc	r11, r26
     14c:	48 31       	cpi	r20, 0x18	; 24
     14e:	5d 31       	cpi	r21, 0x1D	; 29
     150:	4b 31       	cpi	r20, 0x1B	; 27
     152:	3c 31       	cpi	r19, 0x1C	; 28
     154:	4e 31       	cpi	r20, 0x1E	; 30
     156:	51 31       	cpi	r21, 0x11	; 17
     158:	3f 31       	cpi	r19, 0x1F	; 31
     15a:	54 31       	cpi	r21, 0x14	; 20
     15c:	42 31       	cpi	r20, 0x12	; 18
     15e:	57 31       	cpi	r21, 0x17	; 23
     160:	45 31       	cpi	r20, 0x15	; 21
     162:	5a 31       	cpi	r21, 0x1A	; 26

00000164 <__trampolines_end>:
     164:	4c 6f       	ori	r20, 0xFC	; 252
     166:	67 3a       	cpi	r22, 0xA7	; 167
     168:	20 00       	.word	0x0020	; ????

0000016a <ErrorText>:
     16a:	00 00 49 6e 69 74 69 61 6c 69 73 61 74 69 6f 6e     ..Initialisation
     17a:	00 00 01 00 45 45 3a 4d 6f 64 75 6c 65 00 00 00     ....EE:Module...
     18a:	00 00 00 00 01 01 45 45 3a 4d 69 64 69 2d 49 6e     ......EE:Midi-In
     19a:	00 00 00 00 00 00 01 02 45 45 3a 4d 69 64 69 2d     ........EE:Midi-
     1aa:	4f 75 74 00 00 00 00 00 01 03 45 45 3a 4d 61 6e     Out.......EE:Man
     1ba:	2d 4d 6f 64 75 6c 65 00 00 00 01 04 45 45 3a 55     -Module.....EE:U
     1ca:	53 42 00 00 00 00 00 00 00 00 00 00 01 05 45 45     SB............EE
     1da:	3a 52 65 67 69 73 74 65 72 00 00 00 00 00 01 06     :Register.......
     1ea:	45 45 3a 50 72 6f 67 72 61 6d 73 00 00 00 00 00     EE:Programs.....
     1fa:	01 07 45 45 3a 53 6f 66 74 6b 65 79 73 00 00 00     ..EE:Softkeys...
     20a:	00 00 02 00 4d 6f 64 3a 46 61 69 6c 00 00 00 00     ....Mod:Fail....
     21a:	00 00 00 00 02 01 4d 6f 64 3a 55 6e 6b 6e 6f 77     ......Mod:Unknow
     22a:	49 6e 70 00 00 00 03 00 4f 56 46 4c 3a 4d 69 64     Inp.....OVFL:Mid
     23a:	69 49 6e 00 00 00 00 00 03 01 4f 56 46 4c 3a 4d     iIn.......OVFL:M
     24a:	69 64 69 4f 75 74 00 00 00 00 04 00 4f 56 46 4c     idiOut......OVFL
     25a:	3a 50 69 70 65 4d 73 67 00 00 00 00 05 00 50 77     :PipeMsg......Pw
     26a:	72 3a 4f 75 70 74 75 74 4f 6e 00 00 00 00           r:OuptutOn....

00000278 <panicString>:
     278:	54 ef 6e 65 20 61 75 73 00                          T.ne aus.

00000281 <releaseKeyString>:
     281:	54 61 73 74 65 6e 2f 52 65 67 2e 20 6c ef 73 65     Tasten/Reg. l.se
     291:	6e 00                                               n.

00000293 <prog_name>:
     293:	4d 49 44 49 2d 49 6e 74 65 72 66 61 63 65 00        MIDI-Interface.

000002a2 <usbHWBits>:
     2a2:	2c 42 69 74 73 3a 00                                ,Bits:.

000002a9 <usbHWmodule>:
     2a9:	4d 6f 64 75 6c 65 3a 00                             Module:.

000002b1 <usbHWempty>:
     2b1:	65 6d 70 74 79 00                                   empty.

000002b7 <usbHWRange>:
     2b7:	52 61 6e 67 65 3a 20 00                             Range: .

000002bf <usbHWManual>:
     2bf:	4d 61 6e 75 61 6c 3a 20 00                          Manual: .

000002c8 <usbHWmodulCheck>:
     2c8:	4d 6f 64 75 6c 65 73 20 63 68 65 63 6b 65 64 3a     Modules checked:
     2d8:	20 00                                                .

000002da <usbHWmodulInst>:
     2da:	4d 6f 64 75 6c 65 73 20 61 73 73 69 67 6e 65 64     Modules assigned
     2ea:	3a 20 00                                            : .

000002ed <usbHWtitel>:
     2ed:	48 61 72 64 77 61 72 65 20 43 6f 6e 66 69 67 75     Hardware Configu
     2fd:	72 61 74 69 6f 6e 0d 0a 00                          ration...

00000306 <HelloMsg>:
     306:	0d 0a 4d 49 44 49 2d 4f 72 67 61 6e 2d 49 6e 74     ..MIDI-Organ-Int
     316:	65 72 66 61 63 65 0d 0a 00                          erface...

0000031f <usbLog>:
     31f:	4c 6f 67 0d 0a 00                                   Log...

00000325 <usbEmpty>:
     325:	65 6d 70 74 79 0d 0a 00                             empty...

0000032d <msg_programming1>:
     32d:	73 61 76 65 2e 2e 2e 00                             save....

00000335 <logNone>:
     335:	3c 6e 6f 6e 65 3e 00                                <none>.

0000033c <stringNotAssigen>:
     33c:	75 6e 61 73 73 69 67 6e 65 64 00                    unassigned.

00000347 <menuMessageE>:
     347:	45 3a 00                                            E:.

0000034a <menuMessageOK>:
     34a:	6f 6b 00                                            ok.

0000034d <menuMessageAbort>:
     34d:	61 62 6f 72 74 00                                   abort.

00000353 <menuMessageMIDIpanic>:
     353:	4d 49 44 49 20 4e 6f 74 65 6e 20 61 75 73 00        MIDI Noten aus.

00000362 <messageLoaded>:
     362:	20 52 65 67 2e 20 67 65 6c 61 64 65 6e 00            Reg. geladen.

00000370 <messageSaved>:
     370:	20 52 65 67 2e 20 67 65 73 70 65 69 63 68 65 72      Reg. gespeicher
     380:	74 00                                               t.

00000382 <MenuMIDIOutText>:
     382:	4f 75 74 3a 00                                      Out:.

00000387 <MenuMIDIInText>:
     387:	49 6e 3a 00                                         In:.

0000038b <initMenuText>:
     38b:	4d 65 6e f5 00 00 00 00 00 00                       Men.......

00000395 <nibbleInfo>:
	...
     39d:	00 02 00 01 00 00 00 00 00 00 01 03 00 00 00 00     ................
     3ad:	00 00 00 02 00 02 00 00 00 00 00 00 03 01 03 04     ................
     3bd:	00 00 00 00 00 03 00 01 02 00 00 00 00 00 01 00     ................
     3cd:	00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00     ................
     3dd:	01 00 00 00 00 00 00 00 00 08 00 01 02 03 04 05     ................
     3ed:	06 07 08 00 01 02 03 04 05 06 07 02 00 01 00 00     ................
     3fd:	00 00 00 00 02 00 01 00 00 00 00 00 00 08 00 01     ................
     40d:	02 03 04 05 06 07 00 00 00 00 00 00 00 00 00        ...............

0000041c <menu_selFunc>:
     41c:	81 10 3c 6e 6f 6e 65 3e 00 00 00 00 00 00 88 06     ..<none>........
     42c:	00 00 00 00 01 10 4d 65 6e 75 00 00 00 00 00 00     ......Menu......
     43c:	92 06 7e 06 00 00 00 00 01 10 53 74 69 6d 6d 65     ..~.......Stimme
     44c:	6e 00 00 00 92 0b 74 06 00 00 00 00 01 10 4b 6f     n.....t.......Ko
     45c:	70 70 65 6c 32 3c 33 00 00 00 56 06 89 19 00 00     ppel2<3...V.....
     46c:	01 10 4b 6f 70 70 65 6c 31 3c 33 00 00 00 4c 06     ..Koppel1<3...L.
     47c:	8c 19 00 00 01 10 4b 6f 70 70 65 6c 50 3c 33 00     ......KoppelP<3.
     48c:	00 00 42 06 8f 19 00 00 01 10 4b 6f 70 70 65 6c     ..B.......Koppel
     49c:	31 3c 32 00 00 00 38 06 92 19 00 00 01 10 4b 6f     1<2...8.......Ko
     4ac:	70 70 65 6c 50 3c 32 00 00 00 2e 06 95 19 00 00     ppelP<2.........
     4bc:	01 10 4b 6f 70 70 65 6c 50 3c 31 00 00 00 24 06     ..KoppelP<1...$.
     4cc:	98 19 00 00 01 10 4b 6f 70 70 65 6c 33 3c 32 00     ......Koppel3<2.
     4dc:	00 00 1a 06 9b 19 00 00 01 10 4b 6f 70 70 65 6c     ..........Koppel
     4ec:	33 3c 31 00 00 00 10 06 9e 19 00 00 01 10 4b 6f     3<1...........Ko
     4fc:	70 70 65 6c 33 3c 50 00 00 00 06 06 a1 19 00 00     ppel3<P.........
     50c:	01 10 4b 6f 70 70 65 6c 32 3c 31 00 00 00 fc 05     ..Koppel2<1.....
     51c:	a4 19 00 00 01 10 4b 6f 70 70 65 6c 32 3c 50 00     ......Koppel2<P.
     52c:	00 00 f2 05 a7 19 00 00 01 10 4b 6f 70 70 65 6c     ..........Koppel
     53c:	31 3c 50 00 00 00 e8 05 aa 19 00 00 01 10 4b 6f     1<P...........Ko
     54c:	6d 62 69 6e 20 31 41 00 00 00 de 05 9b 25 00 00     mbin 1A......%..
     55c:	01 10 4b 6f 6d 62 69 6e 20 32 41 00 00 00 d4 05     ..Kombin 2A.....
     56c:	a9 25 00 00 01 10 4b 6f 6d 62 69 6e 20 33 41 00     .%....Kombin 3A.
     57c:	00 00 ca 05 b7 25 00 00 01 10 4b 6f 6d 62 69 6e     .....%....Kombin
     58c:	20 34 41 00 00 00 c0 05 c5 25 00 00 01 10 4d 49      4A......%....MI
     59c:	44 49 20 4f 66 66 00 00 00 00 60 06 dd 23 00 00     DI Off....`..#..
     5ac:	c1 10 53 65 74 75 70 00 00 00 00 00 32 0c 6a 06     ..Setup.....2.j.
     5bc:	00 00 00 00                                         ....

000005c0 <shortKeyTextK4A>:
     5c0:	4b 62 34 41 00 00 00 00 00 00                       Kb4A......

000005ca <shortKeyTextK3A>:
     5ca:	4b 62 33 41 00 00 00 00 00 00                       Kb3A......

000005d4 <shortKeyTextK2A>:
     5d4:	4b 62 32 41 00 00 00 00 00 00                       Kb2A......

000005de <shortKeyTextK1A>:
     5de:	4b 62 31 41 00 00 00 00 00 00                       Kb1A......

000005e8 <shortKeyTextCpl1P>:
     5e8:	31 3c 50 80 00 00 00 00 00 00                       1<P.......

000005f2 <shortKeyTextCpl2P>:
     5f2:	32 3c 50 80 00 00 00 00 00 00                       2<P.......

000005fc <shortKeyTextCpl21>:
     5fc:	32 3c 31 80 00 00 00 00 00 00                       2<1.......

00000606 <shortKeyTextCpl3P>:
     606:	33 3c 50 80 00 00 00 00 00 00                       3<P.......

00000610 <shortKeyTextCpl31>:
     610:	33 3c 31 80 00 00 00 00 00 00                       3<1.......

0000061a <shortKeyTextCpl32>:
     61a:	33 3c 32 80 00 00 00 00 00 00                       3<2.......

00000624 <shortKeyTextCplP1>:
     624:	50 3c 31 80 00 00 00 00 00 00                       P<1.......

0000062e <shortKeyTextCplP2>:
     62e:	50 3c 32 80 00 00 00 00 00 00                       P<2.......

00000638 <shortKeyTextCpl12>:
     638:	31 3c 32 80 00 00 00 00 00 00                       1<2.......

00000642 <shortKeyTextCplP3>:
     642:	50 3c 33 80 00 00 00 00 00 00                       P<3.......

0000064c <shortKeyTextCpl13>:
     64c:	31 3c 33 80 00 00 00 00 00 00                       1<3.......

00000656 <shortKeyTextCpl23>:
     656:	32 3c 33 80 00 00 00 00 00 00                       2<3.......

00000660 <shortKeyTextMIDIoff>:
     660:	4d 4f 66 66 00 00 00 00 00 00                       MOff......

0000066a <shortKeyTextSetup>:
     66a:	53 65 74 75 00 00 00 00 00 00                       Setu......

00000674 <shortKeyTextStim>:
     674:	53 74 69 6d 00 00 00 00 00 00                       Stim......

0000067e <shortKeyTextMenu>:
     67e:	4d 65 6e 75 00 00 00 00 00 00                       Menu......

00000688 <shortKeyTextNone>:
	...

00000692 <menu_main>:
     692:	81 00 4d 61 6e 75 61 6c 00 00 00 00 0a 07 00 00     ..Manual........
     6a2:	00 00 00 00 01 00 52 65 67 69 73 74 65 72 00 00     ......Register..
     6b2:	32 07 00 00 45 19 00 00 01 00 4d 49 44 49 00 00     2...E.....MIDI..
     6c2:	00 00 00 00 fe 08 00 00 00 00 00 00 01 00 54 61     ..............Ta
     6d2:	73 74 65 6e 00 00 00 00 42 0b 00 00 00 00 79 16     sten....B.....y.
     6e2:	01 00 53 74 61 74 75 73 00 00 00 00 56 10 00 00     ..Status....V...
     6f2:	00 00 00 00 c1 00 53 65 74 75 70 00 00 00 00 00     ......Setup.....
     702:	32 0c 00 00 00 00 00 00                             2.......

0000070a <menu_manual>:
     70a:	81 00 4b 6f 70 70 65 6c 00 00 00 00 0e 08 00 00     ..Koppel........
     71a:	00 00 00 00 c1 00 53 74 69 6d 6d 65 6e 00 00 00     ......Stimmen...
     72a:	92 0b 00 00 00 00 00 00                             ........

00000732 <menu_register>:
     732:	8c 00 4b 6f 6d 62 2e 6c 61 64 2e 00 00 00 55 05     ..Komb.lad....U.
     742:	00 00 52 19 0c 00 4b 6f 6d 62 2e 73 70 2e 00 00     ..R...Komb.sp...
     752:	00 00 55 05 00 00 6e 16 01 00 61 75 73 00 00 00     ..U...n...aus...
	...
     76a:	4c 19 00 00 0e 00 52 65 67 2e 31 2d 38 00 00 00     L.....Reg.1-8...
     77a:	00 00 1a 05 00 00 33 16 0e 00 52 65 67 2e 39 2d     ......3...Reg.9-
     78a:	31 36 00 00 00 00 1b 05 00 00 33 16 0e 00 52 65     16........3...Re
     79a:	67 2e 31 37 2d 32 34 00 00 00 1c 05 00 00 33 16     g.17-24.......3.
     7aa:	0e 00 52 65 67 2e 32 35 2d 33 32 00 00 00 1d 05     ..Reg.25-32.....
     7ba:	00 00 33 16 0e 00 52 65 67 2e 33 33 2d 34 30 00     ..3...Reg.33-40.
     7ca:	00 00 1e 05 00 00 33 16 0e 00 52 65 67 2e 34 31     ......3...Reg.41
     7da:	2d 34 38 00 00 00 1f 05 00 00 33 16 0e 00 52 65     -48.......3...Re
     7ea:	67 2e 34 39 2d 35 34 00 00 00 20 05 00 00 33 16     g.49-54... ...3.
     7fa:	ca 00 52 65 67 2e 35 35 2d 36 34 00 00 00 21 05     ..Reg.55-64...!.
     80a:	00 00 33 16                                         ..3.

0000080e <menu_coupler>:
     80e:	89 00 32 3c 33 00 00 00 00 00 00 00 00 00 bc 07     ..2<3...........
     81e:	00 00 5b 16 09 00 31 3c 33 00 00 00 00 00 00 00     ..[...1<3.......
     82e:	00 00 bd 07 00 00 5b 16 09 00 31 3c 32 00 00 00     ......[...1<2...
     83e:	00 00 00 00 00 00 be 07 00 00 5b 16 09 00 50 3c     ..........[...P<
     84e:	33 00 00 00 00 00 00 00 00 00 bf 07 00 00 5b 16     3.............[.
     85e:	09 00 50 3c 32 00 00 00 00 00 00 00 00 00 c0 07     ..P<2...........
     86e:	00 00 5b 16 09 00 50 3c 31 00 00 00 00 00 00 00     ..[...P<1.......
     87e:	00 00 c1 07 00 00 5b 16 09 00 33 3c 32 00 00 00     ......[...3<2...
     88e:	00 00 00 00 00 00 c2 07 00 00 5b 16 09 00 33 3c     ..........[...3<
     89e:	31 00 00 00 00 00 00 00 00 00 c3 07 00 00 5b 16     1.............[.
     8ae:	09 00 33 3c 50 00 00 00 00 00 00 00 00 00 c4 07     ..3<P...........
     8be:	00 00 5b 16 09 00 32 3c 31 00 00 00 00 00 00 00     ..[...2<1.......
     8ce:	00 00 c5 07 00 00 5b 16 09 00 32 3c 50 00 00 00     ......[...2<P...
     8de:	00 00 00 00 00 00 c6 07 00 00 5b 16 c9 00 31 3c     ..........[...1<
     8ee:	50 00 00 00 00 00 00 00 00 00 c7 07 00 00 5b 16     P.............[.

000008fe <menu_midi>:
     8fe:	81 00 4e 6f 74 65 73 4f 66 66 00 00 00 00 00 00     ..NotesOff......
     90e:	dd 23 00 00 01 00 4d 49 44 49 69 6e 00 00 00 00     .#....MIDIin....
     91e:	62 09 00 00 00 00 e7 17 01 00 4d 49 44 49 6f 75     b.........MIDIou
     92e:	74 00 00 00 e2 0b 00 00 00 00 e3 17 09 00 41 63     t.............Ac
     93e:	74 2e 53 65 6e 73 65 00 00 00 d5 08 00 00 df 17     t.Sense.........
     94e:	c9 00 56 65 6c 30 34 4f 66 66 00 00 00 00 d6 08     ..Vel04Off......
     95e:	00 00 df 17                                         ....

00000962 <menu_midiIn>:
     962:	81 00 43 68 2e 31 00 00 00 00 00 00 a2 0a 00 00     ..Ch.1..........
     972:	ad 15 00 00 01 00 43 68 2e 32 00 00 00 00 00 00     ......Ch.2......
     982:	a2 0a 01 00 ad 15 00 00 01 00 43 68 2e 33 00 00     ..........Ch.3..
     992:	00 00 00 00 a2 0a 02 00 ad 15 00 00 01 00 43 68     ..............Ch
     9a2:	2e 34 00 00 00 00 00 00 a2 0a 03 00 ad 15 00 00     .4..............
     9b2:	01 00 43 68 2e 35 00 00 00 00 00 00 a2 0a 04 00     ..Ch.5..........
     9c2:	ad 15 00 00 01 00 43 68 2e 36 00 00 00 00 00 00     ......Ch.6......
     9d2:	a2 0a 05 00 ad 15 00 00 01 00 43 68 2e 37 00 00     ..........Ch.7..
     9e2:	00 00 00 00 a2 0a 06 00 ad 15 00 00 01 00 43 68     ..............Ch
     9f2:	2e 38 00 00 00 00 00 00 a2 0a 07 00 ad 15 00 00     .8..............
     a02:	01 00 43 68 2e 39 00 00 00 00 00 00 a2 0a 08 00     ..Ch.9..........
     a12:	ad 15 00 00 01 00 43 68 2e 31 30 00 00 00 00 00     ......Ch.10.....
     a22:	a2 0a 09 00 ad 15 00 00 01 00 43 68 2e 31 31 00     ..........Ch.11.
     a32:	00 00 00 00 a2 0a 0a 00 ad 15 00 00 01 00 43 68     ..............Ch
     a42:	2e 31 32 00 00 00 00 00 a2 0a 0b 00 ad 15 00 00     .12.............
     a52:	01 00 43 68 2e 31 33 00 00 00 00 00 a2 0a 0c 00     ..Ch.13.........
     a62:	ad 15 00 00 01 00 43 68 2e 31 34 00 00 00 00 00     ......Ch.14.....
     a72:	a2 0a 0d 00 ad 15 00 00 01 00 43 68 2e 31 35 00     ..........Ch.15.
     a82:	00 00 00 00 a2 0a 0e 00 ad 15 00 00 c1 00 43 68     ..............Ch
     a92:	2e 31 36 00 00 00 00 00 a2 0a 0f 00 ad 15 00 00     .16.............

00000aa2 <menu_midiInSec>:
     aa2:	81 00 53 65 63 74 2e 31 00 00 00 00 f2 0a 00 00     ..Sect.1........
     ab2:	b8 15 00 00 01 00 53 65 63 74 2e 32 00 00 00 00     ......Sect.2....
     ac2:	f2 0a 01 00 b8 15 00 00 01 00 53 65 63 74 2e 33     ..........Sect.3
     ad2:	00 00 00 00 f2 0a 02 00 b8 15 00 00 c1 00 53 65     ..............Se
     ae2:	63 74 2e 34 00 00 00 00 f2 0a 03 00 b8 15 00 00     ct.4............

00000af2 <menu_midiInVar>:
     af2:	87 90 4d 61 6e 75 61 6c 00 00 00 00 00 00 d1 07     ..Manual........
     b02:	00 00 00 00 04 90 4d 69 64 4e 6f 74 65 00 00 00     ......MidNote...
     b12:	00 00 d2 07 00 00 00 00 06 80 52 61 6e 67 65 00     ..........Range.
     b22:	00 00 00 00 00 00 d3 07 00 00 00 00 c4 90 4d 61     ..............Ma
     b32:	6e 4e 6f 74 65 00 00 00 00 00 d4 07 00 00 00 00     nNote...........

00000b42 <menu_key>:
     b42:	81 08 54 61 73 74 65 31 00 00 00 00 1c 04 00 00     ..Taste1........
     b52:	1c 16 5a 26 01 08 54 61 73 74 65 32 00 00 00 00     ..Z&..Taste2....
     b62:	1c 04 01 00 1c 16 5a 26 01 08 54 61 73 74 65 33     ......Z&..Taste3
     b72:	00 00 00 00 1c 04 02 00 1c 16 5a 26 c1 08 54 61     ..........Z&..Ta
     b82:	73 74 65 34 00 00 00 00 1c 04 03 00 1c 16 5a 26     ste4..........Z&

00000b92 <menu_tune>:
     b92:	81 20 4d 61 6e 2e 33 00 00 00 00 00 00 00 00 00     . Man.3.........
     ba2:	c3 16 00 00 01 20 4d 61 6e 2e 32 00 00 00 00 00     ..... Man.2.....
     bb2:	00 00 01 00 c3 16 00 00 01 20 4d 61 6e 2e 31 00     ......... Man.1.
     bc2:	00 00 00 00 00 00 02 00 c3 16 00 00 c1 20 50 65     ............. Pe
     bd2:	64 61 6c 00 00 00 00 00 00 00 03 00 c3 16 00 00     dal.............

00000be2 <menu_midiOut>:
     be2:	83 10 49 49 49 00 00 00 00 00 00 00 00 00 d1 08     ..III...........
     bf2:	00 00 00 00 03 10 49 49 00 00 00 00 00 00 00 00     ......II........
     c02:	00 00 d2 08 00 00 00 00 03 10 49 00 00 00 00 00     ..........I.....
     c12:	00 00 00 00 00 00 d3 08 00 00 00 00 c3 10 50 00     ..............P.
	...
     c2a:	00 00 d4 08 00 00 00 00                             ........

00000c32 <menu_setup>:
     c32:	81 00 4d 6f 64 75 6c 65 00 00 00 00 fa 0c 00 00     ..Module........
     c42:	00 00 00 00 01 00 55 53 42 00 00 00 00 00 00 00     ......USB.......
     c52:	4e 0e 00 00 00 00 00 00 01 00 50 6f 77 65 72 00     N.........Power.
     c62:	00 00 00 00 be 0c 00 00 00 00 00 00 c1 00 45 45     ..............EE
     c72:	70 72 6f 6d 00 00 00 00 82 0c 00 00 00 00 00 00     prom............

00000c82 <menu_eeprom>:
     c82:	81 00 45 45 53 61 76 65 00 00 00 00 00 00 00 00     ..EESave........
     c92:	f0 24 00 00 01 00 45 45 42 61 63 6b 75 70 00 00     .$....EEBackup..
     ca2:	00 00 00 00 d8 24 00 00 c1 00 45 45 52 65 73 74     .....$....EERest
     cb2:	6f 72 65 00 00 00 00 00 e4 24 00 00                 ore......$..

00000cbe <menu_Power>:
     cbe:	81 00 50 6f 77 65 72 4f 6e 00 00 00 00 00 00 00     ..PowerOn.......
     cce:	1e 27 00 00 01 00 50 6f 77 65 72 4f 66 66 00 00     .'....PowerOff..
     cde:	00 00 00 00 27 27 00 00 c1 00 50 2e 52 65 73 74     ....''....P.Rest
     cee:	61 72 74 00 00 00 00 00 2f 27 00 00                 art...../'..

00000cfa <menu_module>:
     cfa:	8a 00 4d 6f 64 52 65 61 64 00 00 00 00 00 4e 03     ..ModRead.....N.
     d0a:	00 00 f5 17 0a 00 4d 6f 64 57 72 69 74 65 00 00     ......ModWrite..
     d1a:	00 00 4d 03 00 00 f5 17 0a 08 4d 6f 64 4f 4b 00     ..M.......ModOK.
     d2a:	00 00 00 00 00 00 46 02 00 00 00 00 01 00 4d 6f     ......F.......Mo
     d3a:	64 54 65 73 74 00 00 00 5e 0d 00 00 00 00 00 00     dTest...^.......
     d4a:	c1 00 4d 6f 64 41 73 73 69 67 6e 00 8a 0e 00 00     ..ModAssign.....
     d5a:	00 00 eb 17                                         ....

00000d5e <menu_ModeSel>:
     d5e:	81 00 4d 6f 64 2e 30 00 00 00 00 00 fe 0d 00 00     ..Mod.0.........
     d6e:	a2 15 00 00 01 00 4d 6f 64 2e 31 00 00 00 00 00     ......Mod.1.....
     d7e:	fe 0d 01 00 a2 15 00 00 01 00 4d 6f 64 2e 32 00     ..........Mod.2.
     d8e:	00 00 00 00 fe 0d 02 00 a2 15 00 00 01 00 4d 6f     ..............Mo
     d9e:	64 2e 33 00 00 00 00 00 fe 0d 03 00 a2 15 00 00     d.3.............
     dae:	01 00 4d 6f 64 2e 34 00 00 00 00 00 fe 0d 04 00     ..Mod.4.........
     dbe:	a2 15 00 00 01 00 4d 6f 64 2e 35 00 00 00 00 00     ......Mod.5.....
     dce:	fe 0d 05 00 a2 15 00 00 01 00 4d 6f 64 2e 36 00     ..........Mod.6.
     dde:	00 00 00 00 fe 0d 06 00 a2 15 00 00 c1 00 4d 6f     ..............Mo
     dee:	64 2e 37 00 00 00 00 00 fe 0d 07 00 a2 15 00 00     d.7.............

00000dfe <menu_ModTestSelcted>:
     dfe:	81 00 52 65 61 64 00 00 00 00 00 00 00 00 00 00     ..Read..........
     e0e:	7d 16 00 00 0b 00 57 72 69 74 65 00 00 00 00 00     }.....Write.....
     e1e:	00 00 5a 05 39 15 75 15 01 00 54 65 73 74 50 74     ..Z.9.u...TestPt
     e2e:	72 6e 00 00 00 00 00 00 bb 24 00 00 c1 00 4c 6f     rn.......$....Lo
     e3e:	6f 70 54 73 74 00 00 00 00 00 00 00 b1 16 00 00     opTst...........

00000e4e <menu_USBser>:
     e4e:	89 00 41 63 74 69 76 65 00 00 00 00 00 00 d0 0b     ..Active........
     e5e:	00 00 17 18 01 00 53 65 6e 64 4c 6f 67 00 00 00     ......SendLog...
     e6e:	00 00 00 00 f9 17 00 00 c1 00 53 6e 64 48 57 43     ..........SndHWC
     e7e:	66 67 00 00 00 00 00 00 2b 18 00 00                 fg......+...

00000e8a <menu_modAssign>:
     e8a:	81 00 4d 61 6e 2e 33 00 00 00 00 00 8e 0f 00 00     ..Man.3.........
     e9a:	d6 15 00 00 01 00 4d 61 6e 2e 32 00 00 00 00 00     ......Man.2.....
     eaa:	8e 0f 01 00 d6 15 00 00 01 00 4d 61 6e 2e 31 00     ..........Man.1.
     eba:	00 00 00 00 8e 0f 02 00 d6 15 00 00 01 00 50 65     ..............Pe
     eca:	64 61 6c 00 00 00 00 00 8e 0f 03 00 d6 15 00 00     dal.............
     eda:	c1 00 52 65 67 69 73 74 65 72 00 00 ee 0e 04 00     ..Register......
     eea:	00 00 00 00                                         ....

00000eee <menu_modSection8>:
     eee:	81 00 53 65 63 74 2e 31 00 00 00 00 de 0f 00 00     ..Sect.1........
     efe:	06 16 00 00 01 00 53 65 63 74 2e 32 00 00 00 00     ......Sect.2....
     f0e:	de 0f 01 00 06 16 00 00 01 00 53 65 63 74 2e 33     ..........Sect.3
     f1e:	00 00 00 00 de 0f 02 00 06 16 00 00 01 00 53 65     ..............Se
     f2e:	63 74 2e 34 00 00 00 00 de 0f 03 00 06 16 00 00     ct.4............
     f3e:	01 00 53 65 63 74 2e 35 00 00 00 00 de 0f 04 00     ..Sect.5........
     f4e:	06 16 00 00 01 00 53 65 63 74 2e 36 00 00 00 00     ......Sect.6....
     f5e:	de 0f 05 00 06 16 00 00 01 00 53 65 63 74 2e 37     ..........Sect.7
     f6e:	00 00 00 00 de 0f 06 00 06 16 00 00 c1 00 53 65     ..............Se
     f7e:	63 74 2e 38 00 00 00 00 de 0f 07 00 06 16 00 00     ct.8............

00000f8e <menu_modSection>:
     f8e:	81 00 53 65 63 74 2e 31 00 00 00 00 1a 10 00 00     ..Sect.1........
     f9e:	e1 15 00 00 01 00 53 65 63 74 2e 32 00 00 00 00     ......Sect.2....
     fae:	1a 10 01 00 e1 15 00 00 01 00 53 65 63 74 2e 33     ..........Sect.3
     fbe:	00 00 00 00 1a 10 02 00 e1 15 00 00 c1 00 53 65     ..............Se
     fce:	63 74 2e 34 00 00 00 00 1a 10 03 00 e1 15 00 00     ct.4............

00000fde <menu_modDefineReg>:
     fde:	8d 80 52 65 67 42 65 67 00 00 00 00 00 00 a3 07     ..RegBeg........
     fee:	00 00 00 00 0d 80 52 65 67 45 6e 64 00 00 00 00     ......RegEnd....
     ffe:	00 00 a4 07 00 00 00 00 c5 80 4d 6f 64 75 6c 65     ..........Module
    100e:	2f 42 69 74 00 00 a5 07 00 00 00 00                 /Bit........

0000101a <menu_modDefine>:
    101a:	84 90 4e 6f 74 65 42 65 67 00 00 00 00 00 d7 08     ..NoteBeg.......
    102a:	00 00 00 00 04 90 4e 6f 74 65 45 6e 64 00 00 00     ......NoteEnd...
    103a:	00 00 d8 08 00 00 00 00 c5 80 4d 6f 64 75 6c 65     ..........Module
    104a:	2f 42 69 74 00 00 d9 08 00 00 00 00                 /Bit........

00001056 <menu_status>:
    1056:	81 20 4c 6f 67 00 00 00 00 00 00 00 00 00 00 00     . Log...........
    1066:	fe 1f 00 00 02 40 4d 49 44 49 2d 49 6e 00 00 00     .....@MIDI-In...
    1076:	00 00 00 00 82 1f 00 00 c2 40 4d 49 44 49 2d 4f     .........@MIDI-O
    1086:	75 74 00 00 00 00 00 00 c0 1f 00 00                 ut..........

00001092 <sw_version>:
    1092:	56 30 2e 35 38 00                                   V0.58.

00001098 <cplInfo>:
    1098:	01 00 02 00 02 01 03 00 03 01 03 02 00 01 00 02     ................
    10a8:	01 02 00 03 01 03 02 03                             ........

000010b0 <keylabel_1>:
    10b0:	31 00                                               1.

000010b2 <keylabel_0>:
    10b2:	30 00                                               0.

000010b4 <keylabel_text>:
    10b4:	54 65 78 74 80 00                                   Text..

000010ba <keylabel_exit>:
    10ba:	45 78 69 74 00                                      Exit.

000010bf <keylabel_off>:
    10bf:	7e 61 75 73 00                                      ~aus.

000010c4 <keylabel_on>:
    10c4:	7e 65 69 6e 00                                      ~ein.

000010c9 <keylabel_onoff>:
    10c9:	45 69 6e 80 00                                      Ein..

000010ce <keylabel_minus>:
    10ce:	2d 00                                               -.

000010d0 <keylabel_plus>:
    10d0:	2b 00                                               +.

000010d2 <keylabel_left>:
    10d2:	7f 00                                               ..

000010d4 <keylabel_right>:
    10d4:	7e 00                                               ~.

000010d6 <keylabel_down>:
    10d6:	09 00                                               ..

000010d8 <keylabel_up>:
    10d8:	08 00                                               ..

000010da <cgPattern_Block>:
    10da:	00 00 0e 0e 0e 0e 00 00                             ........

000010e2 <cgPattern_Down>:
    10e2:	04 04 04 04 15 0e 04 00                             ........

000010ea <cgPattern_Up>:
    10ea:	04 0e 15 04 04 04 04 00                             ........

000010f2 <cr_lf>:
    10f2:	0d 0a 00 00                                         ....

000010f6 <__ctors_end>:
    10f6:	11 24       	eor	r1, r1
    10f8:	1f be       	out	0x3f, r1	; 63
    10fa:	cf ef       	ldi	r28, 0xFF	; 255
    10fc:	d1 e2       	ldi	r29, 0x21	; 33
    10fe:	de bf       	out	0x3e, r29	; 62
    1100:	cd bf       	out	0x3d, r28	; 61
    1102:	00 e0       	ldi	r16, 0x00	; 0
    1104:	0c bf       	out	0x3c, r16	; 60

00001106 <__do_copy_data>:
    1106:	12 e0       	ldi	r17, 0x02	; 2
    1108:	a0 e0       	ldi	r26, 0x00	; 0
    110a:	b2 e0       	ldi	r27, 0x02	; 2
    110c:	e6 ec       	ldi	r30, 0xC6	; 198
    110e:	f5 e6       	ldi	r31, 0x65	; 101
    1110:	00 e0       	ldi	r16, 0x00	; 0
    1112:	0b bf       	out	0x3b, r16	; 59
    1114:	02 c0       	rjmp	.+4      	; 0x111a <__do_copy_data+0x14>
    1116:	07 90       	elpm	r0, Z+
    1118:	0d 92       	st	X+, r0
    111a:	a6 30       	cpi	r26, 0x06	; 6
    111c:	b1 07       	cpc	r27, r17
    111e:	d9 f7       	brne	.-10     	; 0x1116 <__do_copy_data+0x10>

00001120 <__do_clear_bss>:
    1120:	2d e0       	ldi	r18, 0x0D	; 13
    1122:	a6 e0       	ldi	r26, 0x06	; 6
    1124:	b2 e0       	ldi	r27, 0x02	; 2
    1126:	01 c0       	rjmp	.+2      	; 0x112a <.do_clear_bss_start>

00001128 <.do_clear_bss_loop>:
    1128:	1d 92       	st	X+, r1

0000112a <.do_clear_bss_start>:
    112a:	aa 34       	cpi	r26, 0x4A	; 74
    112c:	b2 07       	cpc	r27, r18
    112e:	e1 f7       	brne	.-8      	; 0x1128 <.do_clear_bss_loop>
    1130:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <main>
    1134:	0c 94 e1 32 	jmp	0x65c2	; 0x65c2 <_exit>

00001138 <__bad_interrupt>:
    1138:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000113c <crc16_ram>:
    113c:	fc 01       	movw	r30, r24
    113e:	8f ef       	ldi	r24, 0xFF	; 255
    1140:	9f ef       	ldi	r25, 0xFF	; 255
    1142:	1c c0       	rjmp	.+56     	; 0x117c <crc16_ram+0x40>
    1144:	df 01       	movw	r26, r30
    1146:	11 96       	adiw	r26, 0x01	; 1
    1148:	20 81       	ld	r18, Z
_crc16_update(uint16_t __crc, uint8_t __data)
{
	uint8_t __tmp;
	uint16_t __ret;

	__asm__ __volatile__ (
    114a:	82 27       	eor	r24, r18
    114c:	28 2f       	mov	r18, r24
    114e:	22 95       	swap	r18
    1150:	28 27       	eor	r18, r24
    1152:	02 2e       	mov	r0, r18
    1154:	26 95       	lsr	r18
    1156:	26 95       	lsr	r18
    1158:	20 25       	eor	r18, r0
    115a:	02 2e       	mov	r0, r18
    115c:	26 95       	lsr	r18
    115e:	20 25       	eor	r18, r0
    1160:	27 70       	andi	r18, 0x07	; 7
    1162:	08 2e       	mov	r0, r24
    1164:	89 2f       	mov	r24, r25
    1166:	26 95       	lsr	r18
    1168:	07 94       	ror	r0
    116a:	27 95       	ror	r18
    116c:	90 2d       	mov	r25, r0
    116e:	82 27       	eor	r24, r18
    1170:	06 94       	lsr	r0
    1172:	27 95       	ror	r18
    1174:	90 25       	eor	r25, r0
    1176:	82 27       	eor	r24, r18
    1178:	ba 01       	movw	r22, r20
    117a:	fd 01       	movw	r30, r26
    117c:	ab 01       	movw	r20, r22
    117e:	41 50       	subi	r20, 0x01	; 1
    1180:	51 09       	sbc	r21, r1
    1182:	67 2b       	or	r22, r23
    1184:	f9 f6       	brne	.-66     	; 0x1144 <crc16_ram+0x8>
    1186:	08 95       	ret

00001188 <crc16_eeprom>:
    1188:	ef 92       	push	r14
    118a:	ff 92       	push	r15
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	cf ef       	ldi	r28, 0xFF	; 255
    1196:	df ef       	ldi	r29, 0xFF	; 255
    1198:	21 c0       	rjmp	.+66     	; 0x11dc <crc16_eeprom+0x54>
    119a:	7c 01       	movw	r14, r24
    119c:	2f ef       	ldi	r18, 0xFF	; 255
    119e:	e2 1a       	sub	r14, r18
    11a0:	f2 0a       	sbc	r15, r18
    11a2:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    11a6:	9e 01       	movw	r18, r28
    11a8:	28 27       	eor	r18, r24
    11aa:	82 2f       	mov	r24, r18
    11ac:	82 95       	swap	r24
    11ae:	82 27       	eor	r24, r18
    11b0:	08 2e       	mov	r0, r24
    11b2:	86 95       	lsr	r24
    11b4:	86 95       	lsr	r24
    11b6:	80 25       	eor	r24, r0
    11b8:	08 2e       	mov	r0, r24
    11ba:	86 95       	lsr	r24
    11bc:	80 25       	eor	r24, r0
    11be:	87 70       	andi	r24, 0x07	; 7
    11c0:	02 2e       	mov	r0, r18
    11c2:	23 2f       	mov	r18, r19
    11c4:	86 95       	lsr	r24
    11c6:	07 94       	ror	r0
    11c8:	87 95       	ror	r24
    11ca:	30 2d       	mov	r19, r0
    11cc:	28 27       	eor	r18, r24
    11ce:	06 94       	lsr	r0
    11d0:	87 95       	ror	r24
    11d2:	30 25       	eor	r19, r0
    11d4:	28 27       	eor	r18, r24
    11d6:	e9 01       	movw	r28, r18
    11d8:	b8 01       	movw	r22, r16
    11da:	c7 01       	movw	r24, r14
    11dc:	8b 01       	movw	r16, r22
    11de:	01 50       	subi	r16, 0x01	; 1
    11e0:	11 09       	sbc	r17, r1
    11e2:	67 2b       	or	r22, r23
    11e4:	d1 f6       	brne	.-76     	; 0x119a <crc16_eeprom+0x12>
    11e6:	ce 01       	movw	r24, r28
    11e8:	df 91       	pop	r29
    11ea:	cf 91       	pop	r28
    11ec:	1f 91       	pop	r17
    11ee:	0f 91       	pop	r16
    11f0:	ff 90       	pop	r15
    11f2:	ef 90       	pop	r14
    11f4:	08 95       	ret

000011f6 <crc16_ram_startVal>:
    11f6:	fc 01       	movw	r30, r24
    11f8:	ca 01       	movw	r24, r20
    11fa:	1c c0       	rjmp	.+56     	; 0x1234 <crc16_ram_startVal+0x3e>
    11fc:	df 01       	movw	r26, r30
    11fe:	11 96       	adiw	r26, 0x01	; 1
    1200:	20 81       	ld	r18, Z
    1202:	82 27       	eor	r24, r18
    1204:	28 2f       	mov	r18, r24
    1206:	22 95       	swap	r18
    1208:	28 27       	eor	r18, r24
    120a:	02 2e       	mov	r0, r18
    120c:	26 95       	lsr	r18
    120e:	26 95       	lsr	r18
    1210:	20 25       	eor	r18, r0
    1212:	02 2e       	mov	r0, r18
    1214:	26 95       	lsr	r18
    1216:	20 25       	eor	r18, r0
    1218:	27 70       	andi	r18, 0x07	; 7
    121a:	08 2e       	mov	r0, r24
    121c:	89 2f       	mov	r24, r25
    121e:	26 95       	lsr	r18
    1220:	07 94       	ror	r0
    1222:	27 95       	ror	r18
    1224:	90 2d       	mov	r25, r0
    1226:	82 27       	eor	r24, r18
    1228:	06 94       	lsr	r0
    122a:	27 95       	ror	r18
    122c:	90 25       	eor	r25, r0
    122e:	82 27       	eor	r24, r18
    1230:	ba 01       	movw	r22, r20
    1232:	fd 01       	movw	r30, r26
    1234:	ab 01       	movw	r20, r22
    1236:	41 50       	subi	r20, 0x01	; 1
    1238:	51 09       	sbc	r21, r1
    123a:	67 2b       	or	r22, r23
    123c:	f9 f6       	brne	.-66     	; 0x11fc <crc16_ram_startVal+0x6>
    123e:	08 95       	ret

00001240 <crc16_eeprom_startVal>:
    1240:	ef 92       	push	r14
    1242:	ff 92       	push	r15
    1244:	0f 93       	push	r16
    1246:	1f 93       	push	r17
    1248:	cf 93       	push	r28
    124a:	df 93       	push	r29
    124c:	ea 01       	movw	r28, r20
    124e:	21 c0       	rjmp	.+66     	; 0x1292 <crc16_eeprom_startVal+0x52>
    1250:	7c 01       	movw	r14, r24
    1252:	2f ef       	ldi	r18, 0xFF	; 255
    1254:	e2 1a       	sub	r14, r18
    1256:	f2 0a       	sbc	r15, r18
    1258:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    125c:	ae 01       	movw	r20, r28
    125e:	48 27       	eor	r20, r24
    1260:	84 2f       	mov	r24, r20
    1262:	82 95       	swap	r24
    1264:	84 27       	eor	r24, r20
    1266:	08 2e       	mov	r0, r24
    1268:	86 95       	lsr	r24
    126a:	86 95       	lsr	r24
    126c:	80 25       	eor	r24, r0
    126e:	08 2e       	mov	r0, r24
    1270:	86 95       	lsr	r24
    1272:	80 25       	eor	r24, r0
    1274:	87 70       	andi	r24, 0x07	; 7
    1276:	04 2e       	mov	r0, r20
    1278:	45 2f       	mov	r20, r21
    127a:	86 95       	lsr	r24
    127c:	07 94       	ror	r0
    127e:	87 95       	ror	r24
    1280:	50 2d       	mov	r21, r0
    1282:	48 27       	eor	r20, r24
    1284:	06 94       	lsr	r0
    1286:	87 95       	ror	r24
    1288:	50 25       	eor	r21, r0
    128a:	48 27       	eor	r20, r24
    128c:	ea 01       	movw	r28, r20
    128e:	b8 01       	movw	r22, r16
    1290:	c7 01       	movw	r24, r14
    1292:	8b 01       	movw	r16, r22
    1294:	01 50       	subi	r16, 0x01	; 1
    1296:	11 09       	sbc	r17, r1
    1298:	67 2b       	or	r22, r23
    129a:	d1 f6       	brne	.-76     	; 0x1250 <crc16_eeprom_startVal+0x10>
    129c:	ce 01       	movw	r24, r28
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	ff 90       	pop	r15
    12a8:	ef 90       	pop	r14
    12aa:	08 95       	ret

000012ac <eeprom_ReadManualMap>:
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	82 e3       	ldi	r24, 0x32	; 50
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    12b8:	ec 01       	movw	r28, r24
    12ba:	60 e3       	ldi	r22, 0x30	; 48
    12bc:	70 e0       	ldi	r23, 0x00	; 0
    12be:	82 e0       	ldi	r24, 0x02	; 2
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	62 df       	rcall	.-316    	; 0x1188 <crc16_eeprom>
    12c4:	c8 17       	cp	r28, r24
    12c6:	d9 07       	cpc	r29, r25
    12c8:	81 f4       	brne	.+32     	; 0x12ea <eeprom_ReadManualMap+0x3e>
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    12d2:	8d 34       	cpi	r24, 0x4D	; 77
    12d4:	51 f4       	brne	.+20     	; 0x12ea <eeprom_ReadManualMap+0x3e>
    12d6:	40 e3       	ldi	r20, 0x30	; 48
    12d8:	50 e0       	ldi	r21, 0x00	; 0
    12da:	62 e0       	ldi	r22, 0x02	; 2
    12dc:	70 e0       	ldi	r23, 0x00	; 0
    12de:	87 ed       	ldi	r24, 0xD7	; 215
    12e0:	98 e0       	ldi	r25, 0x08	; 8
    12e2:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	06 c0       	rjmp	.+12     	; 0x12f6 <eeprom_ReadManualMap+0x4a>
    12ea:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    12ee:	81 60       	ori	r24, 0x01	; 1
    12f0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	08 95       	ret

000012fc <eeprom_ReadMidiInMap>:
    12fc:	cf 93       	push	r28
    12fe:	df 93       	push	r29
    1300:	85 e3       	ldi	r24, 0x35	; 53
    1302:	91 e0       	ldi	r25, 0x01	; 1
    1304:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    1308:	ec 01       	movw	r28, r24
    130a:	60 e0       	ldi	r22, 0x00	; 0
    130c:	71 e0       	ldi	r23, 0x01	; 1
    130e:	85 e3       	ldi	r24, 0x35	; 53
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	3a df       	rcall	.-396    	; 0x1188 <crc16_eeprom>
    1314:	c8 17       	cp	r28, r24
    1316:	d9 07       	cpc	r29, r25
    1318:	81 f4       	brne	.+32     	; 0x133a <eeprom_ReadMidiInMap+0x3e>
    131a:	84 e3       	ldi	r24, 0x34	; 52
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    1322:	89 34       	cpi	r24, 0x49	; 73
    1324:	51 f4       	brne	.+20     	; 0x133a <eeprom_ReadMidiInMap+0x3e>
    1326:	40 e0       	ldi	r20, 0x00	; 0
    1328:	51 e0       	ldi	r21, 0x01	; 1
    132a:	65 e3       	ldi	r22, 0x35	; 53
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	81 ed       	ldi	r24, 0xD1	; 209
    1330:	97 e0       	ldi	r25, 0x07	; 7
    1332:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	06 c0       	rjmp	.+12     	; 0x1346 <eeprom_ReadMidiInMap+0x4a>
    133a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    133e:	82 60       	ori	r24, 0x02	; 2
    1340:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    1344:	8f ef       	ldi	r24, 0xFF	; 255
    1346:	df 91       	pop	r29
    1348:	cf 91       	pop	r28
    134a:	08 95       	ret

0000134c <eeprom_ReadMidiOutMap>:
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	8e e3       	ldi	r24, 0x3E	; 62
    1352:	91 e0       	ldi	r25, 0x01	; 1
    1354:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    1358:	ec 01       	movw	r28, r24
    135a:	66 e0       	ldi	r22, 0x06	; 6
    135c:	70 e0       	ldi	r23, 0x00	; 0
    135e:	88 e3       	ldi	r24, 0x38	; 56
    1360:	91 e0       	ldi	r25, 0x01	; 1
    1362:	12 df       	rcall	.-476    	; 0x1188 <crc16_eeprom>
    1364:	c8 17       	cp	r28, r24
    1366:	d9 07       	cpc	r29, r25
    1368:	c1 f4       	brne	.+48     	; 0x139a <eeprom_ReadMidiOutMap+0x4e>
    136a:	87 e3       	ldi	r24, 0x37	; 55
    136c:	91 e0       	ldi	r25, 0x01	; 1
    136e:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    1372:	8f 34       	cpi	r24, 0x4F	; 79
    1374:	91 f4       	brne	.+36     	; 0x139a <eeprom_ReadMidiOutMap+0x4e>
    1376:	44 e0       	ldi	r20, 0x04	; 4
    1378:	50 e0       	ldi	r21, 0x00	; 0
    137a:	68 e3       	ldi	r22, 0x38	; 56
    137c:	71 e0       	ldi	r23, 0x01	; 1
    137e:	81 ed       	ldi	r24, 0xD1	; 209
    1380:	98 e0       	ldi	r25, 0x08	; 8
    1382:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    1386:	42 e0       	ldi	r20, 0x02	; 2
    1388:	50 e0       	ldi	r21, 0x00	; 0
    138a:	6c e3       	ldi	r22, 0x3C	; 60
    138c:	71 e0       	ldi	r23, 0x01	; 1
    138e:	85 ed       	ldi	r24, 0xD5	; 213
    1390:	98 e0       	ldi	r25, 0x08	; 8
    1392:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	06 c0       	rjmp	.+12     	; 0x13a6 <eeprom_ReadMidiOutMap+0x5a>
    139a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    139e:	84 60       	ori	r24, 0x04	; 4
    13a0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    13a4:	8f ef       	ldi	r24, 0xFF	; 255
    13a6:	df 91       	pop	r29
    13a8:	cf 91       	pop	r28
    13aa:	08 95       	ret

000013ac <eeprom_ReadModules>:
    13ac:	cf 93       	push	r28
    13ae:	df 93       	push	r29
    13b0:	83 e4       	ldi	r24, 0x43	; 67
    13b2:	91 e0       	ldi	r25, 0x01	; 1
    13b4:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    13b8:	ec 01       	movw	r28, r24
    13ba:	61 e0       	ldi	r22, 0x01	; 1
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	81 e4       	ldi	r24, 0x41	; 65
    13c0:	91 e0       	ldi	r25, 0x01	; 1
    13c2:	e2 de       	rcall	.-572    	; 0x1188 <crc16_eeprom>
    13c4:	c8 17       	cp	r28, r24
    13c6:	d9 07       	cpc	r29, r25
    13c8:	a1 f4       	brne	.+40     	; 0x13f2 <eeprom_ReadModules+0x46>
    13ca:	80 e4       	ldi	r24, 0x40	; 64
    13cc:	91 e0       	ldi	r25, 0x01	; 1
    13ce:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    13d2:	89 36       	cpi	r24, 0x69	; 105
    13d4:	71 f4       	brne	.+28     	; 0x13f2 <eeprom_ReadModules+0x46>
    13d6:	81 e4       	ldi	r24, 0x41	; 65
    13d8:	91 e0       	ldi	r25, 0x01	; 1
    13da:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    13de:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <pipe_ModuleAssnRead>
    13e2:	82 e4       	ldi	r24, 0x42	; 66
    13e4:	91 e0       	ldi	r25, 0x01	; 1
    13e6:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    13ea:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <pipe_ModuleAssnWrite>
    13ee:	80 e0       	ldi	r24, 0x00	; 0
    13f0:	06 c0       	rjmp	.+12     	; 0x13fe <eeprom_ReadModules+0x52>
    13f2:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    13f6:	88 60       	ori	r24, 0x08	; 8
    13f8:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    13fc:	8f ef       	ldi	r24, 0xFF	; 255
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	08 95       	ret

00001404 <eeprom_ReadUSB>:
    1404:	cf 93       	push	r28
    1406:	df 93       	push	r29
    1408:	87 e4       	ldi	r24, 0x47	; 71
    140a:	91 e0       	ldi	r25, 0x01	; 1
    140c:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    1410:	ec 01       	movw	r28, r24
    1412:	61 e0       	ldi	r22, 0x01	; 1
    1414:	70 e0       	ldi	r23, 0x00	; 0
    1416:	86 e4       	ldi	r24, 0x46	; 70
    1418:	91 e0       	ldi	r25, 0x01	; 1
    141a:	b6 de       	rcall	.-660    	; 0x1188 <crc16_eeprom>
    141c:	c8 17       	cp	r28, r24
    141e:	d9 07       	cpc	r29, r25
    1420:	71 f4       	brne	.+28     	; 0x143e <eeprom_ReadUSB+0x3a>
    1422:	85 e4       	ldi	r24, 0x45	; 69
    1424:	91 e0       	ldi	r25, 0x01	; 1
    1426:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    142a:	85 35       	cpi	r24, 0x55	; 85
    142c:	41 f4       	brne	.+16     	; 0x143e <eeprom_ReadUSB+0x3a>
    142e:	86 e4       	ldi	r24, 0x46	; 70
    1430:	91 e0       	ldi	r25, 0x01	; 1
    1432:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    1436:	80 93 d0 0b 	sts	0x0BD0, r24	; 0x800bd0 <serusb_Active>
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	06 c0       	rjmp	.+12     	; 0x144a <eeprom_ReadUSB+0x46>
    143e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    1442:	88 60       	ori	r24, 0x08	; 8
    1444:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    1448:	8f ef       	ldi	r24, 0xFF	; 255
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	08 95       	ret

00001450 <eeprom_ReadReg>:
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	61 e0       	ldi	r22, 0x01	; 1
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	8a e4       	ldi	r24, 0x4A	; 74
    145a:	91 e0       	ldi	r25, 0x01	; 1
    145c:	95 de       	rcall	.-726    	; 0x1188 <crc16_eeprom>
    145e:	ac 01       	movw	r20, r24
    1460:	68 e1       	ldi	r22, 0x18	; 24
    1462:	70 e0       	ldi	r23, 0x00	; 0
    1464:	8b e4       	ldi	r24, 0x4B	; 75
    1466:	91 e0       	ldi	r25, 0x01	; 1
    1468:	eb de       	rcall	.-554    	; 0x1240 <crc16_eeprom_startVal>
    146a:	ec 01       	movw	r28, r24
    146c:	83 e6       	ldi	r24, 0x63	; 99
    146e:	91 e0       	ldi	r25, 0x01	; 1
    1470:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    1474:	c8 17       	cp	r28, r24
    1476:	d9 07       	cpc	r29, r25
    1478:	b1 f4       	brne	.+44     	; 0x14a6 <eeprom_ReadReg+0x56>
    147a:	89 e4       	ldi	r24, 0x49	; 73
    147c:	91 e0       	ldi	r25, 0x01	; 1
    147e:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    1482:	82 35       	cpi	r24, 0x52	; 82
    1484:	81 f4       	brne	.+32     	; 0x14a6 <eeprom_ReadReg+0x56>
    1486:	8a e4       	ldi	r24, 0x4A	; 74
    1488:	91 e0       	ldi	r25, 0x01	; 1
    148a:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    148e:	80 93 bb 07 	sts	0x07BB, r24	; 0x8007bb <registerCount>
    1492:	48 e1       	ldi	r20, 0x18	; 24
    1494:	50 e0       	ldi	r21, 0x00	; 0
    1496:	6b e4       	ldi	r22, 0x4B	; 75
    1498:	71 e0       	ldi	r23, 0x01	; 1
    149a:	83 ea       	ldi	r24, 0xA3	; 163
    149c:	97 e0       	ldi	r25, 0x07	; 7
    149e:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	06 c0       	rjmp	.+12     	; 0x14b2 <eeprom_ReadReg+0x62>
    14a6:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    14aa:	80 62       	ori	r24, 0x20	; 32
    14ac:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    14b0:	8f ef       	ldi	r24, 0xFF	; 255
    14b2:	df 91       	pop	r29
    14b4:	cf 91       	pop	r28
    14b6:	08 95       	ret

000014b8 <eeprom_ReadProg>:
    14b8:	cf 93       	push	r28
    14ba:	df 93       	push	r29
    14bc:	86 ee       	ldi	r24, 0xE6	; 230
    14be:	93 e0       	ldi	r25, 0x03	; 3
    14c0:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    14c4:	ec 01       	movw	r28, r24
    14c6:	60 e8       	ldi	r22, 0x80	; 128
    14c8:	72 e0       	ldi	r23, 0x02	; 2
    14ca:	86 e6       	ldi	r24, 0x66	; 102
    14cc:	91 e0       	ldi	r25, 0x01	; 1
    14ce:	5c de       	rcall	.-840    	; 0x1188 <crc16_eeprom>
    14d0:	c8 17       	cp	r28, r24
    14d2:	d9 07       	cpc	r29, r25
    14d4:	81 f4       	brne	.+32     	; 0x14f6 <eeprom_ReadProg+0x3e>
    14d6:	85 e6       	ldi	r24, 0x65	; 101
    14d8:	91 e0       	ldi	r25, 0x01	; 1
    14da:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    14de:	80 35       	cpi	r24, 0x50	; 80
    14e0:	51 f4       	brne	.+20     	; 0x14f6 <eeprom_ReadProg+0x3e>
    14e2:	40 e8       	ldi	r20, 0x80	; 128
    14e4:	52 e0       	ldi	r21, 0x02	; 2
    14e6:	66 e6       	ldi	r22, 0x66	; 102
    14e8:	71 e0       	ldi	r23, 0x01	; 1
    14ea:	87 e0       	ldi	r24, 0x07	; 7
    14ec:	99 e0       	ldi	r25, 0x09	; 9
    14ee:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	06 c0       	rjmp	.+12     	; 0x1502 <eeprom_ReadProg+0x4a>
    14f6:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    14fa:	80 64       	ori	r24, 0x40	; 64
    14fc:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    1500:	8f ef       	ldi	r24, 0xFF	; 255
    1502:	df 91       	pop	r29
    1504:	cf 91       	pop	r28
    1506:	08 95       	ret

00001508 <eeprom_ReadSoftkeys>:
    1508:	cf 93       	push	r28
    150a:	df 93       	push	r29
    150c:	8d ee       	ldi	r24, 0xED	; 237
    150e:	93 e0       	ldi	r25, 0x03	; 3
    1510:	0e 94 b7 32 	call	0x656e	; 0x656e <eeprom_read_word>
    1514:	ec 01       	movw	r28, r24
    1516:	64 e0       	ldi	r22, 0x04	; 4
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	89 ee       	ldi	r24, 0xE9	; 233
    151c:	93 e0       	ldi	r25, 0x03	; 3
    151e:	34 de       	rcall	.-920    	; 0x1188 <crc16_eeprom>
    1520:	c8 17       	cp	r28, r24
    1522:	d9 07       	cpc	r29, r25
    1524:	51 f4       	brne	.+20     	; 0x153a <eeprom_ReadSoftkeys+0x32>
    1526:	44 e0       	ldi	r20, 0x04	; 4
    1528:	50 e0       	ldi	r21, 0x00	; 0
    152a:	69 ee       	ldi	r22, 0xE9	; 233
    152c:	73 e0       	ldi	r23, 0x03	; 3
    152e:	80 e6       	ldi	r24, 0x60	; 96
    1530:	95 e0       	ldi	r25, 0x05	; 5
    1532:	0e 94 9f 32 	call	0x653e	; 0x653e <eeprom_read_block>
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	06 c0       	rjmp	.+12     	; 0x1546 <eeprom_ReadSoftkeys+0x3e>
    153a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
    153e:	80 68       	ori	r24, 0x80	; 128
    1540:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
    1544:	8f ef       	ldi	r24, 0xFF	; 255
    1546:	df 91       	pop	r29
    1548:	cf 91       	pop	r28
    154a:	08 95       	ret

0000154c <eepromWriteSignature>:
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	80 e0       	ldi	r24, 0x00	; 0
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1556:	65 e6       	ldi	r22, 0x65	; 101
    1558:	8f ee       	ldi	r24, 0xEF	; 239
    155a:	93 e0       	ldi	r25, 0x03	; 3
    155c:	0c 94 cb 32 	jmp	0x6596	; 0x6596 <eeprom_update_byte>
    1560:	08 95       	ret

00001562 <eeprom_UpdateManualMap>:
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	60 e3       	ldi	r22, 0x30	; 48
    1568:	70 e0       	ldi	r23, 0x00	; 0
    156a:	87 ed       	ldi	r24, 0xD7	; 215
    156c:	98 e0       	ldi	r25, 0x08	; 8
    156e:	e6 dd       	rcall	.-1076   	; 0x113c <crc16_ram>
    1570:	ec 01       	movw	r28, r24
    1572:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    1576:	6d e4       	ldi	r22, 0x4D	; 77
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1580:	40 e3       	ldi	r20, 0x30	; 48
    1582:	50 e0       	ldi	r21, 0x00	; 0
    1584:	62 e0       	ldi	r22, 0x02	; 2
    1586:	70 e0       	ldi	r23, 0x00	; 0
    1588:	87 ed       	ldi	r24, 0xD7	; 215
    158a:	98 e0       	ldi	r25, 0x08	; 8
    158c:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    1590:	be 01       	movw	r22, r28
    1592:	82 e3       	ldi	r24, 0x32	; 50
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    159a:	d8 df       	rcall	.-80     	; 0x154c <eepromWriteSignature>
    159c:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    15a0:	df 91       	pop	r29
    15a2:	cf 91       	pop	r28
    15a4:	08 95       	ret

000015a6 <eeprom_UpdateMidiInMap>:
    15a6:	cf 93       	push	r28
    15a8:	df 93       	push	r29
    15aa:	60 e0       	ldi	r22, 0x00	; 0
    15ac:	71 e0       	ldi	r23, 0x01	; 1
    15ae:	81 ed       	ldi	r24, 0xD1	; 209
    15b0:	97 e0       	ldi	r25, 0x07	; 7
    15b2:	c4 dd       	rcall	.-1144   	; 0x113c <crc16_ram>
    15b4:	ec 01       	movw	r28, r24
    15b6:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    15ba:	69 e4       	ldi	r22, 0x49	; 73
    15bc:	84 e3       	ldi	r24, 0x34	; 52
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    15c4:	40 e0       	ldi	r20, 0x00	; 0
    15c6:	51 e0       	ldi	r21, 0x01	; 1
    15c8:	65 e3       	ldi	r22, 0x35	; 53
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	81 ed       	ldi	r24, 0xD1	; 209
    15ce:	97 e0       	ldi	r25, 0x07	; 7
    15d0:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    15d4:	be 01       	movw	r22, r28
    15d6:	85 e3       	ldi	r24, 0x35	; 53
    15d8:	91 e0       	ldi	r25, 0x01	; 1
    15da:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    15de:	b6 df       	rcall	.-148    	; 0x154c <eepromWriteSignature>
    15e0:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    15e4:	df 91       	pop	r29
    15e6:	cf 91       	pop	r28
    15e8:	08 95       	ret

000015ea <eeprom_UpdateMidiOutMap>:
    15ea:	cf 93       	push	r28
    15ec:	df 93       	push	r29
    15ee:	64 e0       	ldi	r22, 0x04	; 4
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	81 ed       	ldi	r24, 0xD1	; 209
    15f4:	98 e0       	ldi	r25, 0x08	; 8
    15f6:	a2 dd       	rcall	.-1212   	; 0x113c <crc16_ram>
    15f8:	ac 01       	movw	r20, r24
    15fa:	62 e0       	ldi	r22, 0x02	; 2
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	85 ed       	ldi	r24, 0xD5	; 213
    1600:	98 e0       	ldi	r25, 0x08	; 8
    1602:	f9 dd       	rcall	.-1038   	; 0x11f6 <crc16_ram_startVal>
    1604:	ec 01       	movw	r28, r24
    1606:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    160a:	6f e4       	ldi	r22, 0x4F	; 79
    160c:	87 e3       	ldi	r24, 0x37	; 55
    160e:	91 e0       	ldi	r25, 0x01	; 1
    1610:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1614:	44 e0       	ldi	r20, 0x04	; 4
    1616:	50 e0       	ldi	r21, 0x00	; 0
    1618:	68 e3       	ldi	r22, 0x38	; 56
    161a:	71 e0       	ldi	r23, 0x01	; 1
    161c:	81 ed       	ldi	r24, 0xD1	; 209
    161e:	98 e0       	ldi	r25, 0x08	; 8
    1620:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    1624:	42 e0       	ldi	r20, 0x02	; 2
    1626:	50 e0       	ldi	r21, 0x00	; 0
    1628:	6c e3       	ldi	r22, 0x3C	; 60
    162a:	71 e0       	ldi	r23, 0x01	; 1
    162c:	85 ed       	ldi	r24, 0xD5	; 213
    162e:	98 e0       	ldi	r25, 0x08	; 8
    1630:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    1634:	be 01       	movw	r22, r28
    1636:	8e e3       	ldi	r24, 0x3E	; 62
    1638:	91 e0       	ldi	r25, 0x01	; 1
    163a:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    163e:	86 df       	rcall	.-244    	; 0x154c <eepromWriteSignature>
    1640:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    1644:	df 91       	pop	r29
    1646:	cf 91       	pop	r28
    1648:	08 95       	ret

0000164a <eeprom_UpdateModules>:
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	61 e0       	ldi	r22, 0x01	; 1
    1650:	70 e0       	ldi	r23, 0x00	; 0
    1652:	8e e4       	ldi	r24, 0x4E	; 78
    1654:	93 e0       	ldi	r25, 0x03	; 3
    1656:	72 dd       	rcall	.-1308   	; 0x113c <crc16_ram>
    1658:	ec 01       	movw	r28, r24
    165a:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    165e:	69 e6       	ldi	r22, 0x69	; 105
    1660:	80 e4       	ldi	r24, 0x40	; 64
    1662:	91 e0       	ldi	r25, 0x01	; 1
    1664:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1668:	60 91 4e 03 	lds	r22, 0x034E	; 0x80034e <pipe_ModuleAssnRead>
    166c:	81 e4       	ldi	r24, 0x41	; 65
    166e:	91 e0       	ldi	r25, 0x01	; 1
    1670:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1674:	60 91 4d 03 	lds	r22, 0x034D	; 0x80034d <pipe_ModuleAssnWrite>
    1678:	82 e4       	ldi	r24, 0x42	; 66
    167a:	91 e0       	ldi	r25, 0x01	; 1
    167c:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1680:	be 01       	movw	r22, r28
    1682:	83 e4       	ldi	r24, 0x43	; 67
    1684:	91 e0       	ldi	r25, 0x01	; 1
    1686:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    168a:	60 df       	rcall	.-320    	; 0x154c <eepromWriteSignature>
    168c:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    1690:	df 91       	pop	r29
    1692:	cf 91       	pop	r28
    1694:	08 95       	ret

00001696 <eeprom_UpdateUSB>:
    1696:	cf 93       	push	r28
    1698:	df 93       	push	r29
    169a:	61 e0       	ldi	r22, 0x01	; 1
    169c:	70 e0       	ldi	r23, 0x00	; 0
    169e:	80 ed       	ldi	r24, 0xD0	; 208
    16a0:	9b e0       	ldi	r25, 0x0B	; 11
    16a2:	4c dd       	rcall	.-1384   	; 0x113c <crc16_ram>
    16a4:	ec 01       	movw	r28, r24
    16a6:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    16aa:	65 e5       	ldi	r22, 0x55	; 85
    16ac:	85 e4       	ldi	r24, 0x45	; 69
    16ae:	91 e0       	ldi	r25, 0x01	; 1
    16b0:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    16b4:	60 91 d0 0b 	lds	r22, 0x0BD0	; 0x800bd0 <serusb_Active>
    16b8:	86 e4       	ldi	r24, 0x46	; 70
    16ba:	91 e0       	ldi	r25, 0x01	; 1
    16bc:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    16c0:	be 01       	movw	r22, r28
    16c2:	87 e4       	ldi	r24, 0x47	; 71
    16c4:	91 e0       	ldi	r25, 0x01	; 1
    16c6:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    16ca:	40 df       	rcall	.-384    	; 0x154c <eepromWriteSignature>
    16cc:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    16d0:	df 91       	pop	r29
    16d2:	cf 91       	pop	r28
    16d4:	08 95       	ret

000016d6 <eeprom_UpdateReg>:
    16d6:	cf 93       	push	r28
    16d8:	df 93       	push	r29
    16da:	61 e0       	ldi	r22, 0x01	; 1
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	8b eb       	ldi	r24, 0xBB	; 187
    16e0:	97 e0       	ldi	r25, 0x07	; 7
    16e2:	2c dd       	rcall	.-1448   	; 0x113c <crc16_ram>
    16e4:	ac 01       	movw	r20, r24
    16e6:	68 e1       	ldi	r22, 0x18	; 24
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	83 ea       	ldi	r24, 0xA3	; 163
    16ec:	97 e0       	ldi	r25, 0x07	; 7
    16ee:	83 dd       	rcall	.-1274   	; 0x11f6 <crc16_ram_startVal>
    16f0:	ec 01       	movw	r28, r24
    16f2:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    16f6:	62 e5       	ldi	r22, 0x52	; 82
    16f8:	89 e4       	ldi	r24, 0x49	; 73
    16fa:	91 e0       	ldi	r25, 0x01	; 1
    16fc:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1700:	60 91 bb 07 	lds	r22, 0x07BB	; 0x8007bb <registerCount>
    1704:	8a e4       	ldi	r24, 0x4A	; 74
    1706:	91 e0       	ldi	r25, 0x01	; 1
    1708:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    170c:	48 e1       	ldi	r20, 0x18	; 24
    170e:	50 e0       	ldi	r21, 0x00	; 0
    1710:	6b e4       	ldi	r22, 0x4B	; 75
    1712:	71 e0       	ldi	r23, 0x01	; 1
    1714:	83 ea       	ldi	r24, 0xA3	; 163
    1716:	97 e0       	ldi	r25, 0x07	; 7
    1718:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    171c:	be 01       	movw	r22, r28
    171e:	83 e6       	ldi	r24, 0x63	; 99
    1720:	91 e0       	ldi	r25, 0x01	; 1
    1722:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    1726:	12 df       	rcall	.-476    	; 0x154c <eepromWriteSignature>
    1728:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    172c:	df 91       	pop	r29
    172e:	cf 91       	pop	r28
    1730:	08 95       	ret

00001732 <eeprom_UpdateProg>:
    1732:	cf 93       	push	r28
    1734:	df 93       	push	r29
    1736:	60 e8       	ldi	r22, 0x80	; 128
    1738:	72 e0       	ldi	r23, 0x02	; 2
    173a:	87 e0       	ldi	r24, 0x07	; 7
    173c:	99 e0       	ldi	r25, 0x09	; 9
    173e:	fe dc       	rcall	.-1540   	; 0x113c <crc16_ram>
    1740:	ec 01       	movw	r28, r24
    1742:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    1746:	60 e5       	ldi	r22, 0x50	; 80
    1748:	85 e6       	ldi	r24, 0x65	; 101
    174a:	91 e0       	ldi	r25, 0x01	; 1
    174c:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1750:	40 e8       	ldi	r20, 0x80	; 128
    1752:	52 e0       	ldi	r21, 0x02	; 2
    1754:	66 e6       	ldi	r22, 0x66	; 102
    1756:	71 e0       	ldi	r23, 0x01	; 1
    1758:	87 e0       	ldi	r24, 0x07	; 7
    175a:	99 e0       	ldi	r25, 0x09	; 9
    175c:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    1760:	be 01       	movw	r22, r28
    1762:	86 ee       	ldi	r24, 0xE6	; 230
    1764:	93 e0       	ldi	r25, 0x03	; 3
    1766:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    176a:	f0 de       	rcall	.-544    	; 0x154c <eepromWriteSignature>
    176c:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    1770:	df 91       	pop	r29
    1772:	cf 91       	pop	r28
    1774:	08 95       	ret

00001776 <eeprom_UpdateSoftkeys>:
    1776:	cf 93       	push	r28
    1778:	df 93       	push	r29
    177a:	64 e0       	ldi	r22, 0x04	; 4
    177c:	70 e0       	ldi	r23, 0x00	; 0
    177e:	80 e6       	ldi	r24, 0x60	; 96
    1780:	95 e0       	ldi	r25, 0x05	; 5
    1782:	dc dc       	rcall	.-1608   	; 0x113c <crc16_ram>
    1784:	ec 01       	movw	r28, r24
    1786:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    178a:	6b e4       	ldi	r22, 0x4B	; 75
    178c:	88 ee       	ldi	r24, 0xE8	; 232
    178e:	93 e0       	ldi	r25, 0x03	; 3
    1790:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    1794:	44 e0       	ldi	r20, 0x04	; 4
    1796:	50 e0       	ldi	r21, 0x00	; 0
    1798:	69 ee       	ldi	r22, 0xE9	; 233
    179a:	73 e0       	ldi	r23, 0x03	; 3
    179c:	80 e6       	ldi	r24, 0x60	; 96
    179e:	95 e0       	ldi	r25, 0x05	; 5
    17a0:	0e 94 bc 32 	call	0x6578	; 0x6578 <eeprom_update_block>
    17a4:	be 01       	movw	r22, r28
    17a6:	8d ee       	ldi	r24, 0xED	; 237
    17a8:	93 e0       	ldi	r25, 0x03	; 3
    17aa:	0e 94 dd 32 	call	0x65ba	; 0x65ba <eeprom_update_word>
    17ae:	ce de       	rcall	.-612    	; 0x154c <eepromWriteSignature>
    17b0:	0e 94 d7 31 	call	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    17b4:	df 91       	pop	r29
    17b6:	cf 91       	pop	r28
    17b8:	08 95       	ret

000017ba <eeprom_UpdateALL>:
    17ba:	d3 de       	rcall	.-602    	; 0x1562 <eeprom_UpdateManualMap>
    17bc:	f4 de       	rcall	.-536    	; 0x15a6 <eeprom_UpdateMidiInMap>
    17be:	15 df       	rcall	.-470    	; 0x15ea <eeprom_UpdateMidiOutMap>
    17c0:	44 df       	rcall	.-376    	; 0x164a <eeprom_UpdateModules>
    17c2:	69 df       	rcall	.-302    	; 0x1696 <eeprom_UpdateUSB>
    17c4:	88 df       	rcall	.-240    	; 0x16d6 <eeprom_UpdateReg>
    17c6:	b5 df       	rcall	.-150    	; 0x1732 <eeprom_UpdateProg>
    17c8:	d6 cf       	rjmp	.-84     	; 0x1776 <eeprom_UpdateSoftkeys>
    17ca:	08 95       	ret

000017cc <eepromCopy>:
    17cc:	cf 92       	push	r12
    17ce:	df 92       	push	r13
    17d0:	ef 92       	push	r14
    17d2:	ff 92       	push	r15
    17d4:	0f 93       	push	r16
    17d6:	1f 93       	push	r17
    17d8:	cf 93       	push	r28
    17da:	df 93       	push	r29
    17dc:	eb 01       	movw	r28, r22
    17de:	11 c0       	rjmp	.+34     	; 0x1802 <eepromCopy+0x36>
    17e0:	7c 01       	movw	r14, r24
    17e2:	2f ef       	ldi	r18, 0xFF	; 255
    17e4:	e2 1a       	sub	r14, r18
    17e6:	f2 0a       	sbc	r15, r18
    17e8:	0e 94 af 32 	call	0x655e	; 0x655e <eeprom_read_byte>
    17ec:	6e 01       	movw	r12, r28
    17ee:	9f ef       	ldi	r25, 0xFF	; 255
    17f0:	c9 1a       	sub	r12, r25
    17f2:	d9 0a       	sbc	r13, r25
    17f4:	68 2f       	mov	r22, r24
    17f6:	ce 01       	movw	r24, r28
    17f8:	0e 94 cb 32 	call	0x6596	; 0x6596 <eeprom_update_byte>
    17fc:	a8 01       	movw	r20, r16
    17fe:	e6 01       	movw	r28, r12
    1800:	c7 01       	movw	r24, r14
    1802:	8a 01       	movw	r16, r20
    1804:	01 50       	subi	r16, 0x01	; 1
    1806:	11 09       	sbc	r17, r1
    1808:	45 2b       	or	r20, r21
    180a:	51 f7       	brne	.-44     	; 0x17e0 <eepromCopy+0x14>
    180c:	df 91       	pop	r29
    180e:	cf 91       	pop	r28
    1810:	1f 91       	pop	r17
    1812:	0f 91       	pop	r16
    1814:	ff 90       	pop	r15
    1816:	ef 90       	pop	r14
    1818:	df 90       	pop	r13
    181a:	cf 90       	pop	r12
    181c:	08 95       	ret

0000181e <eeprom_Backup>:
    181e:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    1822:	40 e0       	ldi	r20, 0x00	; 0
    1824:	58 e0       	ldi	r21, 0x08	; 8
    1826:	60 e0       	ldi	r22, 0x00	; 0
    1828:	78 e0       	ldi	r23, 0x08	; 8
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	ce df       	rcall	.-100    	; 0x17cc <eepromCopy>
    1830:	0c 94 d7 31 	jmp	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    1834:	08 95       	ret

00001836 <eeprom_Restore>:
    1836:	0e 94 c9 31 	call	0x6392	; 0x6392 <lcd_waitSymbolOn>
    183a:	40 e0       	ldi	r20, 0x00	; 0
    183c:	58 e0       	ldi	r21, 0x08	; 8
    183e:	60 e0       	ldi	r22, 0x00	; 0
    1840:	70 e0       	ldi	r23, 0x00	; 0
    1842:	80 e0       	ldi	r24, 0x00	; 0
    1844:	98 e0       	ldi	r25, 0x08	; 8
    1846:	c2 df       	rcall	.-124    	; 0x17cc <eepromCopy>
    1848:	0c 94 d7 31 	jmp	0x63ae	; 0x63ae <lcd_waitSymbolOff>
    184c:	08 95       	ret

0000184e <init_Timers>:
	}
	pipeProcessing = PIPE_IO_START;
	while ((pipeProcessing & PIPE_IO_INOUT_DONE) == 0){
		// wait for Data read back from input
	}
}
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	0a c0       	rjmp	.+20     	; 0x1866 <init_Timers+0x18>
    1852:	e8 2f       	mov	r30, r24
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	ee 0f       	add	r30, r30
    1858:	ff 1f       	adc	r31, r31
    185a:	e3 5d       	subi	r30, 0xD3	; 211
    185c:	fd 4f       	sbci	r31, 0xFD	; 253
    185e:	9f ef       	ldi	r25, 0xFF	; 255
    1860:	90 83       	st	Z, r25
    1862:	11 82       	std	Z+1, r1	; 0x01
    1864:	8f 5f       	subi	r24, 0xFF	; 255
    1866:	89 30       	cpi	r24, 0x09	; 9
    1868:	a0 f3       	brcs	.-24     	; 0x1852 <init_Timers+0x4>
    186a:	ef e3       	ldi	r30, 0x3F	; 63
    186c:	f2 e0       	ldi	r31, 0x02	; 2
    186e:	10 82       	st	Z, r1
    1870:	11 82       	std	Z+1, r1	; 0x01
    1872:	12 82       	std	Z+2, r1	; 0x02
    1874:	13 82       	std	Z+3, r1	; 0x03
    1876:	8f ef       	ldi	r24, 0xFF	; 255
    1878:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <time_UpTimeUpdated>
    187c:	08 95       	ret

0000187e <init_HwTimer>:
    187e:	82 e0       	ldi	r24, 0x02	; 2
    1880:	84 bd       	out	0x24, r24	; 36
    1882:	93 e0       	ldi	r25, 0x03	; 3
    1884:	95 bd       	out	0x25, r25	; 37
    1886:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
    188a:	89 ef       	ldi	r24, 0xF9	; 249
    188c:	87 bd       	out	0x27, r24	; 39
    188e:	85 b1       	in	r24, 0x05	; 5
    1890:	8f 77       	andi	r24, 0x7F	; 127
    1892:	85 b9       	out	0x05, r24	; 5
    1894:	84 b1       	in	r24, 0x04	; 4
    1896:	80 68       	ori	r24, 0x80	; 128
    1898:	84 b9       	out	0x04, r24	; 4
    189a:	08 95       	ret

0000189c <init_ADC>:
    189c:	87 e8       	ldi	r24, 0x87	; 135
    189e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    18a2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
    18a6:	8f e7       	ldi	r24, 0x7F	; 127
    18a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
    18b2:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <__TEXT_REGION_LENGTH__+0x70007f>
    18b6:	e7 e4       	ldi	r30, 0x47	; 71
    18b8:	f3 e0       	ldi	r31, 0x03	; 3
    18ba:	10 82       	st	Z, r1
    18bc:	8f ef       	ldi	r24, 0xFF	; 255
    18be:	81 83       	std	Z+1, r24	; 0x01
    18c0:	82 83       	std	Z+2, r24	; 0x02
    18c2:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <adcNr>
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	10 c0       	rjmp	.+32     	; 0x18ea <init_ADC+0x4e>
    18ca:	85 30       	cpi	r24, 0x05	; 5
    18cc:	39 f4       	brne	.+14     	; 0x18dc <init_ADC+0x40>
    18ce:	e8 2f       	mov	r30, r24
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	e1 5b       	subi	r30, 0xB1	; 177
    18d4:	fc 4f       	sbci	r31, 0xFC	; 252
    18d6:	96 e0       	ldi	r25, 0x06	; 6
    18d8:	90 83       	st	Z, r25
    18da:	06 c0       	rjmp	.+12     	; 0x18e8 <init_ADC+0x4c>
    18dc:	e8 2f       	mov	r30, r24
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	e1 5b       	subi	r30, 0xB1	; 177
    18e2:	fc 4f       	sbci	r31, 0xFC	; 252
    18e4:	9a e0       	ldi	r25, 0x0A	; 10
    18e6:	90 83       	st	Z, r25
    18e8:	8f 5f       	subi	r24, 0xFF	; 255
    18ea:	86 30       	cpi	r24, 0x06	; 6
    18ec:	70 f3       	brcs	.-36     	; 0x18ca <init_ADC+0x2e>
    18ee:	08 95       	ret

000018f0 <init_Pipe>:
    18f0:	8f ef       	ldi	r24, 0xFF	; 255
    18f2:	88 b9       	out	0x08, r24	; 8
    18f4:	87 b9       	out	0x07, r24	; 7
    18f6:	82 b9       	out	0x02, r24	; 2
    18f8:	11 b8       	out	0x01, r1	; 1
    18fa:	84 b3       	in	r24, 0x14	; 20
    18fc:	87 60       	ori	r24, 0x07	; 7
    18fe:	84 bb       	out	0x14, r24	; 20
    1900:	83 b3       	in	r24, 0x13	; 19
    1902:	87 60       	ori	r24, 0x07	; 7
    1904:	83 bb       	out	0x13, r24	; 19
    1906:	8b b1       	in	r24, 0x0b	; 11
    1908:	8f 77       	andi	r24, 0x7F	; 127
    190a:	8b b9       	out	0x0b, r24	; 11
    190c:	8a b1       	in	r24, 0x0a	; 10
    190e:	80 68       	ori	r24, 0x80	; 128
    1910:	8a b9       	out	0x0a, r24	; 10
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	0e c0       	rjmp	.+28     	; 0x1932 <init_Pipe+0x42>
    1916:	e8 2f       	mov	r30, r24
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	ee 0f       	add	r30, r30
    191c:	ff 1f       	adc	r31, r31
    191e:	ee 0f       	add	r30, r30
    1920:	ff 1f       	adc	r31, r31
    1922:	ee 0f       	add	r30, r30
    1924:	ff 1f       	adc	r31, r31
    1926:	e9 5b       	subi	r30, 0xB9	; 185
    1928:	fd 4f       	sbci	r31, 0xFD	; 253
    192a:	9f ef       	ldi	r25, 0xFF	; 255
    192c:	91 83       	std	Z+1, r25	; 0x01
    192e:	90 83       	st	Z, r25
    1930:	8f 5f       	subi	r24, 0xFF	; 255
    1932:	80 32       	cpi	r24, 0x20	; 32
    1934:	80 f3       	brcs	.-32     	; 0x1916 <init_Pipe+0x26>
    1936:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <pipeProcessing>
    193a:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <pipe_PowerStatus>
    193e:	08 95       	ret

00001940 <init_PipeModules>:
    1940:	35 dd       	rcall	.-1430   	; 0x13ac <eeprom_ReadModules>
    1942:	8f 3f       	cpi	r24, 0xFF	; 255
    1944:	51 f4       	brne	.+20     	; 0x195a <init_PipeModules+0x1a>
    1946:	40 e0       	ldi	r20, 0x00	; 0
    1948:	50 e0       	ldi	r21, 0x00	; 0
    194a:	60 e0       	ldi	r22, 0x00	; 0
    194c:	81 e0       	ldi	r24, 0x01	; 1
    194e:	aa d6       	rcall	.+3412   	; 0x26a4 <log_putError>
    1950:	8f ef       	ldi	r24, 0xFF	; 255
    1952:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <pipe_ModuleAssnRead>
    1956:	80 93 4d 03 	sts	0x034D, r24	; 0x80034d <pipe_ModuleAssnWrite>
    195a:	8b b1       	in	r24, 0x0b	; 11
    195c:	8f 77       	andi	r24, 0x7F	; 127
    195e:	8b b9       	out	0x0b, r24	; 11
    1960:	84 b3       	in	r24, 0x14	; 20
    1962:	87 60       	ori	r24, 0x07	; 7
    1964:	84 bb       	out	0x14, r24	; 20
    1966:	84 b3       	in	r24, 0x14	; 20
    1968:	8b 7f       	andi	r24, 0xFB	; 251
    196a:	84 bb       	out	0x14, r24	; 20
    196c:	85 e0       	ldi	r24, 0x05	; 5
    196e:	8a 95       	dec	r24
    1970:	f1 f7       	brne	.-4      	; 0x196e <init_PipeModules+0x2e>
    1972:	00 00       	nop
    1974:	84 b3       	in	r24, 0x14	; 20
    1976:	84 60       	ori	r24, 0x04	; 4
    1978:	84 bb       	out	0x14, r24	; 20
    197a:	90 e2       	ldi	r25, 0x20	; 32
    197c:	84 b3       	in	r24, 0x14	; 20
    197e:	81 60       	ori	r24, 0x01	; 1
    1980:	84 bb       	out	0x14, r24	; 20
    1982:	90 fd       	sbrc	r25, 0
    1984:	02 c0       	rjmp	.+4      	; 0x198a <init_PipeModules+0x4a>
    1986:	85 e5       	ldi	r24, 0x55	; 85
    1988:	01 c0       	rjmp	.+2      	; 0x198c <init_PipeModules+0x4c>
    198a:	8a ea       	ldi	r24, 0xAA	; 170
    198c:	88 b9       	out	0x08, r24	; 8
    198e:	80 b1       	in	r24, 0x00	; 0
    1990:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <pipe+0xff>
    1994:	80 93 45 03 	sts	0x0345, r24	; 0x800345 <pipe+0xfe>
    1998:	80 93 44 03 	sts	0x0344, r24	; 0x800344 <pipe+0xfd>
    199c:	80 93 43 03 	sts	0x0343, r24	; 0x800343 <pipe+0xfc>
    19a0:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <pipe+0xfb>
    19a4:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <pipe+0xfa>
    19a8:	84 b3       	in	r24, 0x14	; 20
    19aa:	8e 7f       	andi	r24, 0xFE	; 254
    19ac:	84 bb       	out	0x14, r24	; 20
    19ae:	85 e0       	ldi	r24, 0x05	; 5
    19b0:	8a 95       	dec	r24
    19b2:	f1 f7       	brne	.-4      	; 0x19b0 <init_PipeModules+0x70>
    19b4:	00 00       	nop
    19b6:	91 50       	subi	r25, 0x01	; 1
    19b8:	09 f7       	brne	.-62     	; 0x197c <init_PipeModules+0x3c>
    19ba:	90 e2       	ldi	r25, 0x20	; 32
    19bc:	0f c0       	rjmp	.+30     	; 0x19dc <init_PipeModules+0x9c>
    19be:	84 b3       	in	r24, 0x14	; 20
    19c0:	81 60       	ori	r24, 0x01	; 1
    19c2:	84 bb       	out	0x14, r24	; 20
    19c4:	82 e0       	ldi	r24, 0x02	; 2
    19c6:	8a 95       	dec	r24
    19c8:	f1 f7       	brne	.-4      	; 0x19c6 <init_PipeModules+0x86>
    19ca:	00 c0       	rjmp	.+0      	; 0x19cc <init_PipeModules+0x8c>
    19cc:	84 b3       	in	r24, 0x14	; 20
    19ce:	8e 7f       	andi	r24, 0xFE	; 254
    19d0:	84 bb       	out	0x14, r24	; 20
    19d2:	82 e0       	ldi	r24, 0x02	; 2
    19d4:	8a 95       	dec	r24
    19d6:	f1 f7       	brne	.-4      	; 0x19d4 <init_PipeModules+0x94>
    19d8:	00 c0       	rjmp	.+0      	; 0x19da <init_PipeModules+0x9a>
    19da:	91 50       	subi	r25, 0x01	; 1
    19dc:	91 11       	cpse	r25, r1
    19de:	ef cf       	rjmp	.-34     	; 0x19be <init_PipeModules+0x7e>
    19e0:	8f ef       	ldi	r24, 0xFF	; 255
    19e2:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <pipe_ModuleTested>
    19e6:	90 e2       	ldi	r25, 0x20	; 32
    19e8:	84 b3       	in	r24, 0x14	; 20
    19ea:	81 60       	ori	r24, 0x01	; 1
    19ec:	84 bb       	out	0x14, r24	; 20
    19ee:	8f ef       	ldi	r24, 0xFF	; 255
    19f0:	88 b9       	out	0x08, r24	; 8
    19f2:	20 b1       	in	r18, 0x00	; 0
    19f4:	90 fd       	sbrc	r25, 0
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <init_PipeModules+0xbc>
    19f8:	8a ea       	ldi	r24, 0xAA	; 170
    19fa:	01 c0       	rjmp	.+2      	; 0x19fe <init_PipeModules+0xbe>
    19fc:	85 e5       	ldi	r24, 0x55	; 85
    19fe:	82 27       	eor	r24, r18
    1a00:	20 91 46 02 	lds	r18, 0x0246	; 0x800246 <pipe_ModuleTested>
    1a04:	82 23       	and	r24, r18
    1a06:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <pipe_ModuleTested>
    1a0a:	84 b3       	in	r24, 0x14	; 20
    1a0c:	8e 7f       	andi	r24, 0xFE	; 254
    1a0e:	84 bb       	out	0x14, r24	; 20
    1a10:	85 e0       	ldi	r24, 0x05	; 5
    1a12:	8a 95       	dec	r24
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <init_PipeModules+0xd2>
    1a16:	00 00       	nop
    1a18:	91 50       	subi	r25, 0x01	; 1
    1a1a:	31 f7       	brne	.-52     	; 0x19e8 <init_PipeModules+0xa8>
    1a1c:	00 00       	nop
    1a1e:	00 00       	nop
    1a20:	84 b3       	in	r24, 0x14	; 20
    1a22:	81 60       	ori	r24, 0x01	; 1
    1a24:	84 bb       	out	0x14, r24	; 20
    1a26:	84 b3       	in	r24, 0x14	; 20
    1a28:	87 60       	ori	r24, 0x07	; 7
    1a2a:	84 bb       	out	0x14, r24	; 20
    1a2c:	84 b3       	in	r24, 0x14	; 20
    1a2e:	8b 7f       	andi	r24, 0xFB	; 251
    1a30:	84 bb       	out	0x14, r24	; 20
    1a32:	82 e0       	ldi	r24, 0x02	; 2
    1a34:	8a 95       	dec	r24
    1a36:	f1 f7       	brne	.-4      	; 0x1a34 <init_PipeModules+0xf4>
    1a38:	00 c0       	rjmp	.+0      	; 0x1a3a <init_PipeModules+0xfa>
    1a3a:	84 b3       	in	r24, 0x14	; 20
    1a3c:	84 60       	ori	r24, 0x04	; 4
    1a3e:	84 bb       	out	0x14, r24	; 20
    1a40:	90 e2       	ldi	r25, 0x20	; 32
    1a42:	ef e3       	ldi	r30, 0x3F	; 63
    1a44:	f3 e0       	ldi	r31, 0x03	; 3
    1a46:	83 81       	ldd	r24, Z+3	; 0x03
    1a48:	82 83       	std	Z+2, r24	; 0x02
    1a4a:	84 81       	ldd	r24, Z+4	; 0x04
    1a4c:	83 83       	std	Z+3, r24	; 0x03
    1a4e:	84 b3       	in	r24, 0x14	; 20
    1a50:	81 60       	ori	r24, 0x01	; 1
    1a52:	84 bb       	out	0x14, r24	; 20
    1a54:	8f ef       	ldi	r24, 0xFF	; 255
    1a56:	81 83       	std	Z+1, r24	; 0x01
    1a58:	88 b9       	out	0x08, r24	; 8
    1a5a:	85 81       	ldd	r24, Z+5	; 0x05
    1a5c:	84 83       	std	Z+4, r24	; 0x04
    1a5e:	86 81       	ldd	r24, Z+6	; 0x06
    1a60:	85 83       	std	Z+5, r24	; 0x05
    1a62:	80 b1       	in	r24, 0x00	; 0
    1a64:	86 83       	std	Z+6, r24	; 0x06
    1a66:	82 83       	std	Z+2, r24	; 0x02
    1a68:	83 83       	std	Z+3, r24	; 0x03
    1a6a:	84 83       	std	Z+4, r24	; 0x04
    1a6c:	85 83       	std	Z+5, r24	; 0x05
    1a6e:	87 83       	std	Z+7, r24	; 0x07
    1a70:	84 b3       	in	r24, 0x14	; 20
    1a72:	8e 7f       	andi	r24, 0xFE	; 254
    1a74:	84 bb       	out	0x14, r24	; 20
    1a76:	38 97       	sbiw	r30, 0x08	; 8
    1a78:	91 50       	subi	r25, 0x01	; 1
    1a7a:	29 f7       	brne	.-54     	; 0x1a46 <init_PipeModules+0x106>
    1a7c:	00 00       	nop
    1a7e:	00 00       	nop
    1a80:	84 b3       	in	r24, 0x14	; 20
    1a82:	81 60       	ori	r24, 0x01	; 1
    1a84:	84 bb       	out	0x14, r24	; 20
    1a86:	84 b3       	in	r24, 0x14	; 20
    1a88:	8d 7f       	andi	r24, 0xFD	; 253
    1a8a:	84 bb       	out	0x14, r24	; 20
    1a8c:	18 b8       	out	0x08, r1	; 8
    1a8e:	85 e0       	ldi	r24, 0x05	; 5
    1a90:	8a 95       	dec	r24
    1a92:	f1 f7       	brne	.-4      	; 0x1a90 <init_PipeModules+0x150>
    1a94:	00 00       	nop
    1a96:	84 b3       	in	r24, 0x14	; 20
    1a98:	82 60       	ori	r24, 0x02	; 2
    1a9a:	84 bb       	out	0x14, r24	; 20
    1a9c:	40 91 4e 03 	lds	r20, 0x034E	; 0x80034e <pipe_ModuleAssnRead>
    1aa0:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <pipe_ModuleAssnWrite>
    1aa4:	84 2b       	or	r24, r20
    1aa6:	90 91 46 02 	lds	r25, 0x0246	; 0x800246 <pipe_ModuleTested>
    1aaa:	89 17       	cp	r24, r25
    1aac:	39 f0       	breq	.+14     	; 0x1abc <init_PipeModules+0x17c>
    1aae:	50 e0       	ldi	r21, 0x00	; 0
    1ab0:	54 2f       	mov	r21, r20
    1ab2:	44 27       	eor	r20, r20
    1ab4:	49 2b       	or	r20, r25
    1ab6:	60 e0       	ldi	r22, 0x00	; 0
    1ab8:	82 e0       	ldi	r24, 0x02	; 2
    1aba:	f4 c5       	rjmp	.+3048   	; 0x26a4 <log_putError>
    1abc:	08 95       	ret

00001abe <test_PipeModule>:
    1abe:	88 30       	cpi	r24, 0x08	; 8
    1ac0:	08 f0       	brcs	.+2      	; 0x1ac4 <test_PipeModule+0x6>
    1ac2:	6a c0       	rjmp	.+212    	; 0x1b98 <test_PipeModule+0xda>
    1ac4:	31 e0       	ldi	r19, 0x01	; 1
    1ac6:	01 c0       	rjmp	.+2      	; 0x1aca <test_PipeModule+0xc>
    1ac8:	33 0f       	add	r19, r19
    1aca:	8a 95       	dec	r24
    1acc:	ea f7       	brpl	.-6      	; 0x1ac8 <test_PipeModule+0xa>
    1ace:	80 e8       	ldi	r24, 0x80	; 128
    1ad0:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <pipeProcessing>
    1ad4:	8b b1       	in	r24, 0x0b	; 11
    1ad6:	8f 77       	andi	r24, 0x7F	; 127
    1ad8:	8b b9       	out	0x0b, r24	; 11
    1ada:	84 b3       	in	r24, 0x14	; 20
    1adc:	87 60       	ori	r24, 0x07	; 7
    1ade:	84 bb       	out	0x14, r24	; 20
    1ae0:	40 e0       	ldi	r20, 0x00	; 0
    1ae2:	1d c0       	rjmp	.+58     	; 0x1b1e <test_PipeModule+0x60>
    1ae4:	20 fd       	sbrc	r18, 0
    1ae6:	03 c0       	rjmp	.+6      	; 0x1aee <test_PipeModule+0x30>
    1ae8:	83 2f       	mov	r24, r19
    1aea:	80 95       	com	r24
    1aec:	01 c0       	rjmp	.+2      	; 0x1af0 <test_PipeModule+0x32>
    1aee:	8f ef       	ldi	r24, 0xFF	; 255
    1af0:	88 b9       	out	0x08, r24	; 8
    1af2:	26 95       	lsr	r18
    1af4:	82 e0       	ldi	r24, 0x02	; 2
    1af6:	8a 95       	dec	r24
    1af8:	f1 f7       	brne	.-4      	; 0x1af6 <test_PipeModule+0x38>
    1afa:	00 c0       	rjmp	.+0      	; 0x1afc <test_PipeModule+0x3e>
    1afc:	84 b3       	in	r24, 0x14	; 20
    1afe:	8e 7f       	andi	r24, 0xFE	; 254
    1b00:	84 bb       	out	0x14, r24	; 20
    1b02:	82 e0       	ldi	r24, 0x02	; 2
    1b04:	8a 95       	dec	r24
    1b06:	f1 f7       	brne	.-4      	; 0x1b04 <test_PipeModule+0x46>
    1b08:	00 c0       	rjmp	.+0      	; 0x1b0a <test_PipeModule+0x4c>
    1b0a:	84 b3       	in	r24, 0x14	; 20
    1b0c:	81 60       	ori	r24, 0x01	; 1
    1b0e:	84 bb       	out	0x14, r24	; 20
    1b10:	9f 5f       	subi	r25, 0xFF	; 255
    1b12:	02 c0       	rjmp	.+4      	; 0x1b18 <test_PipeModule+0x5a>
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	25 ea       	ldi	r18, 0xA5	; 165
    1b18:	98 30       	cpi	r25, 0x08	; 8
    1b1a:	20 f3       	brcs	.-56     	; 0x1ae4 <test_PipeModule+0x26>
    1b1c:	4f 5f       	subi	r20, 0xFF	; 255
    1b1e:	44 30       	cpi	r20, 0x04	; 4
    1b20:	c8 f3       	brcs	.-14     	; 0x1b14 <test_PipeModule+0x56>
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	0f c0       	rjmp	.+30     	; 0x1b44 <test_PipeModule+0x86>
    1b26:	82 e0       	ldi	r24, 0x02	; 2
    1b28:	8a 95       	dec	r24
    1b2a:	f1 f7       	brne	.-4      	; 0x1b28 <test_PipeModule+0x6a>
    1b2c:	00 c0       	rjmp	.+0      	; 0x1b2e <test_PipeModule+0x70>
    1b2e:	84 b3       	in	r24, 0x14	; 20
    1b30:	8e 7f       	andi	r24, 0xFE	; 254
    1b32:	84 bb       	out	0x14, r24	; 20
    1b34:	82 e0       	ldi	r24, 0x02	; 2
    1b36:	8a 95       	dec	r24
    1b38:	f1 f7       	brne	.-4      	; 0x1b36 <test_PipeModule+0x78>
    1b3a:	00 c0       	rjmp	.+0      	; 0x1b3c <test_PipeModule+0x7e>
    1b3c:	84 b3       	in	r24, 0x14	; 20
    1b3e:	81 60       	ori	r24, 0x01	; 1
    1b40:	84 bb       	out	0x14, r24	; 20
    1b42:	9f 5f       	subi	r25, 0xFF	; 255
    1b44:	90 32       	cpi	r25, 0x20	; 32
    1b46:	78 f3       	brcs	.-34     	; 0x1b26 <test_PipeModule+0x68>
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	40 e0       	ldi	r20, 0x00	; 0
    1b4c:	50 e0       	ldi	r21, 0x00	; 0
    1b4e:	ba 01       	movw	r22, r20
    1b50:	17 c0       	rjmp	.+46     	; 0x1b80 <test_PipeModule+0xc2>
    1b52:	44 0f       	add	r20, r20
    1b54:	55 1f       	adc	r21, r21
    1b56:	66 1f       	adc	r22, r22
    1b58:	77 1f       	adc	r23, r23
    1b5a:	82 e0       	ldi	r24, 0x02	; 2
    1b5c:	8a 95       	dec	r24
    1b5e:	f1 f7       	brne	.-4      	; 0x1b5c <test_PipeModule+0x9e>
    1b60:	00 c0       	rjmp	.+0      	; 0x1b62 <test_PipeModule+0xa4>
    1b62:	84 b3       	in	r24, 0x14	; 20
    1b64:	8e 7f       	andi	r24, 0xFE	; 254
    1b66:	84 bb       	out	0x14, r24	; 20
    1b68:	80 b1       	in	r24, 0x00	; 0
    1b6a:	83 23       	and	r24, r19
    1b6c:	09 f0       	breq	.+2      	; 0x1b70 <test_PipeModule+0xb2>
    1b6e:	41 60       	ori	r20, 0x01	; 1
    1b70:	82 e0       	ldi	r24, 0x02	; 2
    1b72:	8a 95       	dec	r24
    1b74:	f1 f7       	brne	.-4      	; 0x1b72 <test_PipeModule+0xb4>
    1b76:	00 c0       	rjmp	.+0      	; 0x1b78 <test_PipeModule+0xba>
    1b78:	84 b3       	in	r24, 0x14	; 20
    1b7a:	81 60       	ori	r24, 0x01	; 1
    1b7c:	84 bb       	out	0x14, r24	; 20
    1b7e:	9f 5f       	subi	r25, 0xFF	; 255
    1b80:	90 32       	cpi	r25, 0x20	; 32
    1b82:	38 f3       	brcs	.-50     	; 0x1b52 <test_PipeModule+0x94>
    1b84:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <pipeProcessing>
    1b88:	8b b1       	in	r24, 0x0b	; 11
    1b8a:	80 68       	ori	r24, 0x80	; 128
    1b8c:	8b b9       	out	0x0b, r24	; 11
    1b8e:	34 2f       	mov	r19, r20
    1b90:	25 2f       	mov	r18, r21
    1b92:	86 2f       	mov	r24, r22
    1b94:	97 2f       	mov	r25, r23
    1b96:	04 c0       	rjmp	.+8      	; 0x1ba0 <test_PipeModule+0xe2>
    1b98:	30 e0       	ldi	r19, 0x00	; 0
    1b9a:	20 e0       	ldi	r18, 0x00	; 0
    1b9c:	80 e0       	ldi	r24, 0x00	; 0
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	63 2f       	mov	r22, r19
    1ba2:	72 2f       	mov	r23, r18
    1ba4:	08 95       	ret

00001ba6 <module_TestAllInputs>:
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	e7 e4       	ldi	r30, 0x47	; 71
    1baa:	f2 e0       	ldi	r31, 0x02	; 2
    1bac:	80 e0       	ldi	r24, 0x00	; 0
    1bae:	06 c0       	rjmp	.+12     	; 0x1bbc <module_TestAllInputs+0x16>
    1bb0:	2f ef       	ldi	r18, 0xFF	; 255
    1bb2:	21 83       	std	Z+1, r18	; 0x01
    1bb4:	26 81       	ldd	r18, Z+6	; 0x06
    1bb6:	82 2b       	or	r24, r18
    1bb8:	38 96       	adiw	r30, 0x08	; 8
    1bba:	9f 5f       	subi	r25, 0xFF	; 255
    1bbc:	90 32       	cpi	r25, 0x20	; 32
    1bbe:	c0 f3       	brcs	.-16     	; 0x1bb0 <module_TestAllInputs+0xa>
    1bc0:	90 91 4e 03 	lds	r25, 0x034E	; 0x80034e <pipe_ModuleAssnRead>
    1bc4:	89 23       	and	r24, r25
    1bc6:	08 95       	ret

00001bc8 <module_StartPowerOn>:

void module_StartPowerOn(){
	// just before main loop: start timer to init power on
	pipe_PowerStatus = POWERSTATE_WAIT_FOR_KEY_REALEASE;
    1bc8:	81 e0       	ldi	r24, 0x01	; 1
    1bca:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
	TIMER_SET(TIMER_POWER,TIMER_POWER_INIT_MS)
    1bce:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1bd0:	f8 94       	cli
    1bd2:	06 c0       	rjmp	.+12     	; 0x1be0 <module_StartPowerOn+0x18>
    1bd4:	ed e2       	ldi	r30, 0x2D	; 45
    1bd6:	f2 e0       	ldi	r31, 0x02	; 2
    1bd8:	88 e2       	ldi	r24, 0x28	; 40
    1bda:	82 83       	std	Z+2, r24	; 0x02
    1bdc:	13 82       	std	Z+3, r1	; 0x03
    1bde:	80 e0       	ldi	r24, 0x00	; 0
    1be0:	81 11       	cpse	r24, r1
    1be2:	f8 cf       	rjmp	.-16     	; 0x1bd4 <module_StartPowerOn+0xc>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1be4:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    1be6:	08 95       	ret

00001be8 <module_PowerControl>:
}

void module_PowerControl(){
	// call when timer is elapsed
	if (pipe_PowerStatus == POWERSTATE_WAIT_FOR_KEY_REALEASE) {
    1be8:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <pipe_PowerStatus>
    1bec:	81 30       	cpi	r24, 0x01	; 1
    1bee:	31 f5       	brne	.+76     	; 0x1c3c <module_PowerControl+0x54>
		// now check inputs
		if (module_TestAllInputs() == 0){
    1bf0:	da df       	rcall	.-76     	; 0x1ba6 <module_TestAllInputs>
    1bf2:	81 11       	cpse	r24, r1
    1bf4:	14 c0       	rjmp	.+40     	; 0x1c1e <module_PowerControl+0x36>
			// all inputs are low, start power on and wait a little bit
			POWER_ON
    1bf6:	85 b1       	in	r24, 0x05	; 5
    1bf8:	80 64       	ori	r24, 0x40	; 64
    1bfa:	85 b9       	out	0x05, r24	; 5
			pipe_PowerStatus = POWERSTATE_WAIT_FOR_POWERON;
    1bfc:	82 e1       	ldi	r24, 0x12	; 18
    1bfe:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
			TIMER_SET(TIMER_POWER,TIMER_POWER_CHECK_MS)
    1c02:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c04:	f8 94       	cli
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	06 c0       	rjmp	.+12     	; 0x1c16 <module_PowerControl+0x2e>
    1c0a:	ed e2       	ldi	r30, 0x2D	; 45
    1c0c:	f2 e0       	ldi	r31, 0x02	; 2
    1c0e:	81 e0       	ldi	r24, 0x01	; 1
    1c10:	82 83       	std	Z+2, r24	; 0x02
    1c12:	13 82       	std	Z+3, r1	; 0x03
    1c14:	80 e0       	ldi	r24, 0x00	; 0
    1c16:	81 11       	cpse	r24, r1
    1c18:	f8 cf       	rjmp	.-16     	; 0x1c0a <module_PowerControl+0x22>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c1a:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    1c1c:	08 95       	ret
		} else {
			// keys are not released
			TIMER_SET(TIMER_POWER,TIMER_POWER_TEST_REPEAT_MS)
    1c1e:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c20:	f8 94       	cli
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	07 c0       	rjmp	.+14     	; 0x1c34 <module_PowerControl+0x4c>
    1c26:	ed e2       	ldi	r30, 0x2D	; 45
    1c28:	f2 e0       	ldi	r31, 0x02	; 2
    1c2a:	8c e0       	ldi	r24, 0x0C	; 12
    1c2c:	82 83       	std	Z+2, r24	; 0x02
    1c2e:	82 e0       	ldi	r24, 0x02	; 2
    1c30:	83 83       	std	Z+3, r24	; 0x03
    1c32:	80 e0       	ldi	r24, 0x00	; 0
    1c34:	81 11       	cpse	r24, r1
    1c36:	f7 cf       	rjmp	.-18     	; 0x1c26 <module_PowerControl+0x3e>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c38:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    1c3a:	08 95       	ret
		}
	} else if (pipe_PowerStatus == POWERSTATE_WAIT_FOR_POWERON) {
    1c3c:	82 31       	cpi	r24, 0x12	; 18
		uint8_t testResult = module_TestAllInputs();
    1c3e:	b1 f4       	brne	.+44     	; 0x1c6c <module_PowerControl+0x84>
    1c40:	b2 df       	rcall	.-156    	; 0x1ba6 <module_TestAllInputs>
		if (testResult == 0){
    1c42:	81 11       	cpse	r24, r1
    1c44:	04 c0       	rjmp	.+8      	; 0x1c4e <module_PowerControl+0x66>
			// inputs still off, seems ok
			pipe_PowerStatus = POWERSTATE_POWER_ON;
    1c46:	84 e1       	ldi	r24, 0x14	; 20
    1c48:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
    1c4c:	0b c0       	rjmp	.+22     	; 0x1c64 <module_PowerControl+0x7c>
		} else {
			// inputs are no low any more, MOSFET defective?
			log_putError(LOG_CAT_POWER,LOG_CATPOWER_OUTPUTSON,testResult);
    1c4e:	48 2f       	mov	r20, r24
    1c50:	50 e0       	ldi	r21, 0x00	; 0
    1c52:	60 e0       	ldi	r22, 0x00	; 0
    1c54:	85 e0       	ldi	r24, 0x05	; 5
    1c56:	26 d5       	rcall	.+2636   	; 0x26a4 <log_putError>
			POWER_OFF
    1c58:	85 b1       	in	r24, 0x05	; 5
    1c5a:	8f 7b       	andi	r24, 0xBF	; 191
    1c5c:	85 b9       	out	0x05, r24	; 5
			pipe_PowerStatus = POWERSTATE_OFF_DUE_TO_ERROR;
    1c5e:	80 e8       	ldi	r24, 0x80	; 128
    1c60:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
		}
		// final action, no more timer
		TIMER_DEACTIVATE(TIMER_POWER)
    1c64:	8f ef       	ldi	r24, 0xFF	; 255
    1c66:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <swTimer+0x2>
    1c6a:	08 95       	ret
	} else {
		TIMER_DEACTIVATE(TIMER_POWER)
    1c6c:	8f ef       	ldi	r24, 0xFF	; 255
    1c6e:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <swTimer+0x2>
    1c72:	08 95       	ret

00001c74 <softKey_WantLong>:
	ADCSRA |= (1 << ADSC); // start adc, read value on next corresponding cycle
}

void softKey_WantLong(uint8_t wantLong){
	// 0 for wants repeat, != 0 for wantLong
	for (uint8_t i = 0; i < MESSAGE_KEY_COUNT; i++){
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	0d c0       	rjmp	.+26     	; 0x1c92 <softKey_WantLong+0x1e>
		// i = 0 is not used (dummy only) array starts with MESSAGE_KEY_MIN
		if ((i+MESSAGE_KEY_MIN == MESSAGE_KEY_1) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_2) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_3) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_4)) {
    1c78:	94 30       	cpi	r25, 0x04	; 4
    1c7a:	50 f4       	brcc	.+20     	; 0x1c90 <softKey_WantLong+0x1c>
			keyWants[i] = KEY_WANTS_UP | (wantLong == 0 ? KEY_WANTS_REPEAT : KEY_WANTS_LONGPRESS);
    1c7c:	e9 2f       	mov	r30, r25
    1c7e:	f0 e0       	ldi	r31, 0x00	; 0
    1c80:	81 11       	cpse	r24, r1
    1c82:	02 c0       	rjmp	.+4      	; 0x1c88 <softKey_WantLong+0x14>
    1c84:	2a e0       	ldi	r18, 0x0A	; 10
    1c86:	01 c0       	rjmp	.+2      	; 0x1c8a <softKey_WantLong+0x16>
    1c88:	26 e0       	ldi	r18, 0x06	; 6
    1c8a:	e1 5b       	subi	r30, 0xB1	; 177
    1c8c:	fc 4f       	sbci	r31, 0xFC	; 252
    1c8e:	20 83       	st	Z, r18
	ADCSRA |= (1 << ADSC); // start adc, read value on next corresponding cycle
}

void softKey_WantLong(uint8_t wantLong){
	// 0 for wants repeat, != 0 for wantLong
	for (uint8_t i = 0; i < MESSAGE_KEY_COUNT; i++){
    1c90:	9f 5f       	subi	r25, 0xFF	; 255
    1c92:	96 30       	cpi	r25, 0x06	; 6
    1c94:	88 f3       	brcs	.-30     	; 0x1c78 <softKey_WantLong+0x4>
		if ((i+MESSAGE_KEY_MIN == MESSAGE_KEY_1) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_2) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_3) || (i+MESSAGE_KEY_MIN == MESSAGE_KEY_4)) {
			keyWants[i] = KEY_WANTS_UP | (wantLong == 0 ? KEY_WANTS_REPEAT : KEY_WANTS_LONGPRESS);
		}
	}

}
    1c96:	08 95       	ret

00001c98 <__vector_21>:
}

//*********************************************** I S R   T I M E R ****************************************

ISR (TIMER0_COMPA_vect)
{
    1c98:	1f 92       	push	r1
    1c9a:	0f 92       	push	r0
    1c9c:	0f b6       	in	r0, 0x3f	; 63
    1c9e:	0f 92       	push	r0
    1ca0:	11 24       	eor	r1, r1
    1ca2:	0b b6       	in	r0, 0x3b	; 59
    1ca4:	0f 92       	push	r0
    1ca6:	ef 92       	push	r14
    1ca8:	ff 92       	push	r15
    1caa:	0f 93       	push	r16
    1cac:	1f 93       	push	r17
    1cae:	2f 93       	push	r18
    1cb0:	3f 93       	push	r19
    1cb2:	4f 93       	push	r20
    1cb4:	5f 93       	push	r21
    1cb6:	6f 93       	push	r22
    1cb8:	7f 93       	push	r23
    1cba:	8f 93       	push	r24
    1cbc:	9f 93       	push	r25
    1cbe:	af 93       	push	r26
    1cc0:	bf 93       	push	r27
    1cc2:	cf 93       	push	r28
    1cc4:	df 93       	push	r29
    1cc6:	ef 93       	push	r30
    1cc8:	ff 93       	push	r31
	// called every 1ms
	LED_PORT |= (1 << LED_PIN); // LED on (1 = on, 0 = off)
    1cca:	85 b1       	in	r24, 0x05	; 5
    1ccc:	80 68       	ori	r24, 0x80	; 128
    1cce:	85 b9       	out	0x05, r24	; 5
	//  ********************************************** SW-TIMER ***********************************************
	switch (++msecCtr & 0x03) {
    1cd0:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <msecCtr>
    1cd4:	8f 5f       	subi	r24, 0xFF	; 255
    1cd6:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <msecCtr>
    1cda:	83 70       	andi	r24, 0x03	; 3
    1cdc:	81 30       	cpi	r24, 0x01	; 1
    1cde:	09 f4       	brne	.+2      	; 0x1ce2 <__vector_21+0x4a>
    1ce0:	58 c1       	rjmp	.+688    	; 0x1f92 <__vector_21+0x2fa>
    1ce2:	38 f0       	brcs	.+14     	; 0x1cf2 <__vector_21+0x5a>
    1ce4:	82 30       	cpi	r24, 0x02	; 2
    1ce6:	09 f4       	brne	.+2      	; 0x1cea <__vector_21+0x52>
    1ce8:	a5 c1       	rjmp	.+842    	; 0x2034 <__vector_21+0x39c>
    1cea:	83 30       	cpi	r24, 0x03	; 3
    1cec:	09 f4       	brne	.+2      	; 0x1cf0 <__vector_21+0x58>
    1cee:	c9 c1       	rjmp	.+914    	; 0x2082 <__vector_21+0x3ea>
    1cf0:	01 c2       	rjmp	.+1026   	; 0x20f4 <__vector_21+0x45c>
}

//--------------------------------- A D C / K E Y S -------------------------------

static inline void timerADC(){
	if ((adcNr < ADC_NR_INPUTS) && ((ADCSRA & (1 << ADSC)) == 0)){
    1cf2:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <adcNr>
    1cf6:	81 11       	cpse	r24, r1
    1cf8:	1a c1       	rjmp	.+564    	; 0x1f2e <__vector_21+0x296>
    1cfa:	90 91 7a 00 	lds	r25, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    1cfe:	96 fd       	sbrc	r25, 6
    1d00:	16 c1       	rjmp	.+556    	; 0x1f2e <__vector_21+0x296>
		// last conversion is valid input and conversion complete or not yet started
		// De-Noise
		uint8_t oldADC;
		oldADC = adcKeys[adcNr].ADCval;
    1d02:	28 2f       	mov	r18, r24
    1d04:	30 e0       	ldi	r19, 0x00	; 0
    1d06:	f9 01       	movw	r30, r18
    1d08:	ee 0f       	add	r30, r30
    1d0a:	ff 1f       	adc	r31, r31
    1d0c:	e2 0f       	add	r30, r18
    1d0e:	f3 1f       	adc	r31, r19
    1d10:	ee 0f       	add	r30, r30
    1d12:	ff 1f       	adc	r31, r31
    1d14:	e9 5b       	subi	r30, 0xB9	; 185
    1d16:	fc 4f       	sbci	r31, 0xFC	; 252
    1d18:	91 81       	ldd	r25, Z+1	; 0x01
		uint8_t newADC = ADCH;
    1d1a:	40 91 79 00 	lds	r20, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
		adcKeys[adcNr].ADCval = newADC;
    1d1e:	41 83       	std	Z+1, r20	; 0x01

//------------------------------------------------------ BUSINESSS LOGIC -------------------------------

static inline uint8_t absDifference(uint8_t data1,uint8_t data2){
	// absolute value of difference between data1,2 as uint8_t!
	if (data1 > data2) {
    1d20:	49 17       	cp	r20, r25
    1d22:	10 f4       	brcc	.+4      	; 0x1d28 <__vector_21+0x90>
		return data1-data2;
    1d24:	94 1b       	sub	r25, r20
    1d26:	03 c0       	rjmp	.+6      	; 0x1d2e <__vector_21+0x96>
	} else {
		return data2-data1;
    1d28:	54 2f       	mov	r21, r20
    1d2a:	59 1b       	sub	r21, r25
    1d2c:	95 2f       	mov	r25, r21
		// De-Noise
		uint8_t oldADC;
		oldADC = adcKeys[adcNr].ADCval;
		uint8_t newADC = ADCH;
		adcKeys[adcNr].ADCval = newADC;
		if (absDifference(oldADC,newADC) < ADC_NOISE_THRESHOLD) {
    1d2e:	94 30       	cpi	r25, 0x04	; 4
    1d30:	08 f0       	brcs	.+2      	; 0x1d34 <__vector_21+0x9c>
    1d32:	fd c0       	rjmp	.+506    	; 0x1f2e <__vector_21+0x296>
			// input voltage is stable, process this value
			uint8_t newKey;
			switch (adcNr) {
    1d34:	81 11       	cpse	r24, r1
    1d36:	0e c0       	rjmp	.+28     	; 0x1d54 <__vector_21+0xbc>
				case 0:
				// currentyl only one  ADC implemented
				if (newADC < (ADC_KEY5_VAL + ADC_KEY4_VAL)/2)  {
    1d38:	42 32       	cpi	r20, 0x22	; 34
    1d3a:	70 f0       	brcs	.+28     	; 0x1d58 <__vector_21+0xc0>
					newKey = ADC_KEY5_FUNC;
				} else if (newADC < (ADC_KEY4_VAL + ADC_KEY3_VAL)/2)  {
    1d3c:	4f 33       	cpi	r20, 0x3F	; 63
    1d3e:	70 f0       	brcs	.+28     	; 0x1d5c <__vector_21+0xc4>
					newKey = ADC_KEY4_FUNC;
				} else if (newADC < (ADC_KEY3_VAL + ADC_KEY2_VAL)/2)  {
    1d40:	48 36       	cpi	r20, 0x68	; 104
    1d42:	70 f0       	brcs	.+28     	; 0x1d60 <__vector_21+0xc8>
					newKey = ADC_KEY3_FUNC;
				} else if (newADC < (ADC_KEY2_VAL + ADC_KEY1_VAL)/2)  {
    1d44:	46 39       	cpi	r20, 0x96	; 150
    1d46:	70 f0       	brcs	.+28     	; 0x1d64 <__vector_21+0xcc>
					newKey = ADC_KEY2_FUNC;
				} else if (newADC < (ADC_KEY1_VAL + ADC_KEY0_VAL)/2)  {
    1d48:	4f 3b       	cpi	r20, 0xBF	; 191
    1d4a:	70 f0       	brcs	.+28     	; 0x1d68 <__vector_21+0xd0>
					newKey = ADC_KEY1_FUNC;
				} else if (newADC < (ADC_KEY0_VAL + 0xFF)/2)  {
    1d4c:	48 3e       	cpi	r20, 0xE8	; 232
    1d4e:	70 f4       	brcc	.+28     	; 0x1d6c <__vector_21+0xd4>
					newKey = ADC_KEY0_FUNC;
    1d50:	c6 e0       	ldi	r28, 0x06	; 6
    1d52:	0d c0       	rjmp	.+26     	; 0x1d6e <__vector_21+0xd6>
					newKey = KEY_NOKEY;
				}
				break;
				// unimplemented ADC
				default:
					newKey = KEY_NOKEY; // not implemented
    1d54:	cf ef       	ldi	r28, 0xFF	; 255
    1d56:	0b c0       	rjmp	.+22     	; 0x1d6e <__vector_21+0xd6>
			uint8_t newKey;
			switch (adcNr) {
				case 0:
				// currentyl only one  ADC implemented
				if (newADC < (ADC_KEY5_VAL + ADC_KEY4_VAL)/2)  {
					newKey = ADC_KEY5_FUNC;
    1d58:	c4 e0       	ldi	r28, 0x04	; 4
    1d5a:	09 c0       	rjmp	.+18     	; 0x1d6e <__vector_21+0xd6>
				} else if (newADC < (ADC_KEY4_VAL + ADC_KEY3_VAL)/2)  {
					newKey = ADC_KEY4_FUNC;
    1d5c:	c3 e0       	ldi	r28, 0x03	; 3
    1d5e:	07 c0       	rjmp	.+14     	; 0x1d6e <__vector_21+0xd6>
				} else if (newADC < (ADC_KEY3_VAL + ADC_KEY2_VAL)/2)  {
					newKey = ADC_KEY3_FUNC;
    1d60:	c5 e0       	ldi	r28, 0x05	; 5
    1d62:	05 c0       	rjmp	.+10     	; 0x1d6e <__vector_21+0xd6>
				} else if (newADC < (ADC_KEY2_VAL + ADC_KEY1_VAL)/2)  {
					newKey = ADC_KEY2_FUNC;
    1d64:	c1 e0       	ldi	r28, 0x01	; 1
    1d66:	03 c0       	rjmp	.+6      	; 0x1d6e <__vector_21+0xd6>
				} else if (newADC < (ADC_KEY1_VAL + ADC_KEY0_VAL)/2)  {
					newKey = ADC_KEY1_FUNC;
    1d68:	c2 e0       	ldi	r28, 0x02	; 2
    1d6a:	01 c0       	rjmp	.+2      	; 0x1d6e <__vector_21+0xd6>
				} else if (newADC < (ADC_KEY0_VAL + 0xFF)/2)  {
					newKey = ADC_KEY0_FUNC;
				} else {
					newKey = KEY_NOKEY;
    1d6c:	cf ef       	ldi	r28, 0xFF	; 255
				break;
				// unimplemented ADC
				default:
					newKey = KEY_NOKEY; // not implemented
			}
			uint8_t oldKey = adcKeys[adcNr].key;
    1d6e:	f9 01       	movw	r30, r18
    1d70:	ee 0f       	add	r30, r30
    1d72:	ff 1f       	adc	r31, r31
    1d74:	e2 0f       	add	r30, r18
    1d76:	f3 1f       	adc	r31, r19
    1d78:	ee 0f       	add	r30, r30
    1d7a:	ff 1f       	adc	r31, r31
    1d7c:	e9 5b       	subi	r30, 0xB9	; 185
    1d7e:	fc 4f       	sbci	r31, 0xFC	; 252
    1d80:	d2 81       	ldd	r29, Z+2	; 0x02
			if (oldKey != newKey){
    1d82:	dc 17       	cp	r29, r28
    1d84:	09 f4       	brne	.+2      	; 0x1d88 <__vector_21+0xf0>
    1d86:	48 c0       	rjmp	.+144    	; 0x1e18 <__vector_21+0x180>
				// key has changed (pressed or released)
				if ((oldKey != KEY_NOKEY) && (newKey != KEY_NOKEY)) {
    1d88:	df 3f       	cpi	r29, 0xFF	; 255
    1d8a:	19 f0       	breq	.+6      	; 0x1d92 <__vector_21+0xfa>
    1d8c:	cf 3f       	cpi	r28, 0xFF	; 255
    1d8e:	09 f0       	breq	.+2      	; 0x1d92 <__vector_21+0xfa>
					// direct change of keys: realease old key first
					newKey = KEY_NOKEY;
    1d90:	cf ef       	ldi	r28, 0xFF	; 255
				}
				adcKeys[adcNr].key = newKey;
    1d92:	f9 01       	movw	r30, r18
    1d94:	ee 0f       	add	r30, r30
    1d96:	ff 1f       	adc	r31, r31
    1d98:	e2 0f       	add	r30, r18
    1d9a:	f3 1f       	adc	r31, r19
    1d9c:	ee 0f       	add	r30, r30
    1d9e:	ff 1f       	adc	r31, r31
    1da0:	e9 5b       	subi	r30, 0xB9	; 185
    1da2:	fc 4f       	sbci	r31, 0xFC	; 252
    1da4:	c2 83       	std	Z+2, r28	; 0x02
				if (oldKey == KEY_NOKEY) {
    1da6:	df 3f       	cpi	r29, 0xFF	; 255
    1da8:	f9 f4       	brne	.+62     	; 0x1de8 <__vector_21+0x150>
					// key is pressed
					adcKeys[adcNr].keyTimer = 0;
    1daa:	c9 01       	movw	r24, r18
    1dac:	88 0f       	add	r24, r24
    1dae:	99 1f       	adc	r25, r25
    1db0:	fc 01       	movw	r30, r24
    1db2:	e2 0f       	add	r30, r18
    1db4:	f3 1f       	adc	r31, r19
    1db6:	ee 0f       	add	r30, r30
    1db8:	ff 1f       	adc	r31, r31
    1dba:	e9 5b       	subi	r30, 0xB9	; 185
    1dbc:	fc 4f       	sbci	r31, 0xFC	; 252
    1dbe:	15 82       	std	Z+5, r1	; 0x05
    1dc0:	14 82       	std	Z+4, r1	; 0x04
					adcKeys[adcNr].keyRepeating = KEY_STAT_NIL;
    1dc2:	fc 01       	movw	r30, r24
    1dc4:	e2 0f       	add	r30, r18
    1dc6:	f3 1f       	adc	r31, r19
    1dc8:	ee 0f       	add	r30, r30
    1dca:	ff 1f       	adc	r31, r31
    1dcc:	e9 5b       	subi	r30, 0xB9	; 185
    1dce:	fc 4f       	sbci	r31, 0xFC	; 252
    1dd0:	13 82       	std	Z+3, r1	; 0x03
					if (keyWants[newKey-MESSAGE_KEY_MIN] & KEY_WANTS_DOWN) {
    1dd2:	ec 2f       	mov	r30, r28
    1dd4:	f0 e0       	ldi	r31, 0x00	; 0
    1dd6:	e2 5b       	subi	r30, 0xB2	; 178
    1dd8:	fc 4f       	sbci	r31, 0xFC	; 252
    1dda:	80 81       	ld	r24, Z
    1ddc:	80 ff       	sbrs	r24, 0
    1dde:	a7 c0       	rjmp	.+334    	; 0x1f2e <__vector_21+0x296>
						message_push(MESSAGE_KEY_PRESSED | newKey);
    1de0:	8c 2f       	mov	r24, r28
    1de2:	0e 94 4b 27 	call	0x4e96	; 0x4e96 <message_push>
    1de6:	a3 c0       	rjmp	.+326    	; 0x1f2e <__vector_21+0x296>
					}
				} else {
					// key is released
					if (keyWants[oldKey-MESSAGE_KEY_MIN] & KEY_WANTS_UP) {
    1de8:	ed 2f       	mov	r30, r29
    1dea:	f0 e0       	ldi	r31, 0x00	; 0
    1dec:	e2 5b       	subi	r30, 0xB2	; 178
    1dee:	fc 4f       	sbci	r31, 0xFC	; 252
    1df0:	80 81       	ld	r24, Z
    1df2:	81 ff       	sbrs	r24, 1
    1df4:	9c c0       	rjmp	.+312    	; 0x1f2e <__vector_21+0x296>
						if ((adcKeys[adcNr].keyRepeating & (KEY_STAT_AUTOREP | KEY_STAT_LONGPRESSED)) == 0){
    1df6:	f9 01       	movw	r30, r18
    1df8:	ee 0f       	add	r30, r30
    1dfa:	ff 1f       	adc	r31, r31
    1dfc:	e2 0f       	add	r30, r18
    1dfe:	f3 1f       	adc	r31, r19
    1e00:	ee 0f       	add	r30, r30
    1e02:	ff 1f       	adc	r31, r31
    1e04:	e9 5b       	subi	r30, 0xB9	; 185
    1e06:	fc 4f       	sbci	r31, 0xFC	; 252
    1e08:	83 81       	ldd	r24, Z+3	; 0x03
    1e0a:	83 70       	andi	r24, 0x03	; 3
    1e0c:	09 f0       	breq	.+2      	; 0x1e10 <__vector_21+0x178>
    1e0e:	8f c0       	rjmp	.+286    	; 0x1f2e <__vector_21+0x296>
							// send message only if not autorepeating or longpress has triggered
							message_push(MESSAGE_KEY_RELEASED | oldKey);
    1e10:	8d 2f       	mov	r24, r29
    1e12:	0e 94 4b 27 	call	0x4e96	; 0x4e96 <message_push>
    1e16:	8b c0       	rjmp	.+278    	; 0x1f2e <__vector_21+0x296>
						}
					}
				}
			} else {
				// no key change
				if (newKey != KEY_NOKEY) {
    1e18:	cf 3f       	cpi	r28, 0xFF	; 255
    1e1a:	09 f4       	brne	.+2      	; 0x1e1e <__vector_21+0x186>
    1e1c:	88 c0       	rjmp	.+272    	; 0x1f2e <__vector_21+0x296>
					// there is some key pressed
					adcKeys[adcNr].keyTimer++;
    1e1e:	f9 01       	movw	r30, r18
    1e20:	ee 0f       	add	r30, r30
    1e22:	ff 1f       	adc	r31, r31
    1e24:	df 01       	movw	r26, r30
    1e26:	a2 0f       	add	r26, r18
    1e28:	b3 1f       	adc	r27, r19
    1e2a:	aa 0f       	add	r26, r26
    1e2c:	bb 1f       	adc	r27, r27
    1e2e:	a9 5b       	subi	r26, 0xB9	; 185
    1e30:	bc 4f       	sbci	r27, 0xFC	; 252
    1e32:	14 96       	adiw	r26, 0x04	; 4
    1e34:	8d 91       	ld	r24, X+
    1e36:	9c 91       	ld	r25, X
    1e38:	15 97       	sbiw	r26, 0x05	; 5
    1e3a:	01 96       	adiw	r24, 0x01	; 1
    1e3c:	15 96       	adiw	r26, 0x05	; 5
    1e3e:	9c 93       	st	X, r25
    1e40:	8e 93       	st	-X, r24
    1e42:	14 97       	sbiw	r26, 0x04	; 4
					if (adcKeys[adcNr].keyTimer == KEY_LONGPRESS_CYCLES) {
    1e44:	fd 01       	movw	r30, r26
    1e46:	84 81       	ldd	r24, Z+4	; 0x04
    1e48:	95 81       	ldd	r25, Z+5	; 0x05
    1e4a:	8b 34       	cpi	r24, 0x4B	; 75
    1e4c:	91 05       	cpc	r25, r1
    1e4e:	a9 f4       	brne	.+42     	; 0x1e7a <__vector_21+0x1e2>
						// onyl if exact value for longpress reached:
						if (keyWants[oldKey-MESSAGE_KEY_MIN] & KEY_WANTS_LONGPRESS) {
    1e50:	ed 2f       	mov	r30, r29
    1e52:	f0 e0       	ldi	r31, 0x00	; 0
    1e54:	e2 5b       	subi	r30, 0xB2	; 178
    1e56:	fc 4f       	sbci	r31, 0xFC	; 252
    1e58:	80 81       	ld	r24, Z
    1e5a:	82 ff       	sbrs	r24, 2
    1e5c:	0e c0       	rjmp	.+28     	; 0x1e7a <__vector_21+0x1e2>
							message_push(MESSAGE_KEY_LONGPRESSED | newKey);
    1e5e:	8c 2f       	mov	r24, r28
    1e60:	80 68       	ori	r24, 0x80	; 128
    1e62:	0e 94 4b 27 	call	0x4e96	; 0x4e96 <message_push>
							adcKeys[adcNr].keyRepeating = KEY_STAT_LONGPRESSED; // prevent up-Message
    1e66:	e0 91 07 02 	lds	r30, 0x0207	; 0x800207 <adcNr>
    1e6a:	86 e0       	ldi	r24, 0x06	; 6
    1e6c:	e8 9f       	mul	r30, r24
    1e6e:	f0 01       	movw	r30, r0
    1e70:	11 24       	eor	r1, r1
    1e72:	e9 5b       	subi	r30, 0xB9	; 185
    1e74:	fc 4f       	sbci	r31, 0xFC	; 252
    1e76:	82 e0       	ldi	r24, 0x02	; 2
    1e78:	83 83       	std	Z+3, r24	; 0x03
						}
					}
					if (keyWants[oldKey-MESSAGE_KEY_MIN] & KEY_WANTS_REPEAT) {
    1e7a:	ed 2f       	mov	r30, r29
    1e7c:	f0 e0       	ldi	r31, 0x00	; 0
    1e7e:	e2 5b       	subi	r30, 0xB2	; 178
    1e80:	fc 4f       	sbci	r31, 0xFC	; 252
    1e82:	80 81       	ld	r24, Z
    1e84:	83 ff       	sbrs	r24, 3
    1e86:	53 c0       	rjmp	.+166    	; 0x1f2e <__vector_21+0x296>
						if (adcKeys[adcNr].keyRepeating == KEY_STAT_NIL)  {
    1e88:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <adcNr>
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	fc 01       	movw	r30, r24
    1e90:	ee 0f       	add	r30, r30
    1e92:	ff 1f       	adc	r31, r31
    1e94:	e8 0f       	add	r30, r24
    1e96:	f9 1f       	adc	r31, r25
    1e98:	ee 0f       	add	r30, r30
    1e9a:	ff 1f       	adc	r31, r31
    1e9c:	e9 5b       	subi	r30, 0xB9	; 185
    1e9e:	fc 4f       	sbci	r31, 0xFC	; 252
    1ea0:	23 81       	ldd	r18, Z+3	; 0x03
    1ea2:	21 11       	cpse	r18, r1
    1ea4:	1e c0       	rjmp	.+60     	; 0x1ee2 <__vector_21+0x24a>
							if (adcKeys[adcNr].keyTimer == KEY_AUTOREP_START_CYCLES) {
    1ea6:	fc 01       	movw	r30, r24
    1ea8:	ee 0f       	add	r30, r30
    1eaa:	ff 1f       	adc	r31, r31
    1eac:	e8 0f       	add	r30, r24
    1eae:	f9 1f       	adc	r31, r25
    1eb0:	ee 0f       	add	r30, r30
    1eb2:	ff 1f       	adc	r31, r31
    1eb4:	e9 5b       	subi	r30, 0xB9	; 185
    1eb6:	fc 4f       	sbci	r31, 0xFC	; 252
    1eb8:	24 81       	ldd	r18, Z+4	; 0x04
    1eba:	35 81       	ldd	r19, Z+5	; 0x05
    1ebc:	22 33       	cpi	r18, 0x32	; 50
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	b1 f5       	brne	.+108    	; 0x1f2e <__vector_21+0x296>
							// delay for autorepeat reached
								adcKeys[adcNr].keyRepeating = KEY_STAT_AUTOREP;
    1ec2:	26 e0       	ldi	r18, 0x06	; 6
    1ec4:	28 9f       	mul	r18, r24
    1ec6:	f0 01       	movw	r30, r0
    1ec8:	29 9f       	mul	r18, r25
    1eca:	f0 0d       	add	r31, r0
    1ecc:	11 24       	eor	r1, r1
    1ece:	e9 5b       	subi	r30, 0xB9	; 185
    1ed0:	fc 4f       	sbci	r31, 0xFC	; 252
    1ed2:	81 e0       	ldi	r24, 0x01	; 1
    1ed4:	83 83       	std	Z+3, r24	; 0x03
								adcKeys[adcNr].keyTimer = 0;
    1ed6:	15 82       	std	Z+5, r1	; 0x05
    1ed8:	14 82       	std	Z+4, r1	; 0x04
								message_push(MESSAGE_KEY_AUTOREPEAT | newKey);
    1eda:	8c 2f       	mov	r24, r28
    1edc:	0e 94 4b 27 	call	0x4e96	; 0x4e96 <message_push>
    1ee0:	26 c0       	rjmp	.+76     	; 0x1f2e <__vector_21+0x296>
							}
						} else if ((adcKeys[adcNr].keyRepeating == KEY_STAT_AUTOREP) && (adcKeys[adcNr].keyTimer == KEY_AUTOREP_REP_CYCLES)) {
    1ee2:	fc 01       	movw	r30, r24
    1ee4:	ee 0f       	add	r30, r30
    1ee6:	ff 1f       	adc	r31, r31
    1ee8:	e8 0f       	add	r30, r24
    1eea:	f9 1f       	adc	r31, r25
    1eec:	ee 0f       	add	r30, r30
    1eee:	ff 1f       	adc	r31, r31
    1ef0:	e9 5b       	subi	r30, 0xB9	; 185
    1ef2:	fc 4f       	sbci	r31, 0xFC	; 252
    1ef4:	23 81       	ldd	r18, Z+3	; 0x03
    1ef6:	21 30       	cpi	r18, 0x01	; 1
    1ef8:	d1 f4       	brne	.+52     	; 0x1f2e <__vector_21+0x296>
    1efa:	26 e0       	ldi	r18, 0x06	; 6
    1efc:	28 9f       	mul	r18, r24
    1efe:	f0 01       	movw	r30, r0
    1f00:	29 9f       	mul	r18, r25
    1f02:	f0 0d       	add	r31, r0
    1f04:	11 24       	eor	r1, r1
    1f06:	e9 5b       	subi	r30, 0xB9	; 185
    1f08:	fc 4f       	sbci	r31, 0xFC	; 252
    1f0a:	24 81       	ldd	r18, Z+4	; 0x04
    1f0c:	35 81       	ldd	r19, Z+5	; 0x05
    1f0e:	2c 30       	cpi	r18, 0x0C	; 12
    1f10:	31 05       	cpc	r19, r1
    1f12:	69 f4       	brne	.+26     	; 0x1f2e <__vector_21+0x296>
							// in autorepeat
							adcKeys[adcNr].keyTimer = 0;
    1f14:	26 e0       	ldi	r18, 0x06	; 6
    1f16:	28 9f       	mul	r18, r24
    1f18:	f0 01       	movw	r30, r0
    1f1a:	29 9f       	mul	r18, r25
    1f1c:	f0 0d       	add	r31, r0
    1f1e:	11 24       	eor	r1, r1
    1f20:	e9 5b       	subi	r30, 0xB9	; 185
    1f22:	fc 4f       	sbci	r31, 0xFC	; 252
    1f24:	15 82       	std	Z+5, r1	; 0x05
    1f26:	14 82       	std	Z+4, r1	; 0x04
							message_push(MESSAGE_KEY_AUTOREPEAT | newKey);
    1f28:	8c 2f       	mov	r24, r28
    1f2a:	0e 94 4b 27 	call	0x4e96	; 0x4e96 <message_push>
				}
			}
		} // if difference
	} // if valid conversion
	// cycle through all possoble ADCs, even if not implemented
	if (++adcNr >= ADC_MAX_INPUTS) {
    1f2e:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <adcNr>
    1f32:	8f 5f       	subi	r24, 0xFF	; 255
    1f34:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <adcNr>
    1f38:	84 30       	cpi	r24, 0x04	; 4
    1f3a:	10 f0       	brcs	.+4      	; 0x1f40 <__vector_21+0x2a8>
		adcNr = 0;
    1f3c:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <adcNr>
	}
	uint8_t newMux;
	if (adcNr < ADC_NR_INPUTS){
    1f40:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <adcNr>
    1f44:	81 11       	cpse	r24, r1
    1f46:	0c c0       	rjmp	.+24     	; 0x1f60 <__vector_21+0x2c8>
		newMux = adcKeys[adcNr].mux;
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	ee 0f       	add	r30, r30
    1f4e:	ff 1f       	adc	r31, r31
    1f50:	e8 0f       	add	r30, r24
    1f52:	f9 1f       	adc	r31, r25
    1f54:	ee 0f       	add	r30, r30
    1f56:	ff 1f       	adc	r31, r31
    1f58:	e9 5b       	subi	r30, 0xB9	; 185
    1f5a:	fc 4f       	sbci	r31, 0xFC	; 252
    1f5c:	80 81       	ld	r24, Z
    1f5e:	01 c0       	rjmp	.+2      	; 0x1f62 <__vector_21+0x2ca>
	} else {
		// if ADC not implemented: sample GND
		newMux = ADC_MUX_GND;
    1f60:	8f e1       	ldi	r24, 0x1F	; 31
	}
	ADMUX = ADC_ADMUX_STD | (newMux & ADC_MUX_MASKL);
    1f62:	98 2f       	mov	r25, r24
    1f64:	9f 71       	andi	r25, 0x1F	; 31
    1f66:	90 66       	ori	r25, 0x60	; 96
    1f68:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	ADCSRB = (ADCSRB & ~ADC_MUX_MASKH) | ((newMux & ADC_MUX_MASKH) >> 2);
    1f6c:	eb e7       	ldi	r30, 0x7B	; 123
    1f6e:	f0 e0       	ldi	r31, 0x00	; 0
    1f70:	20 81       	ld	r18, Z
    1f72:	80 72       	andi	r24, 0x20	; 32
    1f74:	90 e0       	ldi	r25, 0x00	; 0
    1f76:	95 95       	asr	r25
    1f78:	87 95       	ror	r24
    1f7a:	95 95       	asr	r25
    1f7c:	87 95       	ror	r24
    1f7e:	92 2f       	mov	r25, r18
    1f80:	9f 7d       	andi	r25, 0xDF	; 223
    1f82:	89 2b       	or	r24, r25
    1f84:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // start adc, read value on next corresponding cycle
    1f86:	ea e7       	ldi	r30, 0x7A	; 122
    1f88:	f0 e0       	ldi	r31, 0x00	; 0
    1f8a:	80 81       	ld	r24, Z
    1f8c:	80 64       	ori	r24, 0x40	; 64
    1f8e:	80 83       	st	Z, r24
    1f90:	b1 c0       	rjmp	.+354    	; 0x20f4 <__vector_21+0x45c>
	LED_PORT |= (1 << LED_PIN); // LED on (1 = on, 0 = off)
	//  ********************************************** SW-TIMER ***********************************************
	switch (++msecCtr & 0x03) {
		// execution order is 3,2,1,0; any function is calles every 4ms
		case 0: timerADC(); break; // evetnually timer has also been called (only every 100ms)
		case 1: if (pipeProcessing != PIPE_IO_DISABLE) {
    1f92:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <pipeProcessing>
    1f96:	80 38       	cpi	r24, 0x80	; 128
    1f98:	09 f4       	brne	.+2      	; 0x1f9c <__vector_21+0x304>
    1f9a:	ac c0       	rjmp	.+344    	; 0x20f4 <__vector_21+0x45c>
	}
}

static inline void timerPipeIO(){
	Pipe_t *curPipe;
	PIPECTRL_PORT |=  PIPE_CTRL_MASK; // -CLK -L2P -L2C off (1=off)
    1f9c:	84 b3       	in	r24, 0x14	; 20
    1f9e:	87 60       	ori	r24, 0x07	; 7
    1fa0:	84 bb       	out	0x14, r24	; 20
	PIPE_LATCH2CPU_L //  in hw_defs.h: // Start with -L2C \_
    1fa2:	84 b3       	in	r24, 0x14	; 20
    1fa4:	8b 7f       	andi	r24, 0xFB	; 251
    1fa6:	84 bb       	out	0x14, r24	; 20
	curPipe = &pipe[PIPE_SHIFTBIT_COUNT-1]; // point to last Pipe cause topmost bit is transferred first
	uint8_t local_pipe_ModuleAssnWrite = ~pipe_ModuleAssnWrite; // 0= module may be written
    1fa8:	20 91 4d 03 	lds	r18, 0x034D	; 0x80034d <pipe_ModuleAssnWrite>
    1fac:	20 95       	com	r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1fae:	e2 e0       	ldi	r30, 0x02	; 2
    1fb0:	ea 95       	dec	r30
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <__vector_21+0x318>
    1fb4:	00 c0       	rjmp	.+0      	; 0x1fb6 <__vector_21+0x31e>
	uint8_t i = PIPE_SHIFTBIT_COUNT;
	_delay_us(0.5);
	PIPE_LATCH2CPU_H // -LATCH2CPU _/ Data from Pipe are in shift register, MSB is ready to be read
    1fb6:	84 b3       	in	r24, 0x14	; 20
    1fb8:	84 60       	ori	r24, 0x04	; 4
    1fba:	84 bb       	out	0x14, r24	; 20
	Pipe_t *curPipe;
	PIPECTRL_PORT |=  PIPE_CTRL_MASK; // -CLK -L2P -L2C off (1=off)
	PIPE_LATCH2CPU_L //  in hw_defs.h: // Start with -L2C \_
	curPipe = &pipe[PIPE_SHIFTBIT_COUNT-1]; // point to last Pipe cause topmost bit is transferred first
	uint8_t local_pipe_ModuleAssnWrite = ~pipe_ModuleAssnWrite; // 0= module may be written
	uint8_t i = PIPE_SHIFTBIT_COUNT;
    1fbc:	90 e2       	ldi	r25, 0x20	; 32

static inline void timerPipeIO(){
	Pipe_t *curPipe;
	PIPECTRL_PORT |=  PIPE_CTRL_MASK; // -CLK -L2P -L2C off (1=off)
	PIPE_LATCH2CPU_L //  in hw_defs.h: // Start with -L2C \_
	curPipe = &pipe[PIPE_SHIFTBIT_COUNT-1]; // point to last Pipe cause topmost bit is transferred first
    1fbe:	ef e3       	ldi	r30, 0x3F	; 63
    1fc0:	f3 e0       	ldi	r31, 0x03	; 3
	uint8_t local_pipe_ModuleAssnWrite = ~pipe_ModuleAssnWrite; // 0= module may be written
	uint8_t i = PIPE_SHIFTBIT_COUNT;
	_delay_us(0.5);
	PIPE_LATCH2CPU_H // -LATCH2CPU _/ Data from Pipe are in shift register, MSB is ready to be read
	do 	{
		curPipe->pipeInM16 = curPipe->pipeInM12; // Shift History Input Data from Pipe
    1fc2:	83 81       	ldd	r24, Z+3	; 0x03
    1fc4:	82 83       	std	Z+2, r24	; 0x02
		curPipe->pipeInM12 = curPipe->pipeInM8;
    1fc6:	84 81       	ldd	r24, Z+4	; 0x04
    1fc8:	83 83       	std	Z+3, r24	; 0x03
		PIPE_CLOCK_H // clock keeps H in first loop or _/ in other loops
    1fca:	84 b3       	in	r24, 0x14	; 20
    1fcc:	81 60       	ori	r24, 0x01	; 1
    1fce:	84 bb       	out	0x14, r24	; 20
		PIPEOUT_PORT = curPipe->pipeOut | local_pipe_ModuleAssnWrite; // Write Data to Pipe
    1fd0:	81 81       	ldd	r24, Z+1	; 0x01
    1fd2:	82 2b       	or	r24, r18
    1fd4:	88 b9       	out	0x08, r24	; 8
		curPipe->pipeInM8 = curPipe->pipeInM4; // just here for symetric clk pulse
    1fd6:	85 81       	ldd	r24, Z+5	; 0x05
    1fd8:	84 83       	std	Z+4, r24	; 0x04
		curPipe->pipeInM4 = curPipe->pipeIn;
    1fda:	86 81       	ldd	r24, Z+6	; 0x06
    1fdc:	85 83       	std	Z+5, r24	; 0x05
		curPipe->pipeIn = PIPEIN_PIN; // Read Data from Pipe
    1fde:	80 b1       	in	r24, 0x00	; 0
    1fe0:	86 83       	std	Z+6, r24	; 0x06
		PIPE_CLOCK_L // clock \_
    1fe2:	84 b3       	in	r24, 0x14	; 20
    1fe4:	8e 7f       	andi	r24, 0xFE	; 254
    1fe6:	84 bb       	out	0x14, r24	; 20
		curPipe--; // proceed to next pipe
    1fe8:	38 97       	sbiw	r30, 0x08	; 8
	} while (--i > 0);
    1fea:	91 50       	subi	r25, 0x01	; 1
    1fec:	51 f7       	brne	.-44     	; 0x1fc2 <__vector_21+0x32a>
	asm("nop");
    1fee:	00 00       	nop
	asm("nop");
    1ff0:	00 00       	nop
	PIPE_CLOCK_H
    1ff2:	84 b3       	in	r24, 0x14	; 20
    1ff4:	81 60       	ori	r24, 0x01	; 1
    1ff6:	84 bb       	out	0x14, r24	; 20
	PIPE_LATCH2PIPE_L // last bit transferred latch2outout
    1ff8:	84 b3       	in	r24, 0x14	; 20
    1ffa:	8d 7f       	andi	r24, 0xFD	; 253
    1ffc:	84 bb       	out	0x14, r24	; 20
	pipeProcessing |= PIPE_IO_INOUT_DONE; // meanwhile (instead of wait): update processing status
    1ffe:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <pipeProcessing>
    2002:	82 60       	ori	r24, 0x02	; 2
    2004:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <pipeProcessing>
	PIPEOUT_PORT = 0; // not really needed, turn output off
    2008:	18 b8       	out	0x08, r1	; 8
	PIPE_OE_H // turn output on
    200a:	8b b1       	in	r24, 0x0b	; 11
    200c:	80 68       	ori	r24, 0x80	; 128
    200e:	8b b9       	out	0x0b, r24	; 11
	PIPE_LATCH2PIPE_H
    2010:	84 b3       	in	r24, 0x14	; 20
    2012:	82 60       	ori	r24, 0x02	; 2
    2014:	84 bb       	out	0x14, r24	; 20
    2016:	6e c0       	rjmp	.+220    	; 0x20f4 <__vector_21+0x45c>

static inline void timerTimers(){
	Timer *mytimer;
	mytimer = (Timer*) &(swTimer[0]);
	for (uint8_t i = 0; i < TIMER_COUNT; i++) {
		if ((mytimer->counter != TIMER_ENDED) && (mytimer->counter != TIMER_INACTIVE)) {
    2018:	80 81       	ld	r24, Z
    201a:	81 50       	subi	r24, 0x01	; 1
    201c:	8e 3f       	cpi	r24, 0xFE	; 254
    201e:	38 f4       	brcc	.+14     	; 0x202e <__vector_21+0x396>
			uint8_t newPrescaler = (mytimer->prescaler)+1;
    2020:	21 81       	ldd	r18, Z+1	; 0x01
    2022:	2f 5f       	subi	r18, 0xFF	; 255
			if (newPrescaler >= TIMER_BASE_MS / TIMER_CYCLE_MS) {
    2024:	25 30       	cpi	r18, 0x05	; 5
    2026:	10 f0       	brcs	.+4      	; 0x202c <__vector_21+0x394>
				// prescaler is decreasesd only every TIMER_CYCLE_MS, so divide value by this
				newPrescaler = 0;
				(mytimer->counter)--;
    2028:	80 83       	st	Z, r24
	for (uint8_t i = 0; i < TIMER_COUNT; i++) {
		if ((mytimer->counter != TIMER_ENDED) && (mytimer->counter != TIMER_INACTIVE)) {
			uint8_t newPrescaler = (mytimer->prescaler)+1;
			if (newPrescaler >= TIMER_BASE_MS / TIMER_CYCLE_MS) {
				// prescaler is decreasesd only every TIMER_CYCLE_MS, so divide value by this
				newPrescaler = 0;
    202a:	20 e0       	ldi	r18, 0x00	; 0
				(mytimer->counter)--;
			}
			mytimer->prescaler = newPrescaler;
    202c:	21 83       	std	Z+1, r18	; 0x01
		}
		mytimer++;
    202e:	32 96       	adiw	r30, 0x02	; 2
//-------------------------------------------------T I M E R -------------------------------

static inline void timerTimers(){
	Timer *mytimer;
	mytimer = (Timer*) &(swTimer[0]);
	for (uint8_t i = 0; i < TIMER_COUNT; i++) {
    2030:	9f 5f       	subi	r25, 0xFF	; 255
    2032:	03 c0       	rjmp	.+6      	; 0x203a <__vector_21+0x3a2>
    2034:	90 e0       	ldi	r25, 0x00	; 0

//-------------------------------------------------T I M E R -------------------------------

static inline void timerTimers(){
	Timer *mytimer;
	mytimer = (Timer*) &(swTimer[0]);
    2036:	ed e2       	ldi	r30, 0x2D	; 45
    2038:	f2 e0       	ldi	r31, 0x02	; 2
	for (uint8_t i = 0; i < TIMER_COUNT; i++) {
    203a:	99 30       	cpi	r25, 0x09	; 9
    203c:	68 f3       	brcs	.-38     	; 0x2018 <__vector_21+0x380>
			mytimer->prescaler = newPrescaler;
		}
		mytimer++;
	}
	uint8_t* pTime = (uint8_t *) &(time_Uptime[0]); // point to prescaler
	if (++(*pTime) == TIMER_UPDTIME_PRESC){
    203e:	ef e3       	ldi	r30, 0x3F	; 63
    2040:	f2 e0       	ldi	r31, 0x02	; 2
    2042:	80 81       	ld	r24, Z
    2044:	8f 5f       	subi	r24, 0xFF	; 255
    2046:	80 83       	st	Z, r24
    2048:	8a 3f       	cpi	r24, 0xFA	; 250
    204a:	09 f0       	breq	.+2      	; 0x204e <__vector_21+0x3b6>
    204c:	53 c0       	rjmp	.+166    	; 0x20f4 <__vector_21+0x45c>
		// if incremented prescaler ist top
		time_UpTimeUpdated = TRUE; // notify new uptime to main!
    204e:	8f ef       	ldi	r24, 0xFF	; 255
    2050:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <time_UpTimeUpdated>
		*(pTime++) = 0; // reset prescaler and point to seconds
    2054:	10 82       	st	Z, r1
		if (++(*pTime) >= 60) {
    2056:	81 81       	ldd	r24, Z+1	; 0x01
    2058:	8f 5f       	subi	r24, 0xFF	; 255
    205a:	81 83       	std	Z+1, r24	; 0x01
    205c:	8c 33       	cpi	r24, 0x3C	; 60
    205e:	08 f4       	brcc	.+2      	; 0x2062 <__vector_21+0x3ca>
    2060:	49 c0       	rjmp	.+146    	; 0x20f4 <__vector_21+0x45c>
			// if incrementet seconds are 60
			*(pTime++) = 0; // reset sceonds and point to minutes
    2062:	11 82       	std	Z+1, r1	; 0x01
			if (++(*pTime) >= 60) {
    2064:	82 81       	ldd	r24, Z+2	; 0x02
    2066:	8f 5f       	subi	r24, 0xFF	; 255
    2068:	82 83       	std	Z+2, r24	; 0x02
    206a:	8c 33       	cpi	r24, 0x3C	; 60
    206c:	08 f4       	brcc	.+2      	; 0x2070 <__vector_21+0x3d8>
    206e:	42 c0       	rjmp	.+132    	; 0x20f4 <__vector_21+0x45c>
				// if incrementet minutes are 60
				*(pTime++) = 0; // reset minutes and point to hours
    2070:	12 82       	std	Z+2, r1	; 0x02
				if (++(*pTime) >= 100) {
    2072:	83 81       	ldd	r24, Z+3	; 0x03
    2074:	8f 5f       	subi	r24, 0xFF	; 255
    2076:	83 83       	std	Z+3, r24	; 0x03
    2078:	84 36       	cpi	r24, 0x64	; 100
    207a:	e0 f1       	brcs	.+120    	; 0x20f4 <__vector_21+0x45c>
					// if incrementet hours are 100
					*(pTime) = 0; // reset  hours
    207c:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <time_Uptime+0x3>
    2080:	39 c0       	rjmp	.+114    	; 0x20f4 <__vector_21+0x45c>
		case 1: if (pipeProcessing != PIPE_IO_DISABLE) {
				timerPipeIO();
			}
			break;
		case 2: timerTimers(); break;
		case 3: if (pipeProcessing != PIPE_IO_DISABLE) {
    2082:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <pipeProcessing>
    2086:	80 38       	cpi	r24, 0x80	; 128
    2088:	a9 f1       	breq	.+106    	; 0x20f4 <__vector_21+0x45c>
//************************************** P I P E *******************************************

static inline void timerPipeProcess(){
	Pipe_t *curPipe;
	curPipe = &pipe[0];
	uint8_t local_pipe_ModuleAssnRead = pipe_ModuleAssnRead; // 1= module message processeced
    208a:	e0 90 4e 03 	lds	r14, 0x034E	; 0x80034e <pipe_ModuleAssnRead>
	for (uint8_t shiftBitNr = 0; shiftBitNr < PIPE_SHIFTBIT_COUNT; shiftBitNr++) {
    208e:	f1 2c       	mov	r15, r1

//************************************** P I P E *******************************************

static inline void timerPipeProcess(){
	Pipe_t *curPipe;
	curPipe = &pipe[0];
    2090:	07 e4       	ldi	r16, 0x47	; 71
    2092:	12 e0       	ldi	r17, 0x02	; 2
    2094:	2c c0       	rjmp	.+88     	; 0x20ee <__vector_21+0x456>
		// Check new pipe status
		// new V 0.56
		uint8_t newOnState = 0xFF; // and operation of recent states -> 1 == input was allways 1
		uint8_t newOffState = 0; // or operation of recent states -> 0 == input was allways 0
		uint8_t* pInByte = &(curPipe->pipeInM16);
		newOnState &= *pInByte; //pipeInM16
    2096:	f8 01       	movw	r30, r16
    2098:	c2 81       	ldd	r28, Z+2	; 0x02
		newOffState |= *pInByte++;
		newOnState &= *pInByte; //pipeInM12
    209a:	83 81       	ldd	r24, Z+3	; 0x03
    209c:	9c 2f       	mov	r25, r28
    209e:	98 23       	and	r25, r24
		newOffState |= *pInByte++;
    20a0:	c8 2b       	or	r28, r24
		newOnState &= *pInByte; //pipeInM8
    20a2:	84 81       	ldd	r24, Z+4	; 0x04
    20a4:	98 23       	and	r25, r24
		newOffState |= *pInByte++;
    20a6:	c8 2b       	or	r28, r24
		newOnState &= *pInByte; //pipeInM4
    20a8:	25 81       	ldd	r18, Z+5	; 0x05
    20aa:	92 23       	and	r25, r18
		newOffState |= *pInByte++;
    20ac:	c2 2b       	or	r28, r18
		newOnState &= *pInByte; //pipeIn
    20ae:	86 81       	ldd	r24, Z+6	; 0x06
    20b0:	98 23       	and	r25, r24
		newOffState |= *pInByte++; // now pointer to pipeInStat
    20b2:	c8 2b       	or	r28, r24
		uint8_t oldPipeStat = *pInByte;
    20b4:	d7 81       	ldd	r29, Z+7	; 0x07
		uint8_t newPipeStat = (oldPipeStat & newOffState) | newOnState; // ->0 only if recent reads are all 0, -> 1 if reads are all 1, else keep old val
    20b6:	cd 23       	and	r28, r29
    20b8:	c9 2b       	or	r28, r25
		*pInByte = newPipeStat;
    20ba:	c7 83       	std	Z+7, r28	; 0x07
		// end new V 0.56
		uint8_t statChange = (newPipeStat & ~oldPipeStat) & local_pipe_ModuleAssnRead; // new = 1, old = 0
    20bc:	8d 2f       	mov	r24, r29
    20be:	80 95       	com	r24
    20c0:	8c 23       	and	r24, r28
    20c2:	8e 21       	and	r24, r14
		if ((statChange)!= 0) {
    20c4:	21 f0       	breq	.+8      	; 0x20ce <__vector_21+0x436>
			// 0->1, pipe on
			myMessage.message8[MSG_BYTE_MODULEBITS] = statChange;
			myMessage.message8[MSG_BYTE_CMD_SHIFTBIT] = MESSAGE_PIPE_ON_HI | shiftBitNr;
			pipeMsgPush(myMessage);
    20c6:	9f 2d       	mov	r25, r15
    20c8:	90 62       	ori	r25, 0x20	; 32
    20ca:	0e 94 8b 27 	call	0x4f16	; 0x4f16 <pipeMsgPush>
		}
		statChange = (~newPipeStat & oldPipeStat) & local_pipe_ModuleAssnRead; // new = 0, old = 1
    20ce:	c0 95       	com	r28
    20d0:	cd 23       	and	r28, r29
    20d2:	8c 2f       	mov	r24, r28
    20d4:	8e 21       	and	r24, r14
		if ((statChange)!= 0) {
    20d6:	19 f0       	breq	.+6      	; 0x20de <__vector_21+0x446>
			// 1->0, pipe off
			myMessage.message8[MSG_BYTE_MODULEBITS] = statChange;
			myMessage.message8[MSG_BYTE_CMD_SHIFTBIT] = MESSAGE_PIPE_OFF_HI | shiftBitNr;
			pipeMsgPush(myMessage);
    20d8:	9f 2d       	mov	r25, r15
    20da:	0e 94 8b 27 	call	0x4f16	; 0x4f16 <pipeMsgPush>
		}
		curPipe++;
    20de:	08 5f       	subi	r16, 0xF8	; 248
    20e0:	1f 4f       	sbci	r17, 0xFF	; 255
		pipeProcessing |= PIPE_IO_PROC_DONE; // to show that pipe[].pipeInStat is updated
    20e2:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <pipeProcessing>
    20e6:	81 60       	ori	r24, 0x01	; 1
    20e8:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <pipeProcessing>

static inline void timerPipeProcess(){
	Pipe_t *curPipe;
	curPipe = &pipe[0];
	uint8_t local_pipe_ModuleAssnRead = pipe_ModuleAssnRead; // 1= module message processeced
	for (uint8_t shiftBitNr = 0; shiftBitNr < PIPE_SHIFTBIT_COUNT; shiftBitNr++) {
    20ec:	f3 94       	inc	r15
    20ee:	ff e1       	ldi	r31, 0x1F	; 31
    20f0:	ff 15       	cp	r31, r15
    20f2:	88 f6       	brcc	.-94     	; 0x2096 <__vector_21+0x3fe>
		case 3: if (pipeProcessing != PIPE_IO_DISABLE) {
				timerPipeProcess();
			}
			break;
	}
	LED_PORT &= ~(1 << LED_PIN); // LED off (1 = on, 0 = off)
    20f4:	85 b1       	in	r24, 0x05	; 5
    20f6:	8f 77       	andi	r24, 0x7F	; 127
    20f8:	85 b9       	out	0x05, r24	; 5

}
    20fa:	ff 91       	pop	r31
    20fc:	ef 91       	pop	r30
    20fe:	df 91       	pop	r29
    2100:	cf 91       	pop	r28
    2102:	bf 91       	pop	r27
    2104:	af 91       	pop	r26
    2106:	9f 91       	pop	r25
    2108:	8f 91       	pop	r24
    210a:	7f 91       	pop	r23
    210c:	6f 91       	pop	r22
    210e:	5f 91       	pop	r21
    2110:	4f 91       	pop	r20
    2112:	3f 91       	pop	r19
    2114:	2f 91       	pop	r18
    2116:	1f 91       	pop	r17
    2118:	0f 91       	pop	r16
    211a:	ff 90       	pop	r15
    211c:	ef 90       	pop	r14
    211e:	0f 90       	pop	r0
    2120:	0b be       	out	0x3b, r0	; 59
    2122:	0f 90       	pop	r0
    2124:	0f be       	out	0x3f, r0	; 63
    2126:	0f 90       	pop	r0
    2128:	1f 90       	pop	r1
    212a:	18 95       	reti

0000212c <init_iopins>:

// Portpins definieren - alle Eingang mit Pullup
void init_iopins (void)
{
	// DDRs are set to 0 by HW, here pullups only
	PORTA = 0xFF;
    212c:	8f ef       	ldi	r24, 0xFF	; 255
    212e:	82 b9       	out	0x02, r24	; 2
	PORTB = 0xFF;
    2130:	85 b9       	out	0x05, r24	; 5
	PORTC = 0xFF;
    2132:	88 b9       	out	0x08, r24	; 8
	PORTD = 0xFF;
    2134:	8b b9       	out	0x0b, r24	; 11
	PORTE = 0xFF;
    2136:	8e b9       	out	0x0e, r24	; 14
	PORTF = 0xFF;
    2138:	81 bb       	out	0x11, r24	; 17
	PORTG = 0xFF;
    213a:	84 bb       	out	0x14, r24	; 20
	PORTH = 0xFF;
    213c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
	PORTJ = 0xFF;
    2140:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
	PORTK = 0xFF;
    2144:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
	PORTL = 0xFF; 
    2148:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
	PIPE_OE_DDR  |= 1 << PIPE_OE_NR; // OE output
    214c:	8a b1       	in	r24, 0x0a	; 10
    214e:	80 68       	ori	r24, 0x80	; 128
    2150:	8a b9       	out	0x0a, r24	; 10
	PIPE_OE_PORT &= ~(1 << PIPE_OE_NR); // OE off
    2152:	8b b1       	in	r24, 0x0b	; 11
    2154:	8f 77       	andi	r24, 0x7F	; 127
    2156:	8b b9       	out	0x0b, r24	; 11
	PWR_EN_DDR |= 1 << PWR_EN_PIN; // 12V Enable Port
    2158:	84 b1       	in	r24, 0x04	; 4
    215a:	80 64       	ori	r24, 0x40	; 64
    215c:	84 b9       	out	0x04, r24	; 4
	PWR_EN_PORT &= ~(1 << PWR_EN_PIN); // 0= Power off;
    215e:	85 b1       	in	r24, 0x05	; 5
    2160:	8f 7b       	andi	r24, 0xBF	; 191
    2162:	85 b9       	out	0x05, r24	; 5
    2164:	08 95       	ret

00002166 <lcd_write_nibble>:
    2166:	88 23       	and	r24, r24
    2168:	34 f4       	brge	.+12     	; 0x2176 <lcd_write_nibble+0x10>
    216a:	e2 e0       	ldi	r30, 0x02	; 2
    216c:	f1 e0       	ldi	r31, 0x01	; 1
    216e:	90 81       	ld	r25, Z
    2170:	90 61       	ori	r25, 0x10	; 16
    2172:	90 83       	st	Z, r25
    2174:	05 c0       	rjmp	.+10     	; 0x2180 <lcd_write_nibble+0x1a>
    2176:	e2 e0       	ldi	r30, 0x02	; 2
    2178:	f1 e0       	ldi	r31, 0x01	; 1
    217a:	90 81       	ld	r25, Z
    217c:	9f 7e       	andi	r25, 0xEF	; 239
    217e:	90 83       	st	Z, r25
    2180:	86 ff       	sbrs	r24, 6
    2182:	06 c0       	rjmp	.+12     	; 0x2190 <lcd_write_nibble+0x2a>
    2184:	e2 e0       	ldi	r30, 0x02	; 2
    2186:	f1 e0       	ldi	r31, 0x01	; 1
    2188:	90 81       	ld	r25, Z
    218a:	98 60       	ori	r25, 0x08	; 8
    218c:	90 83       	st	Z, r25
    218e:	05 c0       	rjmp	.+10     	; 0x219a <lcd_write_nibble+0x34>
    2190:	e2 e0       	ldi	r30, 0x02	; 2
    2192:	f1 e0       	ldi	r31, 0x01	; 1
    2194:	90 81       	ld	r25, Z
    2196:	97 7f       	andi	r25, 0xF7	; 247
    2198:	90 83       	st	Z, r25
    219a:	85 ff       	sbrs	r24, 5
    219c:	04 c0       	rjmp	.+8      	; 0x21a6 <lcd_write_nibble+0x40>
    219e:	9e b1       	in	r25, 0x0e	; 14
    21a0:	98 60       	ori	r25, 0x08	; 8
    21a2:	9e b9       	out	0x0e, r25	; 14
    21a4:	03 c0       	rjmp	.+6      	; 0x21ac <lcd_write_nibble+0x46>
    21a6:	9e b1       	in	r25, 0x0e	; 14
    21a8:	97 7f       	andi	r25, 0xF7	; 247
    21aa:	9e b9       	out	0x0e, r25	; 14
    21ac:	84 ff       	sbrs	r24, 4
    21ae:	04 c0       	rjmp	.+8      	; 0x21b8 <lcd_write_nibble+0x52>
    21b0:	84 b3       	in	r24, 0x14	; 20
    21b2:	80 62       	ori	r24, 0x20	; 32
    21b4:	84 bb       	out	0x14, r24	; 20
    21b6:	03 c0       	rjmp	.+6      	; 0x21be <lcd_write_nibble+0x58>
    21b8:	84 b3       	in	r24, 0x14	; 20
    21ba:	8f 7d       	andi	r24, 0xDF	; 223
    21bc:	84 bb       	out	0x14, r24	; 20
    21be:	e2 e0       	ldi	r30, 0x02	; 2
    21c0:	f1 e0       	ldi	r31, 0x01	; 1
    21c2:	80 81       	ld	r24, Z
    21c4:	80 64       	ori	r24, 0x40	; 64
    21c6:	80 83       	st	Z, r24
    21c8:	85 e0       	ldi	r24, 0x05	; 5
    21ca:	8a 95       	dec	r24
    21cc:	f1 f7       	brne	.-4      	; 0x21ca <lcd_write_nibble+0x64>
    21ce:	00 00       	nop
    21d0:	80 81       	ld	r24, Z
    21d2:	8f 7b       	andi	r24, 0xBF	; 191
    21d4:	80 83       	st	Z, r24
    21d6:	85 e0       	ldi	r24, 0x05	; 5
    21d8:	8a 95       	dec	r24
    21da:	f1 f7       	brne	.-4      	; 0x21d8 <lcd_write_nibble+0x72>
    21dc:	00 00       	nop
    21de:	08 95       	ret

000021e0 <lcd_write_character>:
    21e0:	cf 93       	push	r28
    21e2:	c8 2f       	mov	r28, r24
    21e4:	e2 e0       	ldi	r30, 0x02	; 2
    21e6:	f1 e0       	ldi	r31, 0x01	; 1
    21e8:	80 81       	ld	r24, Z
    21ea:	80 62       	ori	r24, 0x20	; 32
    21ec:	80 83       	st	Z, r24
    21ee:	80 81       	ld	r24, Z
    21f0:	8f 7b       	andi	r24, 0xBF	; 191
    21f2:	80 83       	st	Z, r24
    21f4:	8c 2f       	mov	r24, r28
    21f6:	b7 df       	rcall	.-146    	; 0x2166 <lcd_write_nibble>
    21f8:	8c 2f       	mov	r24, r28
    21fa:	82 95       	swap	r24
    21fc:	80 7f       	andi	r24, 0xF0	; 240
    21fe:	b3 df       	rcall	.-154    	; 0x2166 <lcd_write_nibble>
    2200:	8f ef       	ldi	r24, 0xFF	; 255
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	01 97       	sbiw	r24, 0x01	; 1
    2206:	f1 f7       	brne	.-4      	; 0x2204 <__stack+0x5>
    2208:	00 c0       	rjmp	.+0      	; 0x220a <__stack+0xb>
    220a:	00 00       	nop
    220c:	cf 91       	pop	r28
    220e:	08 95       	ret

00002210 <lcd_write_command>:
    2210:	cf 93       	push	r28
    2212:	c8 2f       	mov	r28, r24
    2214:	e2 e0       	ldi	r30, 0x02	; 2
    2216:	f1 e0       	ldi	r31, 0x01	; 1
    2218:	80 81       	ld	r24, Z
    221a:	8f 7d       	andi	r24, 0xDF	; 223
    221c:	80 83       	st	Z, r24
    221e:	80 81       	ld	r24, Z
    2220:	8f 7b       	andi	r24, 0xBF	; 191
    2222:	80 83       	st	Z, r24
    2224:	8c 2f       	mov	r24, r28
    2226:	9f df       	rcall	.-194    	; 0x2166 <lcd_write_nibble>
    2228:	8c 2f       	mov	r24, r28
    222a:	82 95       	swap	r24
    222c:	80 7f       	andi	r24, 0xF0	; 240
    222e:	9b df       	rcall	.-202    	; 0x2166 <lcd_write_nibble>
    2230:	c1 50       	subi	r28, 0x01	; 1
    2232:	c2 30       	cpi	r28, 0x02	; 2
    2234:	38 f4       	brcc	.+14     	; 0x2244 <lcd_write_command+0x34>
    2236:	8f e0       	ldi	r24, 0x0F	; 15
    2238:	97 e2       	ldi	r25, 0x27	; 39
    223a:	01 97       	sbiw	r24, 0x01	; 1
    223c:	f1 f7       	brne	.-4      	; 0x223a <lcd_write_command+0x2a>
    223e:	00 c0       	rjmp	.+0      	; 0x2240 <lcd_write_command+0x30>
    2240:	00 00       	nop
    2242:	06 c0       	rjmp	.+12     	; 0x2250 <lcd_write_command+0x40>
    2244:	8f ef       	ldi	r24, 0xFF	; 255
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	01 97       	sbiw	r24, 0x01	; 1
    224a:	f1 f7       	brne	.-4      	; 0x2248 <lcd_write_command+0x38>
    224c:	00 c0       	rjmp	.+0      	; 0x224e <lcd_write_command+0x3e>
    224e:	00 00       	nop
    2250:	cf 91       	pop	r28
    2252:	08 95       	ret

00002254 <lcd_init>:
    2254:	e1 e0       	ldi	r30, 0x01	; 1
    2256:	f1 e0       	ldi	r31, 0x01	; 1
    2258:	80 81       	ld	r24, Z
    225a:	80 61       	ori	r24, 0x10	; 16
    225c:	80 83       	st	Z, r24
    225e:	80 81       	ld	r24, Z
    2260:	88 60       	ori	r24, 0x08	; 8
    2262:	80 83       	st	Z, r24
    2264:	8d b1       	in	r24, 0x0d	; 13
    2266:	88 60       	ori	r24, 0x08	; 8
    2268:	8d b9       	out	0x0d, r24	; 13
    226a:	83 b3       	in	r24, 0x13	; 19
    226c:	80 62       	ori	r24, 0x20	; 32
    226e:	83 bb       	out	0x13, r24	; 19
    2270:	80 81       	ld	r24, Z
    2272:	80 64       	ori	r24, 0x40	; 64
    2274:	80 83       	st	Z, r24
    2276:	80 81       	ld	r24, Z
    2278:	80 62       	ori	r24, 0x20	; 32
    227a:	80 83       	st	Z, r24
    227c:	2f ef       	ldi	r18, 0xFF	; 255
    227e:	81 ee       	ldi	r24, 0xE1	; 225
    2280:	94 e0       	ldi	r25, 0x04	; 4
    2282:	21 50       	subi	r18, 0x01	; 1
    2284:	80 40       	sbci	r24, 0x00	; 0
    2286:	90 40       	sbci	r25, 0x00	; 0
    2288:	e1 f7       	brne	.-8      	; 0x2282 <lcd_init+0x2e>
    228a:	00 c0       	rjmp	.+0      	; 0x228c <lcd_init+0x38>
    228c:	00 00       	nop
    228e:	e2 e0       	ldi	r30, 0x02	; 2
    2290:	f1 e0       	ldi	r31, 0x01	; 1
    2292:	80 81       	ld	r24, Z
    2294:	8f 7d       	andi	r24, 0xDF	; 223
    2296:	80 83       	st	Z, r24
    2298:	80 81       	ld	r24, Z
    229a:	8f 7b       	andi	r24, 0xBF	; 191
    229c:	80 83       	st	Z, r24
    229e:	80 e3       	ldi	r24, 0x30	; 48
    22a0:	62 df       	rcall	.-316    	; 0x2166 <lcd_write_nibble>
    22a2:	8f e1       	ldi	r24, 0x1F	; 31
    22a4:	9e e4       	ldi	r25, 0x4E	; 78
    22a6:	01 97       	sbiw	r24, 0x01	; 1
    22a8:	f1 f7       	brne	.-4      	; 0x22a6 <lcd_init+0x52>
    22aa:	00 c0       	rjmp	.+0      	; 0x22ac <lcd_init+0x58>
    22ac:	00 00       	nop
    22ae:	80 e3       	ldi	r24, 0x30	; 48
    22b0:	5a df       	rcall	.-332    	; 0x2166 <lcd_write_nibble>
    22b2:	8f e1       	ldi	r24, 0x1F	; 31
    22b4:	9e e4       	ldi	r25, 0x4E	; 78
    22b6:	01 97       	sbiw	r24, 0x01	; 1
    22b8:	f1 f7       	brne	.-4      	; 0x22b6 <lcd_init+0x62>
    22ba:	00 c0       	rjmp	.+0      	; 0x22bc <lcd_init+0x68>
    22bc:	00 00       	nop
    22be:	80 e3       	ldi	r24, 0x30	; 48
    22c0:	52 df       	rcall	.-348    	; 0x2166 <lcd_write_nibble>
    22c2:	8f e1       	ldi	r24, 0x1F	; 31
    22c4:	9e e4       	ldi	r25, 0x4E	; 78
    22c6:	01 97       	sbiw	r24, 0x01	; 1
    22c8:	f1 f7       	brne	.-4      	; 0x22c6 <lcd_init+0x72>
    22ca:	00 c0       	rjmp	.+0      	; 0x22cc <lcd_init+0x78>
    22cc:	00 00       	nop
    22ce:	88 e2       	ldi	r24, 0x28	; 40
    22d0:	4a df       	rcall	.-364    	; 0x2166 <lcd_write_nibble>
    22d2:	8f ef       	ldi	r24, 0xFF	; 255
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	01 97       	sbiw	r24, 0x01	; 1
    22d8:	f1 f7       	brne	.-4      	; 0x22d6 <lcd_init+0x82>
    22da:	00 c0       	rjmp	.+0      	; 0x22dc <lcd_init+0x88>
    22dc:	00 00       	nop
    22de:	88 e2       	ldi	r24, 0x28	; 40
    22e0:	97 df       	rcall	.-210    	; 0x2210 <lcd_write_command>
    22e2:	88 e0       	ldi	r24, 0x08	; 8
    22e4:	95 df       	rcall	.-214    	; 0x2210 <lcd_write_command>
    22e6:	81 e0       	ldi	r24, 0x01	; 1
    22e8:	93 df       	rcall	.-218    	; 0x2210 <lcd_write_command>
    22ea:	86 e0       	ldi	r24, 0x06	; 6
    22ec:	91 df       	rcall	.-222    	; 0x2210 <lcd_write_command>
    22ee:	8c e0       	ldi	r24, 0x0C	; 12
    22f0:	8f cf       	rjmp	.-226    	; 0x2210 <lcd_write_command>
    22f2:	08 95       	ret

000022f4 <lcd_goto>:
    22f4:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <lcd_cursorPos>
    22f8:	80 58       	subi	r24, 0x80	; 128
    22fa:	8a cf       	rjmp	.-236    	; 0x2210 <lcd_write_command>
    22fc:	08 95       	ret

000022fe <lcd_clrscr>:
    22fe:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <lcd_cursorPos>
    2302:	81 e0       	ldi	r24, 0x01	; 1
    2304:	85 cf       	rjmp	.-246    	; 0x2210 <lcd_write_command>
    2306:	08 95       	ret

00002308 <lcd_putc>:
    2308:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <lcd_cursorPos>
    230c:	9f 5f       	subi	r25, 0xFF	; 255
    230e:	9f 77       	andi	r25, 0x7F	; 127
    2310:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <lcd_cursorPos>
    2314:	65 cf       	rjmp	.-310    	; 0x21e0 <lcd_write_character>
    2316:	08 95       	ret

00002318 <lcd_puts>:
    2318:	cf 93       	push	r28
    231a:	df 93       	push	r29
    231c:	fc 01       	movw	r30, r24
    231e:	89 2b       	or	r24, r25
    2320:	19 f4       	brne	.+6      	; 0x2328 <lcd_puts+0x10>
    2322:	07 c0       	rjmp	.+14     	; 0x2332 <lcd_puts+0x1a>
    2324:	f1 df       	rcall	.-30     	; 0x2308 <lcd_putc>
    2326:	fe 01       	movw	r30, r28
    2328:	ef 01       	movw	r28, r30
    232a:	21 96       	adiw	r28, 0x01	; 1
    232c:	80 81       	ld	r24, Z
    232e:	81 11       	cpse	r24, r1
    2330:	f9 cf       	rjmp	.-14     	; 0x2324 <lcd_puts+0xc>
    2332:	df 91       	pop	r29
    2334:	cf 91       	pop	r28
    2336:	08 95       	ret

00002338 <lcd_puts_P>:
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
    233c:	fc 01       	movw	r30, r24
    233e:	89 2b       	or	r24, r25
    2340:	19 f4       	brne	.+6      	; 0x2348 <lcd_puts_P+0x10>
    2342:	07 c0       	rjmp	.+14     	; 0x2352 <lcd_puts_P+0x1a>
    2344:	e1 df       	rcall	.-62     	; 0x2308 <lcd_putc>
    2346:	fe 01       	movw	r30, r28
    2348:	ef 01       	movw	r28, r30
    234a:	21 96       	adiw	r28, 0x01	; 1
    234c:	84 91       	lpm	r24, Z
    234e:	81 11       	cpse	r24, r1
    2350:	f9 cf       	rjmp	.-14     	; 0x2344 <lcd_puts_P+0xc>
    2352:	df 91       	pop	r29
    2354:	cf 91       	pop	r28
    2356:	08 95       	ret

00002358 <init_log>:

void log_putWarning(uint8_t LogCat, uint8_t LogNr, uint16_t LogInfo){
	log_put(LogCat, LogNr, LogInfo, LOG_TYPE_WARNING)	;
}
void log_putInfo(uint8_t LogCat, uint8_t LogNr, uint16_t LogInfo){
	log_put(LogCat, LogNr, LogInfo, LOG_TYPE_INFO)	;
    2358:	80 e8       	ldi	r24, 0x80	; 128
    235a:	93 e0       	ldi	r25, 0x03	; 3
    235c:	90 93 13 05 	sts	0x0513, r25	; 0x800513 <pLogStart+0x1>
    2360:	80 93 12 05 	sts	0x0512, r24	; 0x800512 <pLogStart>
    2364:	90 93 11 05 	sts	0x0511, r25	; 0x800511 <pLogEnd+0x1>
    2368:	80 93 10 05 	sts	0x0510, r24	; 0x800510 <pLogEnd>
    236c:	08 95       	ret

0000236e <log_count>:
    236e:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <pLogEnd>
    2372:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <pLogEnd+0x1>
    2376:	20 91 12 05 	lds	r18, 0x0512	; 0x800512 <pLogStart>
    237a:	30 91 13 05 	lds	r19, 0x0513	; 0x800513 <pLogStart+0x1>
    237e:	82 17       	cp	r24, r18
    2380:	93 07       	cpc	r25, r19
    2382:	48 f0       	brcs	.+18     	; 0x2396 <log_count+0x28>
    2384:	82 1b       	sub	r24, r18
    2386:	93 0b       	sbc	r25, r19
    2388:	95 95       	asr	r25
    238a:	87 95       	ror	r24
    238c:	9d ec       	ldi	r25, 0xCD	; 205
    238e:	89 9f       	mul	r24, r25
    2390:	80 2d       	mov	r24, r0
    2392:	11 24       	eor	r1, r1
    2394:	08 95       	ret
    2396:	80 57       	subi	r24, 0x70	; 112
    2398:	9e 4f       	sbci	r25, 0xFE	; 254
    239a:	82 1b       	sub	r24, r18
    239c:	93 0b       	sbc	r25, r19
    239e:	95 95       	asr	r25
    23a0:	87 95       	ror	r24
    23a2:	9d ec       	ldi	r25, 0xCD	; 205
    23a4:	89 9f       	mul	r24, r25
    23a6:	80 2d       	mov	r24, r0
    23a8:	11 24       	eor	r1, r1
    23aa:	08 95       	ret

000023ac <log_getLog>:
    23ac:	cf 93       	push	r28
    23ae:	c8 2f       	mov	r28, r24
    23b0:	de df       	rcall	.-68     	; 0x236e <log_count>
    23b2:	c8 17       	cp	r28, r24
    23b4:	f8 f4       	brcc	.+62     	; 0x23f4 <log_getLog+0x48>
    23b6:	40 91 12 05 	lds	r20, 0x0512	; 0x800512 <pLogStart>
    23ba:	50 91 13 05 	lds	r21, 0x0513	; 0x800513 <pLogStart+0x1>
    23be:	8c 2f       	mov	r24, r28
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	9c 01       	movw	r18, r24
    23c4:	22 0f       	add	r18, r18
    23c6:	33 1f       	adc	r19, r19
    23c8:	88 0f       	add	r24, r24
    23ca:	99 1f       	adc	r25, r25
    23cc:	88 0f       	add	r24, r24
    23ce:	99 1f       	adc	r25, r25
    23d0:	88 0f       	add	r24, r24
    23d2:	99 1f       	adc	r25, r25
    23d4:	28 0f       	add	r18, r24
    23d6:	39 1f       	adc	r19, r25
    23d8:	ca 01       	movw	r24, r20
    23da:	82 0f       	add	r24, r18
    23dc:	93 1f       	adc	r25, r19
    23de:	65 e0       	ldi	r22, 0x05	; 5
    23e0:	86 30       	cpi	r24, 0x06	; 6
    23e2:	96 07       	cpc	r25, r22
    23e4:	49 f0       	breq	.+18     	; 0x23f8 <log_getLog+0x4c>
    23e6:	40 f0       	brcs	.+16     	; 0x23f8 <log_getLog+0x4c>
    23e8:	20 59       	subi	r18, 0x90	; 144
    23ea:	31 40       	sbci	r19, 0x01	; 1
    23ec:	ca 01       	movw	r24, r20
    23ee:	82 0f       	add	r24, r18
    23f0:	93 1f       	adc	r25, r19
    23f2:	02 c0       	rjmp	.+4      	; 0x23f8 <log_getLog+0x4c>
    23f4:	80 e0       	ldi	r24, 0x00	; 0
    23f6:	90 e0       	ldi	r25, 0x00	; 0
    23f8:	cf 91       	pop	r28
    23fa:	08 95       	ret

000023fc <getErrorText>:
    23fc:	d7 df       	rcall	.-82     	; 0x23ac <log_getLog>
    23fe:	00 97       	sbiw	r24, 0x00	; 0
    2400:	f1 f1       	breq	.+124    	; 0x247e <getErrorText+0x82>
    2402:	fc 01       	movw	r30, r24
    2404:	36 81       	ldd	r19, Z+6	; 0x06
    2406:	67 81       	ldd	r22, Z+7	; 0x07
    2408:	20 e0       	ldi	r18, 0x00	; 0
    240a:	34 c0       	rjmp	.+104    	; 0x2474 <getErrorText+0x78>
    240c:	42 2f       	mov	r20, r18
    240e:	50 e0       	ldi	r21, 0x00	; 0
    2410:	fa 01       	movw	r30, r20
    2412:	ee 0f       	add	r30, r30
    2414:	ff 1f       	adc	r31, r31
    2416:	cf 01       	movw	r24, r30
    2418:	88 0f       	add	r24, r24
    241a:	99 1f       	adc	r25, r25
    241c:	88 0f       	add	r24, r24
    241e:	99 1f       	adc	r25, r25
    2420:	88 0f       	add	r24, r24
    2422:	99 1f       	adc	r25, r25
    2424:	e8 0f       	add	r30, r24
    2426:	f9 1f       	adc	r31, r25
    2428:	e6 59       	subi	r30, 0x96	; 150
    242a:	fe 4f       	sbci	r31, 0xFE	; 254
    242c:	84 91       	lpm	r24, Z
    242e:	38 13       	cpse	r19, r24
    2430:	20 c0       	rjmp	.+64     	; 0x2472 <getErrorText+0x76>
    2432:	fa 01       	movw	r30, r20
    2434:	ee 0f       	add	r30, r30
    2436:	ff 1f       	adc	r31, r31
    2438:	cf 01       	movw	r24, r30
    243a:	88 0f       	add	r24, r24
    243c:	99 1f       	adc	r25, r25
    243e:	88 0f       	add	r24, r24
    2440:	99 1f       	adc	r25, r25
    2442:	88 0f       	add	r24, r24
    2444:	99 1f       	adc	r25, r25
    2446:	e8 0f       	add	r30, r24
    2448:	f9 1f       	adc	r31, r25
    244a:	e5 59       	subi	r30, 0x95	; 149
    244c:	fe 4f       	sbci	r31, 0xFE	; 254
    244e:	84 91       	lpm	r24, Z
    2450:	68 13       	cpse	r22, r24
    2452:	0f c0       	rjmp	.+30     	; 0x2472 <getErrorText+0x76>
    2454:	44 0f       	add	r20, r20
    2456:	55 1f       	adc	r21, r21
    2458:	ca 01       	movw	r24, r20
    245a:	88 0f       	add	r24, r24
    245c:	99 1f       	adc	r25, r25
    245e:	88 0f       	add	r24, r24
    2460:	99 1f       	adc	r25, r25
    2462:	88 0f       	add	r24, r24
    2464:	99 1f       	adc	r25, r25
    2466:	48 0f       	add	r20, r24
    2468:	59 1f       	adc	r21, r25
    246a:	ca 01       	movw	r24, r20
    246c:	84 59       	subi	r24, 0x94	; 148
    246e:	9e 4f       	sbci	r25, 0xFE	; 254
    2470:	08 95       	ret
    2472:	2f 5f       	subi	r18, 0xFF	; 255
    2474:	2f 30       	cpi	r18, 0x0F	; 15
    2476:	50 f2       	brcs	.-108    	; 0x240c <getErrorText+0x10>
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	90 e0       	ldi	r25, 0x00	; 0
    247c:	08 95       	ret
    247e:	80 e0       	ldi	r24, 0x00	; 0
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	08 95       	ret

00002484 <logCheckUnreadErrorLogs>:
    2484:	cf 93       	push	r28
    2486:	73 df       	rcall	.-282    	; 0x236e <log_count>
    2488:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <log_unreadErrors>
    248c:	81 11       	cpse	r24, r1
    248e:	14 c0       	rjmp	.+40     	; 0x24b8 <logCheckUnreadErrorLogs+0x34>
    2490:	17 c0       	rjmp	.+46     	; 0x24c0 <logCheckUnreadErrorLogs+0x3c>
    2492:	8c 2f       	mov	r24, r28
    2494:	8b df       	rcall	.-234    	; 0x23ac <log_getLog>
    2496:	00 97       	sbiw	r24, 0x00	; 0
    2498:	61 f0       	breq	.+24     	; 0x24b2 <logCheckUnreadErrorLogs+0x2e>
    249a:	fc 01       	movw	r30, r24
    249c:	24 81       	ldd	r18, Z+4	; 0x04
    249e:	20 32       	cpi	r18, 0x20	; 32
    24a0:	51 f0       	breq	.+20     	; 0x24b6 <logCheckUnreadErrorLogs+0x32>
    24a2:	95 81       	ldd	r25, Z+5	; 0x05
    24a4:	8c 2f       	mov	r24, r28
    24a6:	95 34       	cpi	r25, 0x45	; 69
    24a8:	39 f4       	brne	.+14     	; 0x24b8 <logCheckUnreadErrorLogs+0x34>
    24aa:	8f ef       	ldi	r24, 0xFF	; 255
    24ac:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <log_unreadErrors>
    24b0:	07 c0       	rjmp	.+14     	; 0x24c0 <logCheckUnreadErrorLogs+0x3c>
    24b2:	8c 2f       	mov	r24, r28
    24b4:	01 c0       	rjmp	.+2      	; 0x24b8 <logCheckUnreadErrorLogs+0x34>
    24b6:	8c 2f       	mov	r24, r28
    24b8:	cf ef       	ldi	r28, 0xFF	; 255
    24ba:	c8 0f       	add	r28, r24
    24bc:	81 11       	cpse	r24, r1
    24be:	e9 cf       	rjmp	.-46     	; 0x2492 <logCheckUnreadErrorLogs+0xe>
    24c0:	cf 91       	pop	r28
    24c2:	08 95       	ret

000024c4 <log_getShortTextFromPtr>:
    24c4:	1f 93       	push	r17
    24c6:	cf 93       	push	r28
    24c8:	df 93       	push	r29
    24ca:	00 97       	sbiw	r24, 0x00	; 0
    24cc:	09 f4       	brne	.+2      	; 0x24d0 <log_getShortTextFromPtr+0xc>
    24ce:	7b c0       	rjmp	.+246    	; 0x25c6 <log_getShortTextFromPtr+0x102>
    24d0:	16 2f       	mov	r17, r22
    24d2:	ec 01       	movw	r28, r24
    24d4:	8b 81       	ldd	r24, Y+3	; 0x03
    24d6:	88 23       	and	r24, r24
    24d8:	79 f0       	breq	.+30     	; 0x24f8 <log_getShortTextFromPtr+0x34>
    24da:	68 e5       	ldi	r22, 0x58	; 88
    24dc:	73 e0       	ldi	r23, 0x03	; 3
    24de:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    24e2:	bc 01       	movw	r22, r24
    24e4:	6f 5f       	subi	r22, 0xFF	; 255
    24e6:	7f 4f       	sbci	r23, 0xFF	; 255
    24e8:	28 e6       	ldi	r18, 0x68	; 104
    24ea:	fc 01       	movw	r30, r24
    24ec:	20 83       	st	Z, r18
    24ee:	8a 81       	ldd	r24, Y+2	; 0x02
    24f0:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    24f4:	dc 01       	movw	r26, r24
    24f6:	2f c0       	rjmp	.+94     	; 0x2556 <log_getShortTextFromPtr+0x92>
    24f8:	8a 81       	ldd	r24, Y+2	; 0x02
    24fa:	88 23       	and	r24, r24
    24fc:	79 f0       	breq	.+30     	; 0x251c <log_getShortTextFromPtr+0x58>
    24fe:	68 e5       	ldi	r22, 0x58	; 88
    2500:	73 e0       	ldi	r23, 0x03	; 3
    2502:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    2506:	bc 01       	movw	r22, r24
    2508:	6f 5f       	subi	r22, 0xFF	; 255
    250a:	7f 4f       	sbci	r23, 0xFF	; 255
    250c:	2d e6       	ldi	r18, 0x6D	; 109
    250e:	fc 01       	movw	r30, r24
    2510:	20 83       	st	Z, r18
    2512:	89 81       	ldd	r24, Y+1	; 0x01
    2514:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    2518:	dc 01       	movw	r26, r24
    251a:	1d c0       	rjmp	.+58     	; 0x2556 <log_getShortTextFromPtr+0x92>
    251c:	68 e5       	ldi	r22, 0x58	; 88
    251e:	73 e0       	ldi	r23, 0x03	; 3
    2520:	89 81       	ldd	r24, Y+1	; 0x01
    2522:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    2526:	fc 01       	movw	r30, r24
    2528:	83 e7       	ldi	r24, 0x73	; 115
    252a:	80 83       	st	Z, r24
    252c:	98 81       	ld	r25, Y
    252e:	99 0f       	add	r25, r25
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	02 c0       	rjmp	.+4      	; 0x2538 <log_getShortTextFromPtr+0x74>
    2534:	99 51       	subi	r25, 0x19	; 25
    2536:	2f 5f       	subi	r18, 0xFF	; 255
    2538:	99 31       	cpi	r25, 0x19	; 25
    253a:	e0 f7       	brcc	.-8      	; 0x2534 <log_getShortTextFromPtr+0x70>
    253c:	20 5d       	subi	r18, 0xD0	; 208
    253e:	21 83       	std	Z+1, r18	; 0x01
    2540:	99 0f       	add	r25, r25
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	02 c0       	rjmp	.+4      	; 0x254a <log_getShortTextFromPtr+0x86>
    2546:	95 50       	subi	r25, 0x05	; 5
    2548:	2f 5f       	subi	r18, 0xFF	; 255
    254a:	95 30       	cpi	r25, 0x05	; 5
    254c:	e0 f7       	brcc	.-8      	; 0x2546 <log_getShortTextFromPtr+0x82>
    254e:	df 01       	movw	r26, r30
    2550:	13 96       	adiw	r26, 0x03	; 3
    2552:	20 5d       	subi	r18, 0xD0	; 208
    2554:	22 83       	std	Z+2, r18	; 0x02
    2556:	9c 81       	ldd	r25, Y+4	; 0x04
    2558:	90 34       	cpi	r25, 0x40	; 64
    255a:	51 f0       	breq	.+20     	; 0x2570 <log_getShortTextFromPtr+0xac>
    255c:	90 38       	cpi	r25, 0x80	; 128
    255e:	19 f0       	breq	.+6      	; 0x2566 <log_getShortTextFromPtr+0xa2>
    2560:	90 32       	cpi	r25, 0x20	; 32
    2562:	81 f4       	brne	.+32     	; 0x2584 <log_getShortTextFromPtr+0xc0>
    2564:	0a c0       	rjmp	.+20     	; 0x257a <log_getShortTextFromPtr+0xb6>
    2566:	fd 01       	movw	r30, r26
    2568:	31 96       	adiw	r30, 0x01	; 1
    256a:	8a e2       	ldi	r24, 0x2A	; 42
    256c:	8c 93       	st	X, r24
    256e:	0e c0       	rjmp	.+28     	; 0x258c <log_getShortTextFromPtr+0xc8>
    2570:	fd 01       	movw	r30, r26
    2572:	31 96       	adiw	r30, 0x01	; 1
    2574:	85 ea       	ldi	r24, 0xA5	; 165
    2576:	8c 93       	st	X, r24
    2578:	09 c0       	rjmp	.+18     	; 0x258c <log_getShortTextFromPtr+0xc8>
    257a:	fd 01       	movw	r30, r26
    257c:	31 96       	adiw	r30, 0x01	; 1
    257e:	80 e2       	ldi	r24, 0x20	; 32
    2580:	8c 93       	st	X, r24
    2582:	04 c0       	rjmp	.+8      	; 0x258c <log_getShortTextFromPtr+0xc8>
    2584:	fd 01       	movw	r30, r26
    2586:	31 96       	adiw	r30, 0x01	; 1
    2588:	8f e3       	ldi	r24, 0x3F	; 63
    258a:	8c 93       	st	X, r24
    258c:	bf 01       	movw	r22, r30
    258e:	6f 5f       	subi	r22, 0xFF	; 255
    2590:	7f 4f       	sbci	r23, 0xFF	; 255
    2592:	8d 81       	ldd	r24, Y+5	; 0x05
    2594:	80 83       	st	Z, r24
    2596:	8e 81       	ldd	r24, Y+6	; 0x06
    2598:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    259c:	bc 01       	movw	r22, r24
    259e:	8f 81       	ldd	r24, Y+7	; 0x07
    25a0:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    25a4:	bc 01       	movw	r22, r24
    25a6:	6f 5f       	subi	r22, 0xFF	; 255
    25a8:	7f 4f       	sbci	r23, 0xFF	; 255
    25aa:	2d e2       	ldi	r18, 0x2D	; 45
    25ac:	fc 01       	movw	r30, r24
    25ae:	20 83       	st	Z, r18
    25b0:	88 85       	ldd	r24, Y+8	; 0x08
    25b2:	99 85       	ldd	r25, Y+9	; 0x09
    25b4:	0e 94 75 30 	call	0x60ea	; 0x60ea <putChar_long>
    25b8:	fc 01       	movw	r30, r24
    25ba:	10 82       	st	Z, r1
    25bc:	1f 3f       	cpi	r17, 0xFF	; 255
    25be:	41 f0       	breq	.+16     	; 0x25d0 <log_getShortTextFromPtr+0x10c>
    25c0:	1c 83       	std	Y+4, r17	; 0x04
    25c2:	60 df       	rcall	.-320    	; 0x2484 <logCheckUnreadErrorLogs>
    25c4:	05 c0       	rjmp	.+10     	; 0x25d0 <log_getShortTextFromPtr+0x10c>
    25c6:	e8 e5       	ldi	r30, 0x58	; 88
    25c8:	f3 e0       	ldi	r31, 0x03	; 3
    25ca:	8d e2       	ldi	r24, 0x2D	; 45
    25cc:	80 83       	st	Z, r24
    25ce:	11 82       	std	Z+1, r1	; 0x01
    25d0:	88 e5       	ldi	r24, 0x58	; 88
    25d2:	93 e0       	ldi	r25, 0x03	; 3
    25d4:	df 91       	pop	r29
    25d6:	cf 91       	pop	r28
    25d8:	1f 91       	pop	r17
    25da:	08 95       	ret

000025dc <log_put>:
    25dc:	e0 91 10 05 	lds	r30, 0x0510	; 0x800510 <pLogEnd>
    25e0:	f0 91 11 05 	lds	r31, 0x0511	; 0x800511 <pLogEnd+0x1>
    25e4:	af e3       	ldi	r26, 0x3F	; 63
    25e6:	b2 e0       	ldi	r27, 0x02	; 2
    25e8:	9c 91       	ld	r25, X
    25ea:	90 83       	st	Z, r25
    25ec:	e0 91 10 05 	lds	r30, 0x0510	; 0x800510 <pLogEnd>
    25f0:	f0 91 11 05 	lds	r31, 0x0511	; 0x800511 <pLogEnd+0x1>
    25f4:	11 96       	adiw	r26, 0x01	; 1
    25f6:	9c 91       	ld	r25, X
    25f8:	11 97       	sbiw	r26, 0x01	; 1
    25fa:	91 83       	std	Z+1, r25	; 0x01
    25fc:	e0 91 10 05 	lds	r30, 0x0510	; 0x800510 <pLogEnd>
    2600:	f0 91 11 05 	lds	r31, 0x0511	; 0x800511 <pLogEnd+0x1>
    2604:	12 96       	adiw	r26, 0x02	; 2
    2606:	9c 91       	ld	r25, X
    2608:	12 97       	sbiw	r26, 0x02	; 2
    260a:	92 83       	std	Z+2, r25	; 0x02
    260c:	13 96       	adiw	r26, 0x03	; 3
    260e:	9c 91       	ld	r25, X
    2610:	93 83       	std	Z+3, r25	; 0x03
    2612:	25 83       	std	Z+5, r18	; 0x05
    2614:	86 83       	std	Z+6, r24	; 0x06
    2616:	67 83       	std	Z+7, r22	; 0x07
    2618:	51 87       	std	Z+9, r21	; 0x09
    261a:	40 87       	std	Z+8, r20	; 0x08
    261c:	80 e8       	ldi	r24, 0x80	; 128
    261e:	84 83       	std	Z+4, r24	; 0x04
    2620:	80 91 d0 0b 	lds	r24, 0x0BD0	; 0x800bd0 <serusb_Active>
    2624:	8f 3f       	cpi	r24, 0xFF	; 255
    2626:	81 f4       	brne	.+32     	; 0x2648 <log_put+0x6c>
    2628:	84 e6       	ldi	r24, 0x64	; 100
    262a:	91 e0       	ldi	r25, 0x01	; 1
    262c:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    2630:	6f ef       	ldi	r22, 0xFF	; 255
    2632:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <pLogEnd>
    2636:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <pLogEnd+0x1>
    263a:	44 df       	rcall	.-376    	; 0x24c4 <log_getShortTextFromPtr>
    263c:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    2640:	82 ef       	ldi	r24, 0xF2	; 242
    2642:	90 e1       	ldi	r25, 0x10	; 16
    2644:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    2648:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <pLogEnd>
    264c:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <pLogEnd+0x1>
    2650:	0a 96       	adiw	r24, 0x0a	; 10
    2652:	90 93 11 05 	sts	0x0511, r25	; 0x800511 <pLogEnd+0x1>
    2656:	80 93 10 05 	sts	0x0510, r24	; 0x800510 <pLogEnd>
    265a:	86 50       	subi	r24, 0x06	; 6
    265c:	95 40       	sbci	r25, 0x05	; 5
    265e:	39 f0       	breq	.+14     	; 0x266e <log_put+0x92>
    2660:	30 f0       	brcs	.+12     	; 0x266e <log_put+0x92>
    2662:	80 e8       	ldi	r24, 0x80	; 128
    2664:	93 e0       	ldi	r25, 0x03	; 3
    2666:	90 93 11 05 	sts	0x0511, r25	; 0x800511 <pLogEnd+0x1>
    266a:	80 93 10 05 	sts	0x0510, r24	; 0x800510 <pLogEnd>
    266e:	20 91 10 05 	lds	r18, 0x0510	; 0x800510 <pLogEnd>
    2672:	30 91 11 05 	lds	r19, 0x0511	; 0x800511 <pLogEnd+0x1>
    2676:	80 91 12 05 	lds	r24, 0x0512	; 0x800512 <pLogStart>
    267a:	90 91 13 05 	lds	r25, 0x0513	; 0x800513 <pLogStart+0x1>
    267e:	28 17       	cp	r18, r24
    2680:	39 07       	cpc	r19, r25
    2682:	79 f4       	brne	.+30     	; 0x26a2 <log_put+0xc6>
    2684:	0a 96       	adiw	r24, 0x0a	; 10
    2686:	90 93 13 05 	sts	0x0513, r25	; 0x800513 <pLogStart+0x1>
    268a:	80 93 12 05 	sts	0x0512, r24	; 0x800512 <pLogStart>
    268e:	86 50       	subi	r24, 0x06	; 6
    2690:	95 40       	sbci	r25, 0x05	; 5
    2692:	39 f0       	breq	.+14     	; 0x26a2 <log_put+0xc6>
    2694:	30 f0       	brcs	.+12     	; 0x26a2 <log_put+0xc6>
    2696:	80 e8       	ldi	r24, 0x80	; 128
    2698:	93 e0       	ldi	r25, 0x03	; 3
    269a:	90 93 13 05 	sts	0x0513, r25	; 0x800513 <pLogStart+0x1>
    269e:	80 93 12 05 	sts	0x0512, r24	; 0x800512 <pLogStart>
    26a2:	08 95       	ret

000026a4 <log_putError>:
    26a4:	25 e4       	ldi	r18, 0x45	; 69
    26a6:	9a df       	rcall	.-204    	; 0x25dc <log_put>
    26a8:	8f ef       	ldi	r24, 0xFF	; 255
    26aa:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <log_unreadErrors>
    26ae:	08 95       	ret

000026b0 <log_putWarning>:
    26b0:	27 e5       	ldi	r18, 0x57	; 87
    26b2:	94 cf       	rjmp	.-216    	; 0x25dc <log_put>
    26b4:	08 95       	ret

000026b6 <log_getShortTextFromIndex>:
	return Log_TextBuff;
}

const char nullLog [] PROGMEM = "-";

char* log_getShortTextFromIndex(uint8_t index,  char changeNotifyStatus){
    26b6:	cf 93       	push	r28
    26b8:	c6 2f       	mov	r28, r22
	LogList_t* pLogEntry;
	pLogEntry = log_getLog(index);
    26ba:	78 de       	rcall	.-784    	; 0x23ac <log_getLog>
	if (pLogEntry != NULL){
    26bc:	00 97       	sbiw	r24, 0x00	; 0
    26be:	19 f0       	breq	.+6      	; 0x26c6 <log_getShortTextFromIndex+0x10>
		return log_getShortTextFromPtr(pLogEntry,changeNotifyStatus);
    26c0:	6c 2f       	mov	r22, r28
    26c2:	00 df       	rcall	.-512    	; 0x24c4 <log_getShortTextFromPtr>
    26c4:	06 c0       	rjmp	.+12     	; 0x26d2 <log_getShortTextFromIndex+0x1c>
	} else {
		Log_TextBuff[0] = '-';
    26c6:	e8 e5       	ldi	r30, 0x58	; 88
    26c8:	f3 e0       	ldi	r31, 0x03	; 3
    26ca:	8d e2       	ldi	r24, 0x2D	; 45
    26cc:	80 83       	st	Z, r24
		Log_TextBuff[1] = '\0';
    26ce:	11 82       	std	Z+1, r1	; 0x01
		return Log_TextBuff;
    26d0:	cf 01       	movw	r24, r30
	}
    26d2:	cf 91       	pop	r28
    26d4:	08 95       	ret

000026d6 <main>:
    26d6:	2a dd       	rcall	.-1452   	; 0x212c <init_iopins>
    26d8:	3f de       	rcall	.-898    	; 0x2358 <init_log>
    26da:	0e 94 11 2f 	call	0x5e22	; 0x5e22 <init_Serial0SerUSB>
    26de:	0e 94 44 27 	call	0x4e88	; 0x4e88 <init_message>
    26e2:	cd d8       	rcall	.-3686   	; 0x187e <init_HwTimer>
    26e4:	b4 d8       	rcall	.-3736   	; 0x184e <init_Timers>
    26e6:	da d8       	rcall	.-3660   	; 0x189c <init_ADC>
    26e8:	03 d9       	rcall	.-3578   	; 0x18f0 <init_Pipe>
    26ea:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <init_Serial1MIDI>
    26ee:	28 d9       	rcall	.-3504   	; 0x1940 <init_PipeModules>
    26f0:	0e 94 07 2a 	call	0x540e	; 0x540e <init_Midi2Manual>
    26f4:	0e 94 39 2a 	call	0x5472	; 0x5472 <init_Manual2Midi>
    26f8:	0e 94 d6 27 	call	0x4fac	; 0x4fac <init_Midi>
    26fc:	0e 94 4a 28 	call	0x5094	; 0x5094 <init_Registers>
    2700:	0e 94 c4 2a 	call	0x5588	; 0x5588 <init_Manual2Module>
    2704:	0e 94 e5 25 	call	0x4bca	; 0x4bca <init_SoftKeys>
    2708:	58 d8       	rcall	.-3920   	; 0x17ba <eeprom_UpdateALL>
    270a:	10 92 6f 05 	sts	0x056F, r1	; 0x80056f <menu_TestModulePattern>
    270e:	a2 dd       	rcall	.-1212   	; 0x2254 <lcd_init>
    2710:	0e 94 de 2f 	call	0x5fbc	; 0x5fbc <lcd_initCG>
    2714:	f4 dd       	rcall	.-1048   	; 0x22fe <lcd_clrscr>
    2716:	83 e4       	ldi	r24, 0x43	; 67
    2718:	ed dd       	rcall	.-1062   	; 0x22f4 <lcd_goto>
    271a:	83 e9       	ldi	r24, 0x93	; 147
    271c:	92 e0       	ldi	r25, 0x02	; 2
    271e:	0c de       	rcall	.-1000   	; 0x2338 <lcd_puts_P>
    2720:	8b e1       	ldi	r24, 0x1B	; 27
    2722:	e8 dd       	rcall	.-1072   	; 0x22f4 <lcd_goto>
    2724:	82 e9       	ldi	r24, 0x92	; 146
    2726:	90 e1       	ldi	r25, 0x10	; 16
    2728:	07 de       	rcall	.-1010   	; 0x2338 <lcd_puts_P>
    272a:	78 94       	sei
    272c:	2f ef       	ldi	r18, 0xFF	; 255
    272e:	87 e9       	ldi	r24, 0x97	; 151
    2730:	9a e3       	ldi	r25, 0x3A	; 58
    2732:	21 50       	subi	r18, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2734:	80 40       	sbci	r24, 0x00	; 0
    2736:	90 40       	sbci	r25, 0x00	; 0
    2738:	e1 f7       	brne	.-8      	; 0x2732 <main+0x5c>
    273a:	00 c0       	rjmp	.+0      	; 0x273c <main+0x66>
    273c:	00 00       	nop
    273e:	df dd       	rcall	.-1090   	; 0x22fe <lcd_clrscr>
    2740:	43 da       	rcall	.-2938   	; 0x1bc8 <module_StartPowerOn>
    2742:	8f ef       	ldi	r24, 0xFF	; 255
    2744:	80 93 a0 07 	sts	0x07A0, r24	; 0x8007a0 <msgPipe_Handling>
    2748:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <menuNotActive>
    274c:	df ef       	ldi	r29, 0xFF	; 255
    274e:	0e 94 78 27 	call	0x4ef0	; 0x4ef0 <message_status>
    2752:	88 23       	and	r24, r24
    2754:	09 f4       	brne	.+2      	; 0x2758 <main+0x82>
    2756:	42 c0       	rjmp	.+132    	; 0x27dc <main+0x106>
    2758:	0e 94 5f 27 	call	0x4ebe	; 0x4ebe <message_get>
    275c:	c8 2f       	mov	r28, r24
    275e:	86 38       	cpi	r24, 0x86	; 134
    2760:	61 f4       	brne	.+24     	; 0x277a <main+0xa4>
    2762:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <midiSendAllNotesOff>
    2766:	0e 94 01 2c 	call	0x5802	; 0x5802 <midi_AllManualsOff>
    276a:	0e 94 c5 29 	call	0x538a	; 0x538a <midi_resetRegisters>
    276e:	0e 94 cc 27 	call	0x4f98	; 0x4f98 <midi_CouplerReset>
    2772:	88 e7       	ldi	r24, 0x78	; 120
    2774:	92 e0       	ldi	r25, 0x02	; 2
    2776:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <menu_DisplayMainMessage_P>
    277a:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <menuNotActive>
    277e:	8f 3f       	cpi	r24, 0xFF	; 255
    2780:	f1 f4       	brne	.+60     	; 0x27be <main+0xe8>
    2782:	8c 2f       	mov	r24, r28
    2784:	8f 73       	andi	r24, 0x3F	; 63
    2786:	c5 30       	cpi	r28, 0x05	; 5
    2788:	61 f4       	brne	.+24     	; 0x27a2 <main+0xcc>
    278a:	60 e0       	ldi	r22, 0x00	; 0
    278c:	70 e0       	ldi	r23, 0x00	; 0
    278e:	80 e0       	ldi	r24, 0x00	; 0
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	e3 d5       	rcall	.+3014   	; 0x335a <menu_Init>
    2794:	0e 94 70 21 	call	0x42e0	; 0x42e0 <menu_InitLCD>
    2798:	10 92 14 05 	sts	0x0514, r1	; 0x800514 <menuNotActive>
    279c:	80 e0       	ldi	r24, 0x00	; 0
    279e:	6a da       	rcall	.-2860   	; 0x1c74 <softKey_WantLong>
    27a0:	1d c0       	rjmp	.+58     	; 0x27dc <main+0x106>
    27a2:	9f ef       	ldi	r25, 0xFF	; 255
    27a4:	98 0f       	add	r25, r24
    27a6:	94 30       	cpi	r25, 0x04	; 4
    27a8:	c8 f4       	brcc	.+50     	; 0x27dc <main+0x106>
    27aa:	0e 94 a9 26 	call	0x4d52	; 0x4d52 <softKey_MessageKey_ToSoftKeyNr>
    27ae:	6c 2f       	mov	r22, r28
    27b0:	0e 94 be 26 	call	0x4d7c	; 0x4d7c <softKey_Execute>
    27b4:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <menuNotActive>
    27b8:	0e 94 6a 26 	call	0x4cd4	; 0x4cd4 <softKeys_toLCD>
    27bc:	0f c0       	rjmp	.+30     	; 0x27dc <main+0x106>
    27be:	80 91 6f 05 	lds	r24, 0x056F	; 0x80056f <menu_TestModulePattern>
    27c2:	81 11       	cpse	r24, r1
    27c4:	06 c0       	rjmp	.+12     	; 0x27d2 <main+0xfc>
    27c6:	8c 2f       	mov	r24, r28
    27c8:	0e 94 77 21 	call	0x42ee	; 0x42ee <menu_ProcessMessage>
    27cc:	80 93 14 05 	sts	0x0514, r24	; 0x800514 <menuNotActive>
    27d0:	05 c0       	rjmp	.+10     	; 0x27dc <main+0x106>
    27d2:	8d ef       	ldi	r24, 0xFD	; 253
    27d4:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <menu_TestModuleBitCounter>
    27d8:	0e 94 e5 23 	call	0x47ca	; 0x47ca <menu_ModuleTestExecute>
    27dc:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <menuNotActive>
    27e0:	8f 3f       	cpi	r24, 0xFF	; 255
    27e2:	51 f4       	brne	.+20     	; 0x27f8 <main+0x122>
    27e4:	df 3f       	cpi	r29, 0xFF	; 255
    27e6:	49 f4       	brne	.+18     	; 0x27fa <main+0x124>
    27e8:	0e 94 be 20 	call	0x417c	; 0x417c <menu_ClearAllDisp>
    27ec:	0e 94 6a 26 	call	0x4cd4	; 0x4cd4 <softKeys_toLCD>
    27f0:	8f ef       	ldi	r24, 0xFF	; 255
    27f2:	40 da       	rcall	.-2944   	; 0x1c74 <softKey_WantLong>
    27f4:	d0 e0       	ldi	r29, 0x00	; 0
    27f6:	01 c0       	rjmp	.+2      	; 0x27fa <main+0x124>
    27f8:	df ef       	ldi	r29, 0xFF	; 255
    27fa:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <swTimer+0xe>
    27fe:	81 11       	cpse	r24, r1
    2800:	09 c0       	rjmp	.+18     	; 0x2814 <main+0x13e>
    2802:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    2806:	0e 94 09 25 	call	0x4a12	; 0x4a12 <menu_deleteMessage>
    280a:	8c 2f       	mov	r24, r28
    280c:	73 dd       	rcall	.-1306   	; 0x22f4 <lcd_goto>
    280e:	8f ef       	ldi	r24, 0xFF	; 255
    2810:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <swTimer+0xe>
    2814:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <swTimer+0xc>
    2818:	81 11       	cpse	r24, r1
    281a:	0a c0       	rjmp	.+20     	; 0x2830 <main+0x15a>
    281c:	80 91 6f 05 	lds	r24, 0x056F	; 0x80056f <menu_TestModulePattern>
    2820:	88 23       	and	r24, r24
    2822:	19 f0       	breq	.+6      	; 0x282a <main+0x154>
    2824:	0e 94 e5 23 	call	0x47ca	; 0x47ca <menu_ModuleTestExecute>
    2828:	03 c0       	rjmp	.+6      	; 0x2830 <main+0x15a>
    282a:	8f ef       	ldi	r24, 0xFF	; 255
    282c:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <swTimer+0xc>
    2830:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <swTimer+0x2>
    2834:	81 11       	cpse	r24, r1
    2836:	1a c0       	rjmp	.+52     	; 0x286c <main+0x196>
    2838:	d7 d9       	rcall	.-3154   	; 0x1be8 <module_PowerControl>
    283a:	0e 94 0a 27 	call	0x4e14	; 0x4e14 <menu_showPowerState>
    283e:	80 91 14 05 	lds	r24, 0x0514	; 0x800514 <menuNotActive>
    2842:	8f 3f       	cpi	r24, 0xFF	; 255
    2844:	99 f4       	brne	.+38     	; 0x286c <main+0x196>
    2846:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    284a:	84 e1       	ldi	r24, 0x14	; 20
    284c:	53 dd       	rcall	.-1370   	; 0x22f4 <lcd_goto>
    284e:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <pipe_PowerStatus>
    2852:	81 30       	cpi	r24, 0x01	; 1
    2854:	21 f4       	brne	.+8      	; 0x285e <main+0x188>
    2856:	81 e8       	ldi	r24, 0x81	; 129
    2858:	92 e0       	ldi	r25, 0x02	; 2
    285a:	6e dd       	rcall	.-1316   	; 0x2338 <lcd_puts_P>
    285c:	05 c0       	rjmp	.+10     	; 0x2868 <main+0x192>
    285e:	82 31       	cpi	r24, 0x12	; 18
    2860:	19 f4       	brne	.+6      	; 0x2868 <main+0x192>
    2862:	84 e1       	ldi	r24, 0x14	; 20
    2864:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    2868:	8c 2f       	mov	r24, r28
    286a:	44 dd       	rcall	.-1400   	; 0x22f4 <lcd_goto>
    286c:	0e 94 e2 2d 	call	0x5bc4	; 0x5bc4 <midi_CheckTxActiveSense>
    2870:	0e 94 0b 2c 	call	0x5816	; 0x5816 <midi_CheckRxActiveSense>
    2874:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    2878:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <midiLastInNote>
    287c:	8f 3f       	cpi	r24, 0xFF	; 255
    287e:	91 f1       	breq	.+100    	; 0x28e4 <main+0x20e>
    2880:	80 e0       	ldi	r24, 0x00	; 0
    2882:	38 dd       	rcall	.-1424   	; 0x22f4 <lcd_goto>
    2884:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
    2888:	8f 3f       	cpi	r24, 0xFF	; 255
    288a:	69 f4       	brne	.+26     	; 0x28a6 <main+0x1d0>
    288c:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <midiLastInChannel>
    2890:	0e 94 76 31 	call	0x62ec	; 0x62ec <lcd_ChannelOut>
    2894:	8f e3       	ldi	r24, 0x3F	; 63
    2896:	38 dd       	rcall	.-1424   	; 0x2308 <lcd_putc>
    2898:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <midiLastInNote>
    289c:	0e 94 25 31 	call	0x624a	; 0x624a <lcd_noteOut>
    28a0:	80 e2       	ldi	r24, 0x20	; 32
    28a2:	32 dd       	rcall	.-1436   	; 0x2308 <lcd_putc>
    28a4:	0c c0       	rjmp	.+24     	; 0x28be <main+0x1e8>
    28a6:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <midiLastInNote>
    28aa:	0e 94 25 31 	call	0x624a	; 0x624a <lcd_noteOut>
    28ae:	8e e7       	ldi	r24, 0x7E	; 126
    28b0:	2b dd       	rcall	.-1450   	; 0x2308 <lcd_putc>
    28b2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
    28b6:	0e 94 87 31 	call	0x630e	; 0x630e <lcd_ManualOutDec>
    28ba:	80 e2       	ldi	r24, 0x20	; 32
    28bc:	25 dd       	rcall	.-1462   	; 0x2308 <lcd_putc>
    28be:	8c 2f       	mov	r24, r28
    28c0:	19 dd       	rcall	.-1486   	; 0x22f4 <lcd_goto>
    28c2:	8f ef       	ldi	r24, 0xFF	; 255
    28c4:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <midiLastInNote>
    28c8:	9f b7       	in	r25, 0x3f	; 63
    28ca:	f8 94       	cli
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	06 c0       	rjmp	.+12     	; 0x28dc <main+0x206>
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    28d0:	ed e2       	ldi	r30, 0x2D	; 45
    28d2:	f2 e0       	ldi	r31, 0x02	; 2
    28d4:	82 e3       	ldi	r24, 0x32	; 50
    28d6:	80 87       	std	Z+8, r24	; 0x08
    28d8:	11 86       	std	Z+9, r1	; 0x09
    28da:	80 e0       	ldi	r24, 0x00	; 0
    28dc:	81 11       	cpse	r24, r1
    28de:	f8 cf       	rjmp	.-16     	; 0x28d0 <main+0x1fa>
    28e0:	9f bf       	out	0x3f, r25	; 63
    28e2:	12 c0       	rjmp	.+36     	; 0x2908 <main+0x232>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    28e4:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <swTimer+0x8>
    28e8:	88 23       	and	r24, r24
    28ea:	21 f0       	breq	.+8      	; 0x28f4 <main+0x21e>
    28ec:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <time_UpTimeUpdated>
    28f0:	8f 3f       	cpi	r24, 0xFF	; 255
    28f2:	51 f4       	brne	.+20     	; 0x2908 <main+0x232>
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	fe dc       	rcall	.-1540   	; 0x22f4 <lcd_goto>
    28f8:	86 e0       	ldi	r24, 0x06	; 6
    28fa:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    28fe:	8c 2f       	mov	r24, r28
    2900:	f9 dc       	rcall	.-1550   	; 0x22f4 <lcd_goto>
    2902:	8f ef       	ldi	r24, 0xFF	; 255
    2904:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <swTimer+0x8>
    2908:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <midiLastOutNote>
    290c:	8f 3f       	cpi	r24, 0xFF	; 255
    290e:	f9 f0       	breq	.+62     	; 0x294e <main+0x278>
    2910:	8f e0       	ldi	r24, 0x0F	; 15
    2912:	f0 dc       	rcall	.-1568   	; 0x22f4 <lcd_goto>
    2914:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <midiLastOutManual>
    2918:	0e 94 87 31 	call	0x630e	; 0x630e <lcd_ManualOutDec>
    291c:	8e e7       	ldi	r24, 0x7E	; 126
    291e:	f4 dc       	rcall	.-1560   	; 0x2308 <lcd_putc>
    2920:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <midiLastOutNote>
    2924:	0e 94 25 31 	call	0x624a	; 0x624a <lcd_noteOut>
    2928:	8c 2f       	mov	r24, r28
    292a:	e4 dc       	rcall	.-1592   	; 0x22f4 <lcd_goto>
    292c:	8f ef       	ldi	r24, 0xFF	; 255
    292e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <midiLastOutNote>
    2932:	9f b7       	in	r25, 0x3f	; 63
    2934:	f8 94       	cli
    2936:	81 e0       	ldi	r24, 0x01	; 1
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2938:	06 c0       	rjmp	.+12     	; 0x2946 <main+0x270>
    293a:	ed e2       	ldi	r30, 0x2D	; 45
    293c:	f2 e0       	ldi	r31, 0x02	; 2
    293e:	82 e3       	ldi	r24, 0x32	; 50
    2940:	82 87       	std	Z+10, r24	; 0x0a
    2942:	13 86       	std	Z+11, r1	; 0x0b
    2944:	80 e0       	ldi	r24, 0x00	; 0
    2946:	81 11       	cpse	r24, r1
    2948:	f8 cf       	rjmp	.-16     	; 0x293a <main+0x264>
    294a:	9f bf       	out	0x3f, r25	; 63
    294c:	12 c0       	rjmp	.+36     	; 0x2972 <main+0x29c>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    294e:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <swTimer+0xa>
    2952:	88 23       	and	r24, r24
    2954:	21 f0       	breq	.+8      	; 0x295e <main+0x288>
    2956:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <time_UpTimeUpdated>
    295a:	8f 3f       	cpi	r24, 0xFF	; 255
    295c:	51 f4       	brne	.+20     	; 0x2972 <main+0x29c>
    295e:	8f e0       	ldi	r24, 0x0F	; 15
    2960:	c9 dc       	rcall	.-1646   	; 0x22f4 <lcd_goto>
    2962:	85 e0       	ldi	r24, 0x05	; 5
    2964:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    2968:	8c 2f       	mov	r24, r28
    296a:	c4 dc       	rcall	.-1656   	; 0x22f4 <lcd_goto>
    296c:	8f ef       	ldi	r24, 0xFF	; 255
    296e:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <swTimer+0xa>
    2972:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <time_UpTimeUpdated>
    2976:	8f 3f       	cpi	r24, 0xFF	; 255
    2978:	09 f0       	breq	.+2      	; 0x297c <main+0x2a6>
    297a:	5c c0       	rjmp	.+184    	; 0x2a34 <main+0x35e>
    297c:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <time_UpTimeUpdated>
    2980:	f0 90 56 03 	lds	r15, 0x0356	; 0x800356 <lcd_cursorPos>
    2984:	c0 91 1c 0d 	lds	r28, 0x0D1C	; 0x800d1c <lcd_cursorIsOn>
    2988:	cf 3f       	cpi	r28, 0xFF	; 255
    298a:	11 f4       	brne	.+4      	; 0x2990 <main+0x2ba>
    298c:	0e 94 c3 31 	call	0x6386	; 0x6386 <lcd_cursoroff>
    2990:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <time_Uptime+0x3>
    2994:	88 23       	and	r24, r24
    2996:	59 f0       	breq	.+22     	; 0x29ae <main+0x2d8>
    2998:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <time_Uptime+0x1>
    299c:	80 fd       	sbrc	r24, 0
    299e:	0e c0       	rjmp	.+28     	; 0x29bc <main+0x2e6>
    29a0:	0f 2e       	mov	r0, r31
    29a2:	fa e3       	ldi	r31, 0x3A	; 58
    29a4:	ef 2e       	mov	r14, r31
    29a6:	f0 2d       	mov	r31, r0
    29a8:	02 e4       	ldi	r16, 0x42	; 66
    29aa:	12 e0       	ldi	r17, 0x02	; 2
    29ac:	0c c0       	rjmp	.+24     	; 0x29c6 <main+0x2f0>
    29ae:	0f 2e       	mov	r0, r31
    29b0:	fa e3       	ldi	r31, 0x3A	; 58
    29b2:	ef 2e       	mov	r14, r31
    29b4:	f0 2d       	mov	r31, r0
    29b6:	01 e4       	ldi	r16, 0x41	; 65
    29b8:	12 e0       	ldi	r17, 0x02	; 2
    29ba:	05 c0       	rjmp	.+10     	; 0x29c6 <main+0x2f0>
    29bc:	68 94       	set
    29be:	ee 24       	eor	r14, r14
    29c0:	e5 f8       	bld	r14, 5
    29c2:	02 e4       	ldi	r16, 0x42	; 66
    29c4:	12 e0       	ldi	r17, 0x02	; 2
    29c6:	87 e0       	ldi	r24, 0x07	; 7
    29c8:	95 dc       	rcall	.-1750   	; 0x22f4 <lcd_goto>
    29ca:	f8 01       	movw	r30, r16
    29cc:	80 81       	ld	r24, Z
    29ce:	0e 94 27 30 	call	0x604e	; 0x604e <lcd_dec2out>
    29d2:	8e 2d       	mov	r24, r14
    29d4:	99 dc       	rcall	.-1742   	; 0x2308 <lcd_putc>
    29d6:	f8 01       	movw	r30, r16
    29d8:	31 97       	sbiw	r30, 0x01	; 1
    29da:	80 81       	ld	r24, Z
    29dc:	0e 94 27 30 	call	0x604e	; 0x604e <lcd_dec2out>
    29e0:	40 91 13 0c 	lds	r20, 0x0C13	; 0x800c13 <midiRxOvflCount>
    29e4:	44 23       	and	r20, r20
    29e6:	31 f0       	breq	.+12     	; 0x29f4 <main+0x31e>
    29e8:	50 e0       	ldi	r21, 0x00	; 0
    29ea:	60 e0       	ldi	r22, 0x00	; 0
    29ec:	83 e0       	ldi	r24, 0x03	; 3
    29ee:	5a de       	rcall	.-844    	; 0x26a4 <log_putError>
    29f0:	10 92 13 0c 	sts	0x0C13, r1	; 0x800c13 <midiRxOvflCount>
    29f4:	40 91 18 0d 	lds	r20, 0x0D18	; 0x800d18 <midiTxOvflCount>
    29f8:	44 23       	and	r20, r20
    29fa:	31 f0       	breq	.+12     	; 0x2a08 <main+0x332>
    29fc:	50 e0       	ldi	r21, 0x00	; 0
    29fe:	61 e0       	ldi	r22, 0x01	; 1
    2a00:	83 e0       	ldi	r24, 0x03	; 3
    2a02:	50 de       	rcall	.-864    	; 0x26a4 <log_putError>
    2a04:	10 92 18 0d 	sts	0x0D18, r1	; 0x800d18 <midiTxOvflCount>
    2a08:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <pipe_PowerStatus>
    2a0c:	84 ff       	sbrs	r24, 4
    2a0e:	02 c0       	rjmp	.+4      	; 0x2a14 <main+0x33e>
    2a10:	80 e2       	ldi	r24, 0x20	; 32
    2a12:	01 c0       	rjmp	.+2      	; 0x2a16 <main+0x340>
    2a14:	89 e0       	ldi	r24, 0x09	; 9
    2a16:	78 dc       	rcall	.-1808   	; 0x2308 <lcd_putc>
    2a18:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <log_unreadErrors>
    2a1c:	8f 3f       	cpi	r24, 0xFF	; 255
    2a1e:	11 f4       	brne	.+4      	; 0x2a24 <main+0x34e>
    2a20:	85 e4       	ldi	r24, 0x45	; 69
    2a22:	01 c0       	rjmp	.+2      	; 0x2a26 <main+0x350>
    2a24:	80 e2       	ldi	r24, 0x20	; 32
    2a26:	70 dc       	rcall	.-1824   	; 0x2308 <lcd_putc>
    2a28:	8f 2d       	mov	r24, r15
    2a2a:	64 dc       	rcall	.-1848   	; 0x22f4 <lcd_goto>
    2a2c:	cf 3f       	cpi	r28, 0xFF	; 255
    2a2e:	11 f4       	brne	.+4      	; 0x2a34 <main+0x35e>
    2a30:	0e 94 bc 31 	call	0x6378	; 0x6378 <lcd_cursosblink>
    2a34:	80 91 a1 07 	lds	r24, 0x07A1	; 0x8007a1 <msgPipeOverflow>
    2a38:	8f 3f       	cpi	r24, 0xFF	; 255
    2a3a:	39 f4       	brne	.+14     	; 0x2a4a <main+0x374>
    2a3c:	10 92 a1 07 	sts	0x07A1, r1	; 0x8007a1 <msgPipeOverflow>
    2a40:	40 e0       	ldi	r20, 0x00	; 0
    2a42:	50 e0       	ldi	r21, 0x00	; 0
    2a44:	60 e0       	ldi	r22, 0x00	; 0
    2a46:	84 e0       	ldi	r24, 0x04	; 4
    2a48:	2d de       	rcall	.-934    	; 0x26a4 <log_putError>
    2a4a:	90 91 cf 0b 	lds	r25, 0x0BCF	; 0x800bcf <midiRxInIndex>
    2a4e:	80 91 17 0d 	lds	r24, 0x0D17	; 0x800d17 <midiRxOutIndex>
    2a52:	98 17       	cp	r25, r24
    2a54:	21 f0       	breq	.+8      	; 0x2a5e <main+0x388>
    2a56:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <serial1MIDIReadRx>
    2a5a:	0e 94 71 2c 	call	0x58e2	; 0x58e2 <midiIn_Process>
    2a5e:	0e 94 c2 27 	call	0x4f84	; 0x4f84 <pipeMsgStatus>
    2a62:	8f 3f       	cpi	r24, 0xFF	; 255
    2a64:	09 f0       	breq	.+2      	; 0x2a68 <main+0x392>
    2a66:	73 ce       	rjmp	.-794    	; 0x274e <main+0x78>
    2a68:	0e 94 ad 27 	call	0x4f5a	; 0x4f5a <pipeMsgGet>
    2a6c:	0e 94 02 2d 	call	0x5a04	; 0x5a04 <midiKeyPress_Process>
    2a70:	6e ce       	rjmp	.-804    	; 0x274e <main+0x78>

00002a72 <menu_enterWriteModule>:
    2a72:	10 92 5a 05 	sts	0x055A, r1	; 0x80055a <menuModVal>
    2a76:	10 92 5b 05 	sts	0x055B, r1	; 0x80055b <menuModVal+0x1>
    2a7a:	10 92 5c 05 	sts	0x055C, r1	; 0x80055c <menuModVal+0x2>
    2a7e:	10 92 5d 05 	sts	0x055D, r1	; 0x80055d <menuModVal+0x3>
    2a82:	81 e0       	ldi	r24, 0x01	; 1
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	00 90 25 05 	lds	r0, 0x0525	; 0x800525 <menuVmodule>
    2a8a:	02 c0       	rjmp	.+4      	; 0x2a90 <menu_enterWriteModule+0x1e>
    2a8c:	88 0f       	add	r24, r24
    2a8e:	99 1f       	adc	r25, r25
    2a90:	0a 94       	dec	r0
    2a92:	e2 f7       	brpl	.-8      	; 0x2a8c <menu_enterWriteModule+0x1a>
    2a94:	48 2f       	mov	r20, r24
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	ef e3       	ldi	r30, 0x3F	; 63
    2a9a:	f3 e0       	ldi	r31, 0x03	; 3
    2a9c:	22 c0       	rjmp	.+68     	; 0x2ae2 <menu_enterWriteModule+0x70>
    2a9e:	80 91 5a 05 	lds	r24, 0x055A	; 0x80055a <menuModVal>
    2aa2:	90 91 5b 05 	lds	r25, 0x055B	; 0x80055b <menuModVal+0x1>
    2aa6:	a0 91 5c 05 	lds	r26, 0x055C	; 0x80055c <menuModVal+0x2>
    2aaa:	b0 91 5d 05 	lds	r27, 0x055D	; 0x80055d <menuModVal+0x3>
    2aae:	88 0f       	add	r24, r24
    2ab0:	99 1f       	adc	r25, r25
    2ab2:	aa 1f       	adc	r26, r26
    2ab4:	bb 1f       	adc	r27, r27
    2ab6:	80 93 5a 05 	sts	0x055A, r24	; 0x80055a <menuModVal>
    2aba:	90 93 5b 05 	sts	0x055B, r25	; 0x80055b <menuModVal+0x1>
    2abe:	a0 93 5c 05 	sts	0x055C, r26	; 0x80055c <menuModVal+0x2>
    2ac2:	b0 93 5d 05 	sts	0x055D, r27	; 0x80055d <menuModVal+0x3>
    2ac6:	21 81       	ldd	r18, Z+1	; 0x01
    2ac8:	24 23       	and	r18, r20
    2aca:	49 f0       	breq	.+18     	; 0x2ade <menu_enterWriteModule+0x6c>
    2acc:	81 60       	ori	r24, 0x01	; 1
    2ace:	80 93 5a 05 	sts	0x055A, r24	; 0x80055a <menuModVal>
    2ad2:	90 93 5b 05 	sts	0x055B, r25	; 0x80055b <menuModVal+0x1>
    2ad6:	a0 93 5c 05 	sts	0x055C, r26	; 0x80055c <menuModVal+0x2>
    2ada:	b0 93 5d 05 	sts	0x055D, r27	; 0x80055d <menuModVal+0x3>
    2ade:	38 97       	sbiw	r30, 0x08	; 8
    2ae0:	3f 5f       	subi	r19, 0xFF	; 255
    2ae2:	30 32       	cpi	r19, 0x20	; 32
    2ae4:	e0 f2       	brcs	.-72     	; 0x2a9e <menu_enterWriteModule+0x2c>
    2ae6:	80 e0       	ldi	r24, 0x00	; 0
    2ae8:	08 95       	ret

00002aea <menu_exitWriteModule>:
    2aea:	40 91 5a 05 	lds	r20, 0x055A	; 0x80055a <menuModVal>
    2aee:	50 91 5b 05 	lds	r21, 0x055B	; 0x80055b <menuModVal+0x1>
    2af2:	60 91 5c 05 	lds	r22, 0x055C	; 0x80055c <menuModVal+0x2>
    2af6:	70 91 5d 05 	lds	r23, 0x055D	; 0x80055d <menuModVal+0x3>
    2afa:	85 30       	cpi	r24, 0x05	; 5
    2afc:	09 f5       	brne	.+66     	; 0x2b40 <menu_exitWriteModule+0x56>
    2afe:	a1 e0       	ldi	r26, 0x01	; 1
    2b00:	b0 e0       	ldi	r27, 0x00	; 0
    2b02:	00 90 25 05 	lds	r0, 0x0525	; 0x800525 <menuVmodule>
    2b06:	02 c0       	rjmp	.+4      	; 0x2b0c <menu_exitWriteModule+0x22>
    2b08:	aa 0f       	add	r26, r26
    2b0a:	bb 1f       	adc	r27, r27
    2b0c:	0a 94       	dec	r0
    2b0e:	e2 f7       	brpl	.-8      	; 0x2b08 <menu_exitWriteModule+0x1e>
    2b10:	3a 2f       	mov	r19, r26
    2b12:	90 e0       	ldi	r25, 0x00	; 0
    2b14:	ef e3       	ldi	r30, 0x3F	; 63
    2b16:	f3 e0       	ldi	r31, 0x03	; 3
    2b18:	11 c0       	rjmp	.+34     	; 0x2b3c <menu_exitWriteModule+0x52>
    2b1a:	77 23       	and	r23, r23
    2b1c:	24 f4       	brge	.+8      	; 0x2b26 <menu_exitWriteModule+0x3c>
    2b1e:	81 81       	ldd	r24, Z+1	; 0x01
    2b20:	83 2b       	or	r24, r19
    2b22:	81 83       	std	Z+1, r24	; 0x01
    2b24:	05 c0       	rjmp	.+10     	; 0x2b30 <menu_exitWriteModule+0x46>
    2b26:	21 81       	ldd	r18, Z+1	; 0x01
    2b28:	8a 2f       	mov	r24, r26
    2b2a:	80 95       	com	r24
    2b2c:	82 23       	and	r24, r18
    2b2e:	81 83       	std	Z+1, r24	; 0x01
    2b30:	44 0f       	add	r20, r20
    2b32:	55 1f       	adc	r21, r21
    2b34:	66 1f       	adc	r22, r22
    2b36:	77 1f       	adc	r23, r23
    2b38:	38 97       	sbiw	r30, 0x08	; 8
    2b3a:	9f 5f       	subi	r25, 0xFF	; 255
    2b3c:	90 32       	cpi	r25, 0x20	; 32
    2b3e:	68 f3       	brcs	.-38     	; 0x2b1a <menu_exitWriteModule+0x30>
    2b40:	80 e0       	ldi	r24, 0x00	; 0
    2b42:	08 95       	ret

00002b44 <menuOnEnterModSel>:
    2b44:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2b48:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2b4c:	3e 96       	adiw	r30, 0x0e	; 14
    2b4e:	85 91       	lpm	r24, Z+
    2b50:	95 91       	lpm	r25, Z+
    2b52:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <menuVmodule>
    2b56:	80 e0       	ldi	r24, 0x00	; 0
    2b58:	08 95       	ret

00002b5a <menuOnEnterMidiInCh>:
    2b5a:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2b5e:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2b62:	3e 96       	adiw	r30, 0x0e	; 14
    2b64:	85 91       	lpm	r24, Z+
    2b66:	95 91       	lpm	r25, Z+
    2b68:	80 93 54 05 	sts	0x0554, r24	; 0x800554 <menuVmidiChan>
    2b6c:	80 e0       	ldi	r24, 0x00	; 0
    2b6e:	08 95       	ret

00002b70 <menuOnEnterMidiInSec>:
    2b70:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2b74:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2b78:	3e 96       	adiw	r30, 0x0e	; 14
    2b7a:	25 91       	lpm	r18, Z+
    2b7c:	35 91       	lpm	r19, Z+
    2b7e:	20 93 64 05 	sts	0x0564, r18	; 0x800564 <menuVsection>
    2b82:	80 91 54 05 	lds	r24, 0x0554	; 0x800554 <menuVmidiChan>
    2b86:	8f 70       	andi	r24, 0x0F	; 15
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	23 70       	andi	r18, 0x03	; 3
    2b8c:	88 0f       	add	r24, r24
    2b8e:	99 1f       	adc	r25, r25
    2b90:	88 0f       	add	r24, r24
    2b92:	99 1f       	adc	r25, r25
    2b94:	82 0f       	add	r24, r18
    2b96:	91 1d       	adc	r25, r1
    2b98:	88 0f       	add	r24, r24
    2b9a:	99 1f       	adc	r25, r25
    2b9c:	88 0f       	add	r24, r24
    2b9e:	99 1f       	adc	r25, r25
    2ba0:	90 93 5f 05 	sts	0x055F, r25	; 0x80055f <DataAdressOffset+0x1>
    2ba4:	80 93 5e 05 	sts	0x055E, r24	; 0x80055e <DataAdressOffset>
    2ba8:	80 e0       	ldi	r24, 0x00	; 0
    2baa:	08 95       	ret

00002bac <menuOnEnterModManual>:
    2bac:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2bb0:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2bb4:	3e 96       	adiw	r30, 0x0e	; 14
    2bb6:	85 91       	lpm	r24, Z+
    2bb8:	95 91       	lpm	r25, Z+
    2bba:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <menuVmanual>
    2bbe:	80 e0       	ldi	r24, 0x00	; 0
    2bc0:	08 95       	ret

00002bc2 <menuOnEnterModSec>:
    2bc2:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2bc6:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2bca:	3e 96       	adiw	r30, 0x0e	; 14
    2bcc:	85 91       	lpm	r24, Z+
    2bce:	95 91       	lpm	r25, Z+
    2bd0:	80 93 64 05 	sts	0x0564, r24	; 0x800564 <menuVsection>
    2bd4:	20 91 24 05 	lds	r18, 0x0524	; 0x800524 <menuVmanual>
    2bd8:	2f 70       	andi	r18, 0x0F	; 15
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	83 70       	andi	r24, 0x03	; 3
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	a9 01       	movw	r20, r18
    2be2:	44 0f       	add	r20, r20
    2be4:	55 1f       	adc	r21, r21
    2be6:	24 0f       	add	r18, r20
    2be8:	35 1f       	adc	r19, r21
    2bea:	22 0f       	add	r18, r18
    2bec:	33 1f       	adc	r19, r19
    2bee:	22 0f       	add	r18, r18
    2bf0:	33 1f       	adc	r19, r19
    2bf2:	ac 01       	movw	r20, r24
    2bf4:	44 0f       	add	r20, r20
    2bf6:	55 1f       	adc	r21, r21
    2bf8:	84 0f       	add	r24, r20
    2bfa:	95 1f       	adc	r25, r21
    2bfc:	82 0f       	add	r24, r18
    2bfe:	93 1f       	adc	r25, r19
    2c00:	90 93 5f 05 	sts	0x055F, r25	; 0x80055f <DataAdressOffset+0x1>
    2c04:	80 93 5e 05 	sts	0x055E, r24	; 0x80055e <DataAdressOffset>
    2c08:	80 e0       	ldi	r24, 0x00	; 0
    2c0a:	08 95       	ret

00002c0c <menuOnEnterModSecReg>:
    2c0c:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2c10:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2c14:	3e 96       	adiw	r30, 0x0e	; 14
    2c16:	85 91       	lpm	r24, Z+
    2c18:	95 91       	lpm	r25, Z+
    2c1a:	80 93 64 05 	sts	0x0564, r24	; 0x800564 <menuVsection>
    2c1e:	87 70       	andi	r24, 0x07	; 7
    2c20:	90 e0       	ldi	r25, 0x00	; 0
    2c22:	9c 01       	movw	r18, r24
    2c24:	22 0f       	add	r18, r18
    2c26:	33 1f       	adc	r19, r19
    2c28:	82 0f       	add	r24, r18
    2c2a:	93 1f       	adc	r25, r19
    2c2c:	90 93 5f 05 	sts	0x055F, r25	; 0x80055f <DataAdressOffset+0x1>
    2c30:	80 93 5e 05 	sts	0x055E, r24	; 0x80055e <DataAdressOffset>
    2c34:	80 e0       	ldi	r24, 0x00	; 0
    2c36:	08 95       	ret

00002c38 <menuOnEnterKey>:
    2c38:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2c3c:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2c40:	3e 96       	adiw	r30, 0x0e	; 14
    2c42:	85 91       	lpm	r24, Z+
    2c44:	95 91       	lpm	r25, Z+
    2c46:	84 30       	cpi	r24, 0x04	; 4
    2c48:	60 f4       	brcc	.+24     	; 0x2c62 <menuOnEnterKey+0x2a>
    2c4a:	fc 01       	movw	r30, r24
    2c4c:	ff 27       	eor	r31, r31
    2c4e:	ee 0f       	add	r30, r30
    2c50:	ff 1f       	adc	r31, r31
    2c52:	e9 59       	subi	r30, 0x99	; 153
    2c54:	fa 4f       	sbci	r31, 0xFA	; 250
    2c56:	80 81       	ld	r24, Z
    2c58:	91 81       	ldd	r25, Z+1	; 0x01
    2c5a:	90 93 7b 05 	sts	0x057B, r25	; 0x80057b <menuVMenuSoftKey+0x1>
    2c5e:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <menuVMenuSoftKey>
    2c62:	80 e0       	ldi	r24, 0x00	; 0
    2c64:	08 95       	ret

00002c66 <menuOnExitRegisterEdit>:
    2c66:	1f 93       	push	r17
    2c68:	cf 93       	push	r28
    2c6a:	df 93       	push	r29
    2c6c:	86 30       	cpi	r24, 0x06	; 6
    2c6e:	f1 f0       	breq	.+60     	; 0x2cac <menuOnExitRegisterEdit+0x46>
    2c70:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2c74:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2c78:	3e 96       	adiw	r30, 0x0e	; 14
    2c7a:	05 90       	lpm	r0, Z+
    2c7c:	f4 91       	lpm	r31, Z
    2c7e:	e0 2d       	mov	r30, r0
    2c80:	cf 01       	movw	r24, r30
    2c82:	8a 51       	subi	r24, 0x1A	; 26
    2c84:	95 40       	sbci	r25, 0x05	; 5
    2c86:	88 0f       	add	r24, r24
    2c88:	88 0f       	add	r24, r24
    2c8a:	88 0f       	add	r24, r24
    2c8c:	d0 81       	ld	r29, Z
    2c8e:	c0 e0       	ldi	r28, 0x00	; 0
    2c90:	0b c0       	rjmp	.+22     	; 0x2ca8 <menuOnExitRegisterEdit+0x42>
    2c92:	11 e0       	ldi	r17, 0x01	; 1
    2c94:	18 0f       	add	r17, r24
    2c96:	6d 2f       	mov	r22, r29
    2c98:	66 1f       	adc	r22, r22
    2c9a:	66 27       	eor	r22, r22
    2c9c:	66 1f       	adc	r22, r22
    2c9e:	0e 94 2f 29 	call	0x525e	; 0x525e <register_onOff>
    2ca2:	dd 0f       	add	r29, r29
    2ca4:	cf 5f       	subi	r28, 0xFF	; 255
    2ca6:	81 2f       	mov	r24, r17
    2ca8:	c8 30       	cpi	r28, 0x08	; 8
    2caa:	98 f3       	brcs	.-26     	; 0x2c92 <menuOnExitRegisterEdit+0x2c>
    2cac:	80 e0       	ldi	r24, 0x00	; 0
    2cae:	df 91       	pop	r29
    2cb0:	cf 91       	pop	r28
    2cb2:	1f 91       	pop	r17
    2cb4:	08 95       	ret

00002cb6 <menuOnExitCoupler>:
    2cb6:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2cba:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2cbe:	3e 96       	adiw	r30, 0x0e	; 14
    2cc0:	85 91       	lpm	r24, Z+
    2cc2:	95 91       	lpm	r25, Z+
    2cc4:	8c 5b       	subi	r24, 0xBC	; 188
    2cc6:	97 40       	sbci	r25, 0x07	; 7
    2cc8:	fc 01       	movw	r30, r24
    2cca:	ff 27       	eor	r31, r31
    2ccc:	e4 54       	subi	r30, 0x44	; 68
    2cce:	f8 4f       	sbci	r31, 0xF8	; 248
    2cd0:	20 81       	ld	r18, Z
    2cd2:	21 11       	cpse	r18, r1
    2cd4:	0e 94 d8 27 	call	0x4fb0	; 0x4fb0 <set_Coupler>
    2cd8:	80 e0       	ldi	r24, 0x00	; 0
    2cda:	08 95       	ret

00002cdc <menuOnExitSaveProgram>:
    2cdc:	86 30       	cpi	r24, 0x06	; 6
    2cde:	39 f0       	breq	.+14     	; 0x2cee <menuOnExitSaveProgram+0x12>
    2ce0:	80 91 55 05 	lds	r24, 0x0555	; 0x800555 <menuVKombination>
    2ce4:	80 34       	cpi	r24, 0x40	; 64
    2ce6:	18 f4       	brcc	.+6      	; 0x2cee <menuOnExitSaveProgram+0x12>
    2ce8:	6f ef       	ldi	r22, 0xFF	; 255
    2cea:	0e 94 d2 29 	call	0x53a4	; 0x53a4 <register_toProgram>
    2cee:	80 e0       	ldi	r24, 0x00	; 0
    2cf0:	08 95       	ret

00002cf2 <menuOnExitKeys>:
    2cf2:	0e 94 bb 0b 	call	0x1776	; 0x1776 <eeprom_UpdateSoftkeys>
    2cf6:	80 e0       	ldi	r24, 0x00	; 0
    2cf8:	08 95       	ret

00002cfa <menu_readModule>:
    2cfa:	cf 92       	push	r12
    2cfc:	df 92       	push	r13
    2cfe:	ef 92       	push	r14
    2d00:	ff 92       	push	r15
    2d02:	81 e0       	ldi	r24, 0x01	; 1
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	00 90 25 05 	lds	r0, 0x0525	; 0x800525 <menuVmodule>
    2d0a:	02 c0       	rjmp	.+4      	; 0x2d10 <menu_readModule+0x16>
    2d0c:	88 0f       	add	r24, r24
    2d0e:	99 1f       	adc	r25, r25
    2d10:	0a 94       	dec	r0
    2d12:	e2 f7       	brpl	.-8      	; 0x2d0c <menu_readModule+0x12>
    2d14:	28 2f       	mov	r18, r24
    2d16:	90 e0       	ldi	r25, 0x00	; 0
    2d18:	ef e3       	ldi	r30, 0x3F	; 63
    2d1a:	f3 e0       	ldi	r31, 0x03	; 3
    2d1c:	c1 2c       	mov	r12, r1
    2d1e:	d1 2c       	mov	r13, r1
    2d20:	76 01       	movw	r14, r12
    2d22:	0b c0       	rjmp	.+22     	; 0x2d3a <menu_readModule+0x40>
    2d24:	cc 0c       	add	r12, r12
    2d26:	dd 1c       	adc	r13, r13
    2d28:	ee 1c       	adc	r14, r14
    2d2a:	ff 1c       	adc	r15, r15
    2d2c:	86 81       	ldd	r24, Z+6	; 0x06
    2d2e:	82 23       	and	r24, r18
    2d30:	11 f0       	breq	.+4      	; 0x2d36 <menu_readModule+0x3c>
    2d32:	68 94       	set
    2d34:	c0 f8       	bld	r12, 0
    2d36:	38 97       	sbiw	r30, 0x08	; 8
    2d38:	9f 5f       	subi	r25, 0xFF	; 255
    2d3a:	90 32       	cpi	r25, 0x20	; 32
    2d3c:	98 f3       	brcs	.-26     	; 0x2d24 <menu_readModule+0x2a>
    2d3e:	8e e1       	ldi	r24, 0x1E	; 30
    2d40:	d9 da       	rcall	.-2638   	; 0x22f4 <lcd_goto>
    2d42:	c0 92 1e 0d 	sts	0x0D1E, r12	; 0x800d1e <editLong>
    2d46:	d0 92 1f 0d 	sts	0x0D1F, r13	; 0x800d1f <editLong+0x1>
    2d4a:	e0 92 20 0d 	sts	0x0D20, r14	; 0x800d20 <editLong+0x2>
    2d4e:	f0 92 21 0d 	sts	0x0D21, r15	; 0x800d21 <editLong+0x3>
    2d52:	0e 94 02 30 	call	0x6004	; 0x6004 <lcd_longout>
    2d56:	80 e0       	ldi	r24, 0x00	; 0
    2d58:	ff 90       	pop	r15
    2d5a:	ef 90       	pop	r14
    2d5c:	df 90       	pop	r13
    2d5e:	cf 90       	pop	r12
    2d60:	08 95       	ret

00002d62 <menu_testModule>:
    2d62:	8e e1       	ldi	r24, 0x1E	; 30
    2d64:	c7 da       	rcall	.-2674   	; 0x22f4 <lcd_goto>
    2d66:	80 91 25 05 	lds	r24, 0x0525	; 0x800525 <menuVmodule>
    2d6a:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <test_PipeModule>
    2d6e:	60 93 1e 0d 	sts	0x0D1E, r22	; 0x800d1e <editLong>
    2d72:	70 93 1f 0d 	sts	0x0D1F, r23	; 0x800d1f <editLong+0x1>
    2d76:	80 93 20 0d 	sts	0x0D20, r24	; 0x800d20 <editLong+0x2>
    2d7a:	90 93 21 0d 	sts	0x0D21, r25	; 0x800d21 <editLong+0x3>
    2d7e:	0e 94 02 30 	call	0x6004	; 0x6004 <lcd_longout>
    2d82:	80 e0       	ldi	r24, 0x00	; 0
    2d84:	08 95       	ret

00002d86 <menuOnEnterTune>:
    2d86:	cf 93       	push	r28
    2d88:	8f 3f       	cpi	r24, 0xFF	; 255
    2d8a:	09 f0       	breq	.+2      	; 0x2d8e <menuOnEnterTune+0x8>
    2d8c:	77 c0       	rjmp	.+238    	; 0x2e7c <menuOnEnterTune+0xf6>
    2d8e:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <minManNote.2859>
    2d92:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <maxManNote.2860>
    2d96:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    2d9a:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    2d9e:	3e 96       	adiw	r30, 0x0e	; 14
    2da0:	85 91       	lpm	r24, Z+
    2da2:	95 91       	lpm	r25, Z+
    2da4:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <menuVmanual>
    2da8:	84 30       	cpi	r24, 0x04	; 4
    2daa:	10 f0       	brcs	.+4      	; 0x2db0 <menuOnEnterTune+0x2a>
    2dac:	10 92 24 05 	sts	0x0524, r1	; 0x800524 <menuVmanual>
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	39 c0       	rjmp	.+114    	; 0x2e26 <menuOnEnterTune+0xa0>
    2db4:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	e2 2f       	mov	r30, r18
    2dbc:	f0 e0       	ldi	r31, 0x00	; 0
    2dbe:	df 01       	movw	r26, r30
    2dc0:	aa 0f       	add	r26, r26
    2dc2:	bb 1f       	adc	r27, r27
    2dc4:	ad 01       	movw	r20, r26
    2dc6:	4e 0f       	add	r20, r30
    2dc8:	5f 1f       	adc	r21, r31
    2dca:	dc 01       	movw	r26, r24
    2dcc:	aa 0f       	add	r26, r26
    2dce:	bb 1f       	adc	r27, r27
    2dd0:	a8 0f       	add	r26, r24
    2dd2:	b9 1f       	adc	r27, r25
    2dd4:	aa 0f       	add	r26, r26
    2dd6:	bb 1f       	adc	r27, r27
    2dd8:	aa 0f       	add	r26, r26
    2dda:	bb 1f       	adc	r27, r27
    2ddc:	a4 0f       	add	r26, r20
    2dde:	b5 1f       	adc	r27, r21
    2de0:	a9 52       	subi	r26, 0x29	; 41
    2de2:	b7 4f       	sbci	r27, 0xF7	; 247
    2de4:	3c 91       	ld	r19, X
    2de6:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <minManNote.2859>
    2dea:	34 17       	cp	r19, r20
    2dec:	10 f4       	brcc	.+4      	; 0x2df2 <menuOnEnterTune+0x6c>
    2dee:	30 93 0c 02 	sts	0x020C, r19	; 0x80020c <minManNote.2859>
    2df2:	af 01       	movw	r20, r30
    2df4:	44 0f       	add	r20, r20
    2df6:	55 1f       	adc	r21, r21
    2df8:	e4 0f       	add	r30, r20
    2dfa:	f5 1f       	adc	r31, r21
    2dfc:	ac 01       	movw	r20, r24
    2dfe:	44 0f       	add	r20, r20
    2e00:	55 1f       	adc	r21, r21
    2e02:	84 0f       	add	r24, r20
    2e04:	95 1f       	adc	r25, r21
    2e06:	88 0f       	add	r24, r24
    2e08:	99 1f       	adc	r25, r25
    2e0a:	88 0f       	add	r24, r24
    2e0c:	99 1f       	adc	r25, r25
    2e0e:	e8 0f       	add	r30, r24
    2e10:	f9 1f       	adc	r31, r25
    2e12:	e9 52       	subi	r30, 0x29	; 41
    2e14:	f7 4f       	sbci	r31, 0xF7	; 247
    2e16:	81 81       	ldd	r24, Z+1	; 0x01
    2e18:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <maxManNote.2860>
    2e1c:	98 17       	cp	r25, r24
    2e1e:	10 f4       	brcc	.+4      	; 0x2e24 <menuOnEnterTune+0x9e>
    2e20:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <maxManNote.2860>
    2e24:	2f 5f       	subi	r18, 0xFF	; 255
    2e26:	24 30       	cpi	r18, 0x04	; 4
    2e28:	28 f2       	brcs	.-118    	; 0x2db4 <menuOnEnterTune+0x2e>
    2e2a:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <minManNote.2859>
    2e2e:	88 23       	and	r24, r24
    2e30:	4c f4       	brge	.+18     	; 0x2e44 <menuOnEnterTune+0xbe>
    2e32:	8e e1       	ldi	r24, 0x1E	; 30
    2e34:	5f da       	rcall	.-2882   	; 0x22f4 <lcd_goto>
    2e36:	8c e3       	ldi	r24, 0x3C	; 60
    2e38:	93 e0       	ldi	r25, 0x03	; 3
    2e3a:	7e da       	rcall	.-2820   	; 0x2338 <lcd_puts_P>
    2e3c:	8f ef       	ldi	r24, 0xFF	; 255
    2e3e:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <menuNote>
    2e42:	04 c0       	rjmp	.+8      	; 0x2e4c <menuOnEnterTune+0xc6>
    2e44:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <menuNote>
    2e48:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <notOnOff.2861>
    2e4c:	6a eb       	ldi	r22, 0xBA	; 186
    2e4e:	70 e1       	ldi	r23, 0x10	; 16
    2e50:	80 e0       	ldi	r24, 0x00	; 0
    2e52:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    2e56:	69 ec       	ldi	r22, 0xC9	; 201
    2e58:	70 e1       	ldi	r23, 0x10	; 16
    2e5a:	81 e0       	ldi	r24, 0x01	; 1
    2e5c:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    2e60:	6e ec       	ldi	r22, 0xCE	; 206
    2e62:	70 e1       	ldi	r23, 0x10	; 16
    2e64:	82 e0       	ldi	r24, 0x02	; 2
    2e66:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    2e6a:	60 ed       	ldi	r22, 0xD0	; 208
    2e6c:	70 e1       	ldi	r23, 0x10	; 16
    2e6e:	83 e0       	ldi	r24, 0x03	; 3
    2e70:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    2e74:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    2e78:	cf ef       	ldi	r28, 0xFF	; 255
    2e7a:	71 c0       	rjmp	.+226    	; 0x2f5e <menuOnEnterTune+0x1d8>
    2e7c:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <menuNote>
    2e80:	6f 3f       	cpi	r22, 0xFF	; 255
    2e82:	09 f4       	brne	.+2      	; 0x2e86 <menuOnEnterTune+0x100>
    2e84:	61 c0       	rjmp	.+194    	; 0x2f48 <menuOnEnterTune+0x1c2>
    2e86:	81 30       	cpi	r24, 0x01	; 1
    2e88:	d9 f4       	brne	.+54     	; 0x2ec0 <menuOnEnterTune+0x13a>
    2e8a:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <maxManNote.2860>
    2e8e:	68 17       	cp	r22, r24
    2e90:	08 f0       	brcs	.+2      	; 0x2e94 <menuOnEnterTune+0x10e>
    2e92:	5c c0       	rjmp	.+184    	; 0x2f4c <menuOnEnterTune+0x1c6>
    2e94:	40 e0       	ldi	r20, 0x00	; 0
    2e96:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2e9a:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2e9e:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <menuNote>
    2ea2:	6f 5f       	subi	r22, 0xFF	; 255
    2ea4:	60 93 4c 05 	sts	0x054C, r22	; 0x80054c <menuNote>
    2ea8:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <notOnOff.2861>
    2eac:	81 30       	cpi	r24, 0x01	; 1
    2eae:	09 f0       	breq	.+2      	; 0x2eb2 <menuOnEnterTune+0x12c>
    2eb0:	4f c0       	rjmp	.+158    	; 0x2f50 <menuOnEnterTune+0x1ca>
    2eb2:	41 e0       	ldi	r20, 0x01	; 1
    2eb4:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2eb8:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2ebc:	cf ef       	ldi	r28, 0xFF	; 255
    2ebe:	4f c0       	rjmp	.+158    	; 0x2f5e <menuOnEnterTune+0x1d8>
    2ec0:	84 30       	cpi	r24, 0x04	; 4
    2ec2:	d1 f4       	brne	.+52     	; 0x2ef8 <menuOnEnterTune+0x172>
    2ec4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <minManNote.2859>
    2ec8:	86 17       	cp	r24, r22
    2eca:	08 f0       	brcs	.+2      	; 0x2ece <menuOnEnterTune+0x148>
    2ecc:	43 c0       	rjmp	.+134    	; 0x2f54 <menuOnEnterTune+0x1ce>
    2ece:	40 e0       	ldi	r20, 0x00	; 0
    2ed0:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2ed4:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2ed8:	60 91 4c 05 	lds	r22, 0x054C	; 0x80054c <menuNote>
    2edc:	61 50       	subi	r22, 0x01	; 1
    2ede:	60 93 4c 05 	sts	0x054C, r22	; 0x80054c <menuNote>
    2ee2:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <notOnOff.2861>
    2ee6:	81 30       	cpi	r24, 0x01	; 1
    2ee8:	b9 f5       	brne	.+110    	; 0x2f58 <menuOnEnterTune+0x1d2>
    2eea:	41 e0       	ldi	r20, 0x01	; 1
    2eec:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2ef0:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2ef4:	cf ef       	ldi	r28, 0xFF	; 255
    2ef6:	33 c0       	rjmp	.+102    	; 0x2f5e <menuOnEnterTune+0x1d8>
    2ef8:	83 30       	cpi	r24, 0x03	; 3
    2efa:	91 f4       	brne	.+36     	; 0x2f20 <menuOnEnterTune+0x19a>
    2efc:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <notOnOff.2861>
    2f00:	81 11       	cpse	r24, r1
    2f02:	04 c0       	rjmp	.+8      	; 0x2f0c <menuOnEnterTune+0x186>
    2f04:	81 e0       	ldi	r24, 0x01	; 1
    2f06:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <notOnOff.2861>
    2f0a:	02 c0       	rjmp	.+4      	; 0x2f10 <menuOnEnterTune+0x18a>
    2f0c:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <notOnOff.2861>
    2f10:	40 91 0a 02 	lds	r20, 0x020A	; 0x80020a <notOnOff.2861>
    2f14:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2f18:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2f1c:	cf ef       	ldi	r28, 0xFF	; 255
    2f1e:	1f c0       	rjmp	.+62     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f20:	82 30       	cpi	r24, 0x02	; 2
    2f22:	11 f0       	breq	.+4      	; 0x2f28 <menuOnEnterTune+0x1a2>
    2f24:	86 30       	cpi	r24, 0x06	; 6
    2f26:	39 f4       	brne	.+14     	; 0x2f36 <menuOnEnterTune+0x1b0>
    2f28:	40 e0       	ldi	r20, 0x00	; 0
    2f2a:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2f2e:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2f32:	c0 e0       	ldi	r28, 0x00	; 0
    2f34:	14 c0       	rjmp	.+40     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f36:	85 30       	cpi	r24, 0x05	; 5
    2f38:	89 f4       	brne	.+34     	; 0x2f5c <menuOnEnterTune+0x1d6>
    2f3a:	40 e0       	ldi	r20, 0x00	; 0
    2f3c:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <menuVmanual>
    2f40:	0e 94 47 2b 	call	0x568e	; 0x568e <manual_NoteOnOff>
    2f44:	c0 e0       	ldi	r28, 0x00	; 0
    2f46:	0b c0       	rjmp	.+22     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f48:	c0 e0       	ldi	r28, 0x00	; 0
    2f4a:	09 c0       	rjmp	.+18     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f4c:	cf ef       	ldi	r28, 0xFF	; 255
    2f4e:	07 c0       	rjmp	.+14     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f50:	cf ef       	ldi	r28, 0xFF	; 255
    2f52:	05 c0       	rjmp	.+10     	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f54:	cf ef       	ldi	r28, 0xFF	; 255
    2f56:	03 c0       	rjmp	.+6      	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f58:	cf ef       	ldi	r28, 0xFF	; 255
    2f5a:	01 c0       	rjmp	.+2      	; 0x2f5e <menuOnEnterTune+0x1d8>
    2f5c:	cf ef       	ldi	r28, 0xFF	; 255
    2f5e:	cf 3f       	cpi	r28, 0xFF	; 255
    2f60:	59 f5       	brne	.+86     	; 0x2fb8 <menuOnEnterTune+0x232>
    2f62:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <menuNote>
    2f66:	8f 3f       	cpi	r24, 0xFF	; 255
    2f68:	29 f1       	breq	.+74     	; 0x2fb4 <menuOnEnterTune+0x22e>
    2f6a:	8e e1       	ldi	r24, 0x1E	; 30
    2f6c:	c3 d9       	rcall	.-3194   	; 0x22f4 <lcd_goto>
    2f6e:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <menuNote>
    2f72:	0e 94 25 31 	call	0x624a	; 0x624a <lcd_noteOut>
    2f76:	80 e2       	ldi	r24, 0x20	; 32
    2f78:	c7 d9       	rcall	.-3186   	; 0x2308 <lcd_putc>
    2f7a:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <notOnOff.2861>
    2f7e:	81 11       	cpse	r24, r1
    2f80:	07 c0       	rjmp	.+14     	; 0x2f90 <menuOnEnterTune+0x20a>
    2f82:	81 e6       	ldi	r24, 0x61	; 97
    2f84:	c1 d9       	rcall	.-3198   	; 0x2308 <lcd_putc>
    2f86:	85 e7       	ldi	r24, 0x75	; 117
    2f88:	bf d9       	rcall	.-3202   	; 0x2308 <lcd_putc>
    2f8a:	83 e7       	ldi	r24, 0x73	; 115
    2f8c:	bd d9       	rcall	.-3206   	; 0x2308 <lcd_putc>
    2f8e:	06 c0       	rjmp	.+12     	; 0x2f9c <menuOnEnterTune+0x216>
    2f90:	85 e6       	ldi	r24, 0x65	; 101
    2f92:	ba d9       	rcall	.-3212   	; 0x2308 <lcd_putc>
    2f94:	89 e6       	ldi	r24, 0x69	; 105
    2f96:	b8 d9       	rcall	.-3216   	; 0x2308 <lcd_putc>
    2f98:	8e e6       	ldi	r24, 0x6E	; 110
    2f9a:	b6 d9       	rcall	.-3220   	; 0x2308 <lcd_putc>
    2f9c:	61 e0       	ldi	r22, 0x01	; 1
    2f9e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <notOnOff.2861>
    2fa2:	81 11       	cpse	r24, r1
    2fa4:	01 c0       	rjmp	.+2      	; 0x2fa8 <menuOnEnterTune+0x222>
    2fa6:	60 e0       	ldi	r22, 0x00	; 0
    2fa8:	81 e0       	ldi	r24, 0x01	; 1
    2faa:	0e 94 53 32 	call	0x64a6	; 0x64a6 <keylabel_statcheck>
    2fae:	81 11       	cpse	r24, r1
    2fb0:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    2fb4:	8e e1       	ldi	r24, 0x1E	; 30
    2fb6:	9e d9       	rcall	.-3268   	; 0x22f4 <lcd_goto>
    2fb8:	8c 2f       	mov	r24, r28
    2fba:	cf 91       	pop	r28
    2fbc:	08 95       	ret

00002fbe <menuOnExitMidiActiveSense>:
    2fbe:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <eeprom_UpdateMidiOutMap>
    2fc2:	80 e0       	ldi	r24, 0x00	; 0
    2fc4:	08 95       	ret

00002fc6 <menuOnExitMidiOut>:
    2fc6:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <eeprom_UpdateMidiOutMap>
    2fca:	80 e0       	ldi	r24, 0x00	; 0
    2fcc:	08 95       	ret

00002fce <menuOnExitMidiIn>:
    2fce:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <eeprom_UpdateMidiInMap>
    2fd2:	80 e0       	ldi	r24, 0x00	; 0
    2fd4:	08 95       	ret

00002fd6 <menuOnExitManual>:
    2fd6:	0e 94 b1 0a 	call	0x1562	; 0x1562 <eeprom_UpdateManualMap>
    2fda:	0e 94 30 28 	call	0x5060	; 0x5060 <registers_CalcCount>
    2fde:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <eeprom_UpdateReg>
    2fe2:	0e 94 6d 2a 	call	0x54da	; 0x54da <Midi_updateManualRange>
    2fe6:	80 e0       	ldi	r24, 0x00	; 0
    2fe8:	08 95       	ret

00002fea <menuOnExitModules>:
    2fea:	0e 94 25 0b 	call	0x164a	; 0x164a <eeprom_UpdateModules>
    2fee:	80 e0       	ldi	r24, 0x00	; 0
    2ff0:	08 95       	ret

00002ff2 <menuOnEnterUSBprotokoll>:
    2ff2:	cf 93       	push	r28
    2ff4:	8f e1       	ldi	r24, 0x1F	; 31
    2ff6:	93 e0       	ldi	r25, 0x03	; 3
    2ff8:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    2ffc:	b8 d9       	rcall	.-3216   	; 0x236e <log_count>
    2ffe:	81 11       	cpse	r24, r1
    3000:	0f c0       	rjmp	.+30     	; 0x3020 <menuOnEnterUSBprotokoll+0x2e>
    3002:	85 e2       	ldi	r24, 0x25	; 37
    3004:	93 e0       	ldi	r25, 0x03	; 3
    3006:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    300a:	0e c0       	rjmp	.+28     	; 0x3028 <menuOnEnterUSBprotokoll+0x36>
    300c:	6f ef       	ldi	r22, 0xFF	; 255
    300e:	8c 2f       	mov	r24, r28
    3010:	52 db       	rcall	.-2396   	; 0x26b6 <log_getShortTextFromIndex>
    3012:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    3016:	82 ef       	ldi	r24, 0xF2	; 242
    3018:	90 e1       	ldi	r25, 0x10	; 16
    301a:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    301e:	8c 2f       	mov	r24, r28
    3020:	cf ef       	ldi	r28, 0xFF	; 255
    3022:	c8 0f       	add	r28, r24
    3024:	81 11       	cpse	r24, r1
    3026:	f2 cf       	rjmp	.-28     	; 0x300c <menuOnEnterUSBprotokoll+0x1a>
    3028:	80 e0       	ldi	r24, 0x00	; 0
    302a:	cf 91       	pop	r28
    302c:	08 95       	ret

0000302e <menuOnExitUSBactive>:
    302e:	0e 94 4b 0b 	call	0x1696	; 0x1696 <eeprom_UpdateUSB>
    3032:	80 91 d0 0b 	lds	r24, 0x0BD0	; 0x800bd0 <serusb_Active>
    3036:	8f 3f       	cpi	r24, 0xFF	; 255
    3038:	61 f4       	brne	.+24     	; 0x3052 <menuOnExitUSBactive+0x24>
    303a:	86 e0       	ldi	r24, 0x06	; 6
    303c:	93 e0       	ldi	r25, 0x03	; 3
    303e:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    3042:	82 e9       	ldi	r24, 0x92	; 146
    3044:	90 e1       	ldi	r25, 0x10	; 16
    3046:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    304a:	82 ef       	ldi	r24, 0xF2	; 242
    304c:	90 e1       	ldi	r25, 0x10	; 16
    304e:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    3052:	80 e0       	ldi	r24, 0x00	; 0
    3054:	08 95       	ret

00003056 <menuOnEnterUSBsendHW>:
    3056:	9f 92       	push	r9
    3058:	af 92       	push	r10
    305a:	bf 92       	push	r11
    305c:	cf 92       	push	r12
    305e:	df 92       	push	r13
    3060:	ef 92       	push	r14
    3062:	ff 92       	push	r15
    3064:	0f 93       	push	r16
    3066:	1f 93       	push	r17
    3068:	cf 93       	push	r28
    306a:	df 93       	push	r29
    306c:	8d ee       	ldi	r24, 0xED	; 237
    306e:	92 e0       	ldi	r25, 0x02	; 2
    3070:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    3074:	8a ed       	ldi	r24, 0xDA	; 218
    3076:	92 e0       	ldi	r25, 0x02	; 2
    3078:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    307c:	62 e2       	ldi	r22, 0x22	; 34
    307e:	7d e0       	ldi	r23, 0x0D	; 13
    3080:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <pipe_ModuleAssnRead>
    3084:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    3088:	22 e7       	ldi	r18, 0x72	; 114
    308a:	fc 01       	movw	r30, r24
    308c:	20 83       	st	Z, r18
    308e:	bc 01       	movw	r22, r24
    3090:	6e 5f       	subi	r22, 0xFE	; 254
    3092:	7f 4f       	sbci	r23, 0xFF	; 255
    3094:	20 e2       	ldi	r18, 0x20	; 32
    3096:	21 83       	std	Z+1, r18	; 0x01
    3098:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <pipe_ModuleAssnWrite>
    309c:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    30a0:	27 e7       	ldi	r18, 0x77	; 119
    30a2:	fc 01       	movw	r30, r24
    30a4:	20 83       	st	Z, r18
    30a6:	82 e2       	ldi	r24, 0x22	; 34
    30a8:	9d e0       	ldi	r25, 0x0D	; 13
    30aa:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    30ae:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <serial0SER_USB_sendCRLF>
    30b2:	88 ec       	ldi	r24, 0xC8	; 200
    30b4:	92 e0       	ldi	r25, 0x02	; 2
    30b6:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    30ba:	62 e2       	ldi	r22, 0x22	; 34
    30bc:	7d e0       	ldi	r23, 0x0D	; 13
    30be:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <pipe_ModuleTested>
    30c2:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    30c6:	82 e2       	ldi	r24, 0x22	; 34
    30c8:	9d e0       	ldi	r25, 0x0D	; 13
    30ca:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    30ce:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <serial0SER_USB_sendCRLF>
    30d2:	e1 2c       	mov	r14, r1
    30d4:	b5 c0       	rjmp	.+362    	; 0x3240 <menuOnEnterUSBsendHW+0x1ea>
    30d6:	8f eb       	ldi	r24, 0xBF	; 191
    30d8:	92 e0       	ldi	r25, 0x02	; 2
    30da:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    30de:	62 e2       	ldi	r22, 0x22	; 34
    30e0:	7d e0       	ldi	r23, 0x0D	; 13
    30e2:	8e 2d       	mov	r24, r14
    30e4:	0e 94 ee 30 	call	0x61dc	; 0x61dc <putChar_Manual>
    30e8:	82 e2       	ldi	r24, 0x22	; 34
    30ea:	9d e0       	ldi	r25, 0x0D	; 13
    30ec:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    30f0:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <serial0SER_USB_sendCRLF>
    30f4:	f1 2c       	mov	r15, r1
    30f6:	9f c0       	rjmp	.+318    	; 0x3236 <menuOnEnterUSBsendHW+0x1e0>
    30f8:	87 eb       	ldi	r24, 0xB7	; 183
    30fa:	92 e0       	ldi	r25, 0x02	; 2
    30fc:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    3100:	80 e3       	ldi	r24, 0x30	; 48
    3102:	8f 0d       	add	r24, r15
    3104:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <serial0SER_USBSend>
    3108:	8d e2       	ldi	r24, 0x2D	; 45
    310a:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <serial0SER_USBSend>
    310e:	80 e2       	ldi	r24, 0x20	; 32
    3110:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <serial0SER_USBSend>
    3114:	0e 2d       	mov	r16, r14
    3116:	10 e0       	ldi	r17, 0x00	; 0
    3118:	cf 2c       	mov	r12, r15
    311a:	d1 2c       	mov	r13, r1
    311c:	e6 01       	movw	r28, r12
    311e:	cc 0f       	add	r28, r28
    3120:	dd 1f       	adc	r29, r29
    3122:	ce 01       	movw	r24, r28
    3124:	8c 0d       	add	r24, r12
    3126:	9d 1d       	adc	r25, r13
    3128:	e8 01       	movw	r28, r16
    312a:	cc 0f       	add	r28, r28
    312c:	dd 1f       	adc	r29, r29
    312e:	c0 0f       	add	r28, r16
    3130:	d1 1f       	adc	r29, r17
    3132:	cc 0f       	add	r28, r28
    3134:	dd 1f       	adc	r29, r29
    3136:	cc 0f       	add	r28, r28
    3138:	dd 1f       	adc	r29, r29
    313a:	c8 0f       	add	r28, r24
    313c:	d9 1f       	adc	r29, r25
    313e:	c9 52       	subi	r28, 0x29	; 41
    3140:	d7 4f       	sbci	r29, 0xF7	; 247
    3142:	62 e2       	ldi	r22, 0x22	; 34
    3144:	7d e0       	ldi	r23, 0x0D	; 13
    3146:	88 81       	ld	r24, Y
    3148:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    314c:	bc 01       	movw	r22, r24
    314e:	6f 5f       	subi	r22, 0xFF	; 255
    3150:	7f 4f       	sbci	r23, 0xFF	; 255
    3152:	68 94       	set
    3154:	bb 24       	eor	r11, r11
    3156:	b5 f8       	bld	r11, 5
    3158:	fc 01       	movw	r30, r24
    315a:	b0 82       	st	Z, r11
    315c:	89 81       	ldd	r24, Y+1	; 0x01
    315e:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    3162:	bc 01       	movw	r22, r24
    3164:	6f 5f       	subi	r22, 0xFF	; 255
    3166:	7f 4f       	sbci	r23, 0xFF	; 255
    3168:	fc 01       	movw	r30, r24
    316a:	b0 82       	st	Z, r11
    316c:	8a 81       	ldd	r24, Y+2	; 0x02
    316e:	0e 94 5d 30 	call	0x60ba	; 0x60ba <putChar_hex>
    3172:	2d e3       	ldi	r18, 0x3D	; 61
    3174:	fc 01       	movw	r30, r24
    3176:	20 83       	st	Z, r18
    3178:	82 e2       	ldi	r24, 0x22	; 34
    317a:	9d e0       	ldi	r25, 0x0D	; 13
    317c:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    3180:	88 81       	ld	r24, Y
    3182:	88 23       	and	r24, r24
    3184:	2c f4       	brge	.+10     	; 0x3190 <menuOnEnterUSBsendHW+0x13a>
    3186:	81 eb       	ldi	r24, 0xB1	; 177
    3188:	92 e0       	ldi	r25, 0x02	; 2
    318a:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    318e:	50 c0       	rjmp	.+160    	; 0x3230 <menuOnEnterUSBsendHW+0x1da>
    3190:	62 e2       	ldi	r22, 0x22	; 34
    3192:	7d e0       	ldi	r23, 0x0D	; 13
    3194:	0e 94 92 30 	call	0x6124	; 0x6124 <putChar_Note>
    3198:	bc 01       	movw	r22, r24
    319a:	6f 5f       	subi	r22, 0xFF	; 255
    319c:	7f 4f       	sbci	r23, 0xFF	; 255
    319e:	0f 2e       	mov	r0, r31
    31a0:	fd e2       	ldi	r31, 0x2D	; 45
    31a2:	9f 2e       	mov	r9, r31
    31a4:	f0 2d       	mov	r31, r0
    31a6:	fc 01       	movw	r30, r24
    31a8:	90 82       	st	Z, r9
    31aa:	f6 01       	movw	r30, r12
    31ac:	ee 0f       	add	r30, r30
    31ae:	ff 1f       	adc	r31, r31
    31b0:	ce 0e       	add	r12, r30
    31b2:	df 1e       	adc	r13, r31
    31b4:	58 01       	movw	r10, r16
    31b6:	aa 0c       	add	r10, r10
    31b8:	bb 1c       	adc	r11, r11
    31ba:	e5 01       	movw	r28, r10
    31bc:	c0 0f       	add	r28, r16
    31be:	d1 1f       	adc	r29, r17
    31c0:	cc 0f       	add	r28, r28
    31c2:	dd 1f       	adc	r29, r29
    31c4:	cc 0f       	add	r28, r28
    31c6:	dd 1f       	adc	r29, r29
    31c8:	cc 0d       	add	r28, r12
    31ca:	dd 1d       	adc	r29, r13
    31cc:	c9 52       	subi	r28, 0x29	; 41
    31ce:	d7 4f       	sbci	r29, 0xF7	; 247
    31d0:	89 81       	ldd	r24, Y+1	; 0x01
    31d2:	0e 94 92 30 	call	0x6124	; 0x6124 <putChar_Note>
    31d6:	20 e2       	ldi	r18, 0x20	; 32
    31d8:	fc 01       	movw	r30, r24
    31da:	20 83       	st	Z, r18
    31dc:	82 e2       	ldi	r24, 0x22	; 34
    31de:	9d e0       	ldi	r25, 0x0D	; 13
    31e0:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    31e4:	89 ea       	ldi	r24, 0xA9	; 169
    31e6:	92 e0       	ldi	r25, 0x02	; 2
    31e8:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    31ec:	8a 81       	ldd	r24, Y+2	; 0x02
    31ee:	82 95       	swap	r24
    31f0:	86 95       	lsr	r24
    31f2:	87 70       	andi	r24, 0x07	; 7
    31f4:	80 5d       	subi	r24, 0xD0	; 208
    31f6:	0e 94 d5 2e 	call	0x5daa	; 0x5daa <serial0SER_USBSend>
    31fa:	82 ea       	ldi	r24, 0xA2	; 162
    31fc:	92 e0       	ldi	r25, 0x02	; 2
    31fe:	0e 94 fb 2e 	call	0x5df6	; 0x5df6 <serial0SER_USB_sendStringP>
    3202:	8a 81       	ldd	r24, Y+2	; 0x02
    3204:	62 e2       	ldi	r22, 0x22	; 34
    3206:	7d e0       	ldi	r23, 0x0D	; 13
    3208:	8f 71       	andi	r24, 0x1F	; 31
    320a:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    320e:	bc 01       	movw	r22, r24
    3210:	6f 5f       	subi	r22, 0xFF	; 255
    3212:	7f 4f       	sbci	r23, 0xFF	; 255
    3214:	fc 01       	movw	r30, r24
    3216:	90 82       	st	Z, r9
    3218:	8a 81       	ldd	r24, Y+2	; 0x02
    321a:	99 81       	ldd	r25, Y+1	; 0x01
    321c:	28 81       	ld	r18, Y
    321e:	8f 71       	andi	r24, 0x1F	; 31
    3220:	89 0f       	add	r24, r25
    3222:	82 1b       	sub	r24, r18
    3224:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    3228:	82 e2       	ldi	r24, 0x22	; 34
    322a:	9d e0       	ldi	r25, 0x0D	; 13
    322c:	0e 94 43 2f 	call	0x5e86	; 0x5e86 <serial0SER_USB_sendString>
    3230:	0e 94 0d 2f 	call	0x5e1a	; 0x5e1a <serial0SER_USB_sendCRLF>
    3234:	f3 94       	inc	r15
    3236:	f3 e0       	ldi	r31, 0x03	; 3
    3238:	ff 15       	cp	r31, r15
    323a:	08 f0       	brcs	.+2      	; 0x323e <menuOnEnterUSBsendHW+0x1e8>
    323c:	5d cf       	rjmp	.-326    	; 0x30f8 <menuOnEnterUSBsendHW+0xa2>
    323e:	e3 94       	inc	r14
    3240:	83 e0       	ldi	r24, 0x03	; 3
    3242:	8e 15       	cp	r24, r14
    3244:	08 f0       	brcs	.+2      	; 0x3248 <menuOnEnterUSBsendHW+0x1f2>
    3246:	47 cf       	rjmp	.-370    	; 0x30d6 <menuOnEnterUSBsendHW+0x80>
    3248:	80 e0       	ldi	r24, 0x00	; 0
    324a:	df 91       	pop	r29
    324c:	cf 91       	pop	r28
    324e:	1f 91       	pop	r17
    3250:	0f 91       	pop	r16
    3252:	ff 90       	pop	r15
    3254:	ef 90       	pop	r14
    3256:	df 90       	pop	r13
    3258:	cf 90       	pop	r12
    325a:	bf 90       	pop	r11
    325c:	af 90       	pop	r10
    325e:	9f 90       	pop	r9
    3260:	08 95       	ret

00003262 <reverseRegisterBits>:
    3262:	1f 93       	push	r17
    3264:	cf 93       	push	r28
    3266:	df 93       	push	r29
    3268:	10 e0       	ldi	r17, 0x00	; 0
    326a:	09 c0       	rjmp	.+18     	; 0x327e <reverseRegisterBits+0x1c>
    326c:	c1 2f       	mov	r28, r17
    326e:	d0 e0       	ldi	r29, 0x00	; 0
    3270:	c6 5e       	subi	r28, 0xE6	; 230
    3272:	da 4f       	sbci	r29, 0xFA	; 250
    3274:	88 81       	ld	r24, Y
    3276:	0e 94 8a 32 	call	0x6514	; 0x6514 <reverse_Bits>
    327a:	88 83       	st	Y, r24
    327c:	1f 5f       	subi	r17, 0xFF	; 255
    327e:	18 30       	cpi	r17, 0x08	; 8
    3280:	a8 f3       	brcs	.-22     	; 0x326c <reverseRegisterBits+0xa>
    3282:	df 91       	pop	r29
    3284:	cf 91       	pop	r28
    3286:	1f 91       	pop	r17
    3288:	08 95       	ret

0000328a <menuOnUpdateRegister>:
    328a:	8a e1       	ldi	r24, 0x1A	; 26
    328c:	95 e0       	ldi	r25, 0x05	; 5
    328e:	0e 94 03 29 	call	0x5206	; 0x5206 <read_allRegister>
    3292:	e7 df       	rcall	.-50     	; 0x3262 <reverseRegisterBits>
    3294:	80 e0       	ldi	r24, 0x00	; 0
    3296:	08 95       	ret

00003298 <menuOnEnterResetReg>:
    3298:	0e 94 c5 29 	call	0x538a	; 0x538a <midi_resetRegisters>
    329c:	80 e0       	ldi	r24, 0x00	; 0
    329e:	f5 df       	rcall	.-22     	; 0x328a <menuOnUpdateRegister>
    32a0:	80 e0       	ldi	r24, 0x00	; 0
    32a2:	08 95       	ret

000032a4 <menuOnExitLoadProgran>:
    32a4:	86 30       	cpi	r24, 0x06	; 6
    32a6:	31 f0       	breq	.+12     	; 0x32b4 <menuOnExitLoadProgran+0x10>
    32a8:	80 91 55 05 	lds	r24, 0x0555	; 0x800555 <menuVKombination>
    32ac:	80 34       	cpi	r24, 0x40	; 64
    32ae:	10 f4       	brcc	.+4      	; 0x32b4 <menuOnExitLoadProgran+0x10>
    32b0:	0e 94 6d 29 	call	0x52da	; 0x52da <program_toRegister>
    32b4:	80 e0       	ldi	r24, 0x00	; 0
    32b6:	e9 df       	rcall	.-46     	; 0x328a <menuOnUpdateRegister>
    32b8:	80 e0       	ldi	r24, 0x00	; 0
    32ba:	08 95       	ret

000032bc <softkeyCoupler>:
    32bc:	cf 93       	push	r28
    32be:	c6 2f       	mov	r28, r22
    32c0:	88 23       	and	r24, r24
    32c2:	d9 f0       	breq	.+54     	; 0x32fa <softkeyCoupler+0x3e>
    32c4:	e6 2f       	mov	r30, r22
    32c6:	f0 e0       	ldi	r31, 0x00	; 0
    32c8:	df 01       	movw	r26, r30
    32ca:	a4 54       	subi	r26, 0x44	; 68
    32cc:	b8 4f       	sbci	r27, 0xF8	; 248
    32ce:	8c 91       	ld	r24, X
    32d0:	81 11       	cpse	r24, r1
    32d2:	08 c0       	rjmp	.+16     	; 0x32e4 <softkeyCoupler+0x28>
    32d4:	86 2f       	mov	r24, r22
    32d6:	0e 94 d8 27 	call	0x4fb0	; 0x4fb0 <set_Coupler>
    32da:	88 23       	and	r24, r24
    32dc:	71 f0       	breq	.+28     	; 0x32fa <softkeyCoupler+0x3e>
    32de:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <midi_ManualOff>
    32e2:	0b c0       	rjmp	.+22     	; 0x32fa <softkeyCoupler+0x3e>
    32e4:	df 01       	movw	r26, r30
    32e6:	a4 54       	subi	r26, 0x44	; 68
    32e8:	b8 4f       	sbci	r27, 0xF8	; 248
    32ea:	1c 92       	st	X, r1
    32ec:	ee 0f       	add	r30, r30
    32ee:	ff 1f       	adc	r31, r31
    32f0:	e8 56       	subi	r30, 0x68	; 104
    32f2:	ff 4e       	sbci	r31, 0xEF	; 239
    32f4:	84 91       	lpm	r24, Z
    32f6:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <midi_ManualOff>
    32fa:	ec 2f       	mov	r30, r28
    32fc:	f0 e0       	ldi	r31, 0x00	; 0
    32fe:	e4 54       	subi	r30, 0x44	; 68
    3300:	f8 4f       	sbci	r31, 0xF8	; 248
    3302:	80 81       	ld	r24, Z
    3304:	81 11       	cpse	r24, r1
    3306:	02 c0       	rjmp	.+4      	; 0x330c <softkeyCoupler+0x50>
    3308:	82 e8       	ldi	r24, 0x82	; 130
    330a:	01 c0       	rjmp	.+2      	; 0x330e <softkeyCoupler+0x52>
    330c:	81 e8       	ldi	r24, 0x81	; 129
    330e:	cf 91       	pop	r28
    3310:	08 95       	ret

00003312 <softKeyCoupler2from3>:
    3312:	60 e0       	ldi	r22, 0x00	; 0
    3314:	d3 cf       	rjmp	.-90     	; 0x32bc <softkeyCoupler>
    3316:	08 95       	ret

00003318 <softKeyCoupler1from3>:
    3318:	61 e0       	ldi	r22, 0x01	; 1
    331a:	d0 cf       	rjmp	.-96     	; 0x32bc <softkeyCoupler>
    331c:	08 95       	ret

0000331e <softKeyCouplerPfrom3>:
    331e:	63 e0       	ldi	r22, 0x03	; 3
    3320:	cd cf       	rjmp	.-102    	; 0x32bc <softkeyCoupler>
    3322:	08 95       	ret

00003324 <softKeyCoupler1from2>:
    3324:	62 e0       	ldi	r22, 0x02	; 2
    3326:	ca cf       	rjmp	.-108    	; 0x32bc <softkeyCoupler>
    3328:	08 95       	ret

0000332a <softKeyCouplerPfrom2>:
    332a:	64 e0       	ldi	r22, 0x04	; 4
    332c:	c7 cf       	rjmp	.-114    	; 0x32bc <softkeyCoupler>
    332e:	08 95       	ret

00003330 <softKeyCouplerPfrom1>:
    3330:	65 e0       	ldi	r22, 0x05	; 5
    3332:	c4 cf       	rjmp	.-120    	; 0x32bc <softkeyCoupler>
    3334:	08 95       	ret

00003336 <softKeyCoupler3from2>:
    3336:	66 e0       	ldi	r22, 0x06	; 6
    3338:	c1 cf       	rjmp	.-126    	; 0x32bc <softkeyCoupler>
    333a:	08 95       	ret

0000333c <softKeyCoupler3from1>:
    333c:	67 e0       	ldi	r22, 0x07	; 7
    333e:	be cf       	rjmp	.-132    	; 0x32bc <softkeyCoupler>
    3340:	08 95       	ret

00003342 <softKeyCoupler3fromP>:
    3342:	69 e0       	ldi	r22, 0x09	; 9
    3344:	bb cf       	rjmp	.-138    	; 0x32bc <softkeyCoupler>
    3346:	08 95       	ret

00003348 <softKeyCoupler2from1>:
    3348:	68 e0       	ldi	r22, 0x08	; 8
    334a:	b8 cf       	rjmp	.-144    	; 0x32bc <softkeyCoupler>
    334c:	08 95       	ret

0000334e <softKeyCoupler2fromP>:
    334e:	6a e0       	ldi	r22, 0x0A	; 10
    3350:	b5 cf       	rjmp	.-150    	; 0x32bc <softkeyCoupler>
    3352:	08 95       	ret

00003354 <softKeyCoupler1fromP>:
    3354:	6b e0       	ldi	r22, 0x0B	; 11
    3356:	b2 cf       	rjmp	.-156    	; 0x32bc <softkeyCoupler>
    3358:	08 95       	ret

0000335a <menu_Init>:
    335a:	10 92 15 05 	sts	0x0515, r1	; 0x800515 <menuStackIndex>
    335e:	00 97       	sbiw	r24, 0x00	; 0
    3360:	69 f4       	brne	.+26     	; 0x337c <menu_Init+0x22>
    3362:	82 e9       	ldi	r24, 0x92	; 146
    3364:	96 e0       	ldi	r25, 0x06	; 6
    3366:	90 93 57 05 	sts	0x0557, r25	; 0x800557 <currentMenu+0x1>
    336a:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <currentMenu>
    336e:	8b e8       	ldi	r24, 0x8B	; 139
    3370:	93 e0       	ldi	r25, 0x03	; 3
    3372:	90 93 4a 05 	sts	0x054A, r25	; 0x80054a <pMenuTopTitle+0x1>
    3376:	80 93 49 05 	sts	0x0549, r24	; 0x800549 <pMenuTopTitle>
    337a:	08 c0       	rjmp	.+16     	; 0x338c <menu_Init+0x32>
    337c:	90 93 57 05 	sts	0x0557, r25	; 0x800557 <currentMenu+0x1>
    3380:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <currentMenu>
    3384:	70 93 4a 05 	sts	0x054A, r23	; 0x80054a <pMenuTopTitle+0x1>
    3388:	60 93 49 05 	sts	0x0549, r22	; 0x800549 <pMenuTopTitle>
    338c:	8f ef       	ldi	r24, 0xFF	; 255
    338e:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    3392:	85 e9       	ldi	r24, 0x95	; 149
    3394:	93 e0       	ldi	r25, 0x03	; 3
    3396:	90 93 27 05 	sts	0x0527, r25	; 0x800527 <pNibbleInfo+0x1>
    339a:	80 93 26 05 	sts	0x0526, r24	; 0x800526 <pNibbleInfo>
    339e:	08 95       	ret

000033a0 <softkeyLeft>:
    33a0:	62 ed       	ldi	r22, 0xD2	; 210
    33a2:	70 e1       	ldi	r23, 0x10	; 16
    33a4:	82 e0       	ldi	r24, 0x02	; 2
    33a6:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33aa:	08 95       	ret

000033ac <softkeyRight>:
    33ac:	64 ed       	ldi	r22, 0xD4	; 212
    33ae:	70 e1       	ldi	r23, 0x10	; 16
    33b0:	83 e0       	ldi	r24, 0x03	; 3
    33b2:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33b6:	08 95       	ret

000033b8 <softkeyDown>:
    33b8:	66 ed       	ldi	r22, 0xD6	; 214
    33ba:	70 e1       	ldi	r23, 0x10	; 16
    33bc:	81 e0       	ldi	r24, 0x01	; 1
    33be:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33c2:	08 95       	ret

000033c4 <softkeyOn>:
    33c4:	64 ec       	ldi	r22, 0xC4	; 196
    33c6:	70 e1       	ldi	r23, 0x10	; 16
    33c8:	81 e0       	ldi	r24, 0x01	; 1
    33ca:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33ce:	08 95       	ret

000033d0 <softkeyOff>:
    33d0:	6f eb       	ldi	r22, 0xBF	; 191
    33d2:	70 e1       	ldi	r23, 0x10	; 16
    33d4:	81 e0       	ldi	r24, 0x01	; 1
    33d6:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33da:	08 95       	ret

000033dc <softkeyUp>:
    33dc:	68 ed       	ldi	r22, 0xD8	; 216
    33de:	70 e1       	ldi	r23, 0x10	; 16
    33e0:	80 e0       	ldi	r24, 0x00	; 0
    33e2:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33e6:	08 95       	ret

000033e8 <softkeyPlus>:
    33e8:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <dataType>
    33ec:	8a 30       	cpi	r24, 0x0A	; 10
    33ee:	11 f0       	breq	.+4      	; 0x33f4 <softkeyPlus+0xc>
    33f0:	8e 30       	cpi	r24, 0x0E	; 14
    33f2:	31 f4       	brne	.+12     	; 0x3400 <softkeyPlus+0x18>
    33f4:	60 eb       	ldi	r22, 0xB0	; 176
    33f6:	70 e1       	ldi	r23, 0x10	; 16
    33f8:	80 e0       	ldi	r24, 0x00	; 0
    33fa:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    33fe:	08 95       	ret
    3400:	60 ed       	ldi	r22, 0xD0	; 208
    3402:	70 e1       	ldi	r23, 0x10	; 16
    3404:	80 e0       	ldi	r24, 0x00	; 0
    3406:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    340a:	08 95       	ret

0000340c <softkeyMinus>:
    340c:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <dataType>
    3410:	8a 30       	cpi	r24, 0x0A	; 10
    3412:	11 f0       	breq	.+4      	; 0x3418 <softkeyMinus+0xc>
    3414:	8e 30       	cpi	r24, 0x0E	; 14
    3416:	31 f4       	brne	.+12     	; 0x3424 <softkeyMinus+0x18>
    3418:	62 eb       	ldi	r22, 0xB2	; 178
    341a:	70 e1       	ldi	r23, 0x10	; 16
    341c:	81 e0       	ldi	r24, 0x01	; 1
    341e:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    3422:	08 95       	ret
    3424:	6e ec       	ldi	r22, 0xCE	; 206
    3426:	70 e1       	ldi	r23, 0x10	; 16
    3428:	81 e0       	ldi	r24, 0x01	; 1
    342a:	0c 94 e5 31 	jmp	0x63ca	; 0x63ca <keylabel_set>
    342e:	08 95       	ret

00003430 <dataToNibbles>:
    3430:	cf 93       	push	r28
    3432:	df 93       	push	r29
    3434:	e0 91 22 05 	lds	r30, 0x0522	; 0x800522 <dataType>
    3438:	8e 2f       	mov	r24, r30
    343a:	90 e0       	ldi	r25, 0x00	; 0
    343c:	fc 01       	movw	r30, r24
    343e:	32 97       	sbiw	r30, 0x02	; 2
    3440:	ed 30       	cpi	r30, 0x0D	; 13
    3442:	f1 05       	cpc	r31, r1
    3444:	08 f0       	brcs	.+2      	; 0x3448 <dataToNibbles+0x18>
    3446:	e4 c0       	rjmp	.+456    	; 0x3610 <dataToNibbles+0x1e0>
    3448:	88 27       	eor	r24, r24
    344a:	ee 58       	subi	r30, 0x8E	; 142
    344c:	ff 4f       	sbci	r31, 0xFF	; 255
    344e:	8f 4f       	sbci	r24, 0xFF	; 255
    3450:	0c 94 97 32 	jmp	0x652e	; 0x652e <__tablejump2__>
    3454:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3458:	e1 e7       	ldi	r30, 0x71	; 113
    345a:	f5 e0       	ldi	r31, 0x05	; 5
    345c:	98 2f       	mov	r25, r24
    345e:	92 95       	swap	r25
    3460:	9f 70       	andi	r25, 0x0F	; 15
    3462:	90 83       	st	Z, r25
    3464:	8f 70       	andi	r24, 0x0F	; 15
    3466:	81 83       	std	Z+1, r24	; 0x01
    3468:	d3 c0       	rjmp	.+422    	; 0x3610 <dataToNibbles+0x1e0>
    346a:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    346e:	80 31       	cpi	r24, 0x10	; 16
    3470:	20 f0       	brcs	.+8      	; 0x347a <dataToNibbles+0x4a>
    3472:	8f ef       	ldi	r24, 0xFF	; 255
    3474:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    3478:	cb c0       	rjmp	.+406    	; 0x3610 <dataToNibbles+0x1e0>
    347a:	8f 5f       	subi	r24, 0xFF	; 255
    347c:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    3480:	c7 c0       	rjmp	.+398    	; 0x3610 <dataToNibbles+0x1e0>
    3482:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3486:	88 23       	and	r24, r24
    3488:	34 f4       	brge	.+12     	; 0x3496 <dataToNibbles+0x66>
    348a:	e1 e7       	ldi	r30, 0x71	; 113
    348c:	f5 e0       	ldi	r31, 0x05	; 5
    348e:	10 82       	st	Z, r1
    3490:	8f ef       	ldi	r24, 0xFF	; 255
    3492:	81 83       	std	Z+1, r24	; 0x01
    3494:	bd c0       	rjmp	.+378    	; 0x3610 <dataToNibbles+0x1e0>
    3496:	10 92 72 05 	sts	0x0572, r1	; 0x800572 <nibble+0x1>
    349a:	08 c0       	rjmp	.+16     	; 0x34ac <dataToNibbles+0x7c>
    349c:	e1 e7       	ldi	r30, 0x71	; 113
    349e:	f5 e0       	ldi	r31, 0x05	; 5
    34a0:	91 81       	ldd	r25, Z+1	; 0x01
    34a2:	9f 5f       	subi	r25, 0xFF	; 255
    34a4:	91 83       	std	Z+1, r25	; 0x01
    34a6:	8c 50       	subi	r24, 0x0C	; 12
    34a8:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    34ac:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    34b0:	8c 30       	cpi	r24, 0x0C	; 12
    34b2:	a0 f7       	brcc	.-24     	; 0x349c <dataToNibbles+0x6c>
    34b4:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    34b8:	ab c0       	rjmp	.+342    	; 0x3610 <dataToNibbles+0x1e0>
    34ba:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    34be:	e1 e7       	ldi	r30, 0x71	; 113
    34c0:	f5 e0       	ldi	r31, 0x05	; 5
    34c2:	98 2f       	mov	r25, r24
    34c4:	92 95       	swap	r25
    34c6:	96 95       	lsr	r25
    34c8:	97 70       	andi	r25, 0x07	; 7
    34ca:	90 83       	st	Z, r25
    34cc:	8f 71       	andi	r24, 0x1F	; 31
    34ce:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    34d2:	11 82       	std	Z+1, r1	; 0x01
    34d4:	08 c0       	rjmp	.+16     	; 0x34e6 <dataToNibbles+0xb6>
    34d6:	e1 e7       	ldi	r30, 0x71	; 113
    34d8:	f5 e0       	ldi	r31, 0x05	; 5
    34da:	91 81       	ldd	r25, Z+1	; 0x01
    34dc:	9f 5f       	subi	r25, 0xFF	; 255
    34de:	91 83       	std	Z+1, r25	; 0x01
    34e0:	8a 50       	subi	r24, 0x0A	; 10
    34e2:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    34e6:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    34ea:	8a 30       	cpi	r24, 0x0A	; 10
    34ec:	a0 f7       	brcc	.-24     	; 0x34d6 <dataToNibbles+0xa6>
    34ee:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <nibble+0x2>
    34f2:	8e c0       	rjmp	.+284    	; 0x3610 <dataToNibbles+0x1e0>
    34f4:	e1 e7       	ldi	r30, 0x71	; 113
    34f6:	f5 e0       	ldi	r31, 0x05	; 5
    34f8:	10 82       	st	Z, r1
    34fa:	11 82       	std	Z+1, r1	; 0x01
    34fc:	08 c0       	rjmp	.+16     	; 0x350e <dataToNibbles+0xde>
    34fe:	e1 e7       	ldi	r30, 0x71	; 113
    3500:	f5 e0       	ldi	r31, 0x05	; 5
    3502:	90 81       	ld	r25, Z
    3504:	9f 5f       	subi	r25, 0xFF	; 255
    3506:	90 83       	st	Z, r25
    3508:	84 56       	subi	r24, 0x64	; 100
    350a:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    350e:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3512:	84 36       	cpi	r24, 0x64	; 100
    3514:	a0 f7       	brcc	.-24     	; 0x34fe <dataToNibbles+0xce>
    3516:	08 c0       	rjmp	.+16     	; 0x3528 <dataToNibbles+0xf8>
    3518:	e1 e7       	ldi	r30, 0x71	; 113
    351a:	f5 e0       	ldi	r31, 0x05	; 5
    351c:	91 81       	ldd	r25, Z+1	; 0x01
    351e:	9f 5f       	subi	r25, 0xFF	; 255
    3520:	91 83       	std	Z+1, r25	; 0x01
    3522:	8a 50       	subi	r24, 0x0A	; 10
    3524:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3528:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    352c:	8a 30       	cpi	r24, 0x0A	; 10
    352e:	a0 f7       	brcc	.-24     	; 0x3518 <dataToNibbles+0xe8>
    3530:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <nibble+0x2>
    3534:	6d c0       	rjmp	.+218    	; 0x3610 <dataToNibbles+0x1e0>
    3536:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    353a:	84 30       	cpi	r24, 0x04	; 4
    353c:	20 f0       	brcs	.+8      	; 0x3546 <dataToNibbles+0x116>
    353e:	8f ef       	ldi	r24, 0xFF	; 255
    3540:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    3544:	65 c0       	rjmp	.+202    	; 0x3610 <dataToNibbles+0x1e0>
    3546:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    354a:	62 c0       	rjmp	.+196    	; 0x3610 <dataToNibbles+0x1e0>
    354c:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3550:	84 30       	cpi	r24, 0x04	; 4
    3552:	20 f0       	brcs	.+8      	; 0x355c <dataToNibbles+0x12c>
    3554:	83 e0       	ldi	r24, 0x03	; 3
    3556:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    355a:	5a c0       	rjmp	.+180    	; 0x3610 <dataToNibbles+0x1e0>
    355c:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    3560:	57 c0       	rjmp	.+174    	; 0x3610 <dataToNibbles+0x1e0>
    3562:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3566:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    356a:	52 c0       	rjmp	.+164    	; 0x3610 <dataToNibbles+0x1e0>
    356c:	e9 2f       	mov	r30, r25
    356e:	f0 e0       	ldi	r31, 0x00	; 0
    3570:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3574:	28 2f       	mov	r18, r24
    3576:	22 1f       	adc	r18, r18
    3578:	22 27       	eor	r18, r18
    357a:	22 1f       	adc	r18, r18
    357c:	ef 58       	subi	r30, 0x8F	; 143
    357e:	fa 4f       	sbci	r31, 0xFA	; 250
    3580:	20 83       	st	Z, r18
    3582:	88 0f       	add	r24, r24
    3584:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3588:	9f 5f       	subi	r25, 0xFF	; 255
    358a:	01 c0       	rjmp	.+2      	; 0x358e <dataToNibbles+0x15e>
    358c:	90 e0       	ldi	r25, 0x00	; 0
    358e:	98 30       	cpi	r25, 0x08	; 8
    3590:	68 f3       	brcs	.-38     	; 0x356c <dataToNibbles+0x13c>
    3592:	3e c0       	rjmp	.+124    	; 0x3610 <dataToNibbles+0x1e0>
    3594:	82 50       	subi	r24, 0x02	; 2
    3596:	f0 e0       	ldi	r31, 0x00	; 0
    3598:	de 01       	movw	r26, r28
    359a:	9d 91       	ld	r25, X+
    359c:	ef 58       	subi	r30, 0x8F	; 143
    359e:	fa 4f       	sbci	r31, 0xFA	; 250
    35a0:	9f 70       	andi	r25, 0x0F	; 15
    35a2:	90 83       	st	Z, r25
    35a4:	e8 2f       	mov	r30, r24
    35a6:	f0 e0       	ldi	r31, 0x00	; 0
    35a8:	98 81       	ld	r25, Y
    35aa:	ef 58       	subi	r30, 0x8F	; 143
    35ac:	fa 4f       	sbci	r31, 0xFA	; 250
    35ae:	92 95       	swap	r25
    35b0:	9f 70       	andi	r25, 0x0F	; 15
    35b2:	90 83       	st	Z, r25
    35b4:	ed 01       	movw	r28, r26
    35b6:	03 c0       	rjmp	.+6      	; 0x35be <dataToNibbles+0x18e>
    35b8:	cf e4       	ldi	r28, 0x4F	; 79
    35ba:	d5 e0       	ldi	r29, 0x05	; 5
    35bc:	88 e0       	ldi	r24, 0x08	; 8
    35be:	ef ef       	ldi	r30, 0xFF	; 255
    35c0:	e8 0f       	add	r30, r24
    35c2:	81 11       	cpse	r24, r1
    35c4:	e7 cf       	rjmp	.-50     	; 0x3594 <dataToNibbles+0x164>
    35c6:	24 c0       	rjmp	.+72     	; 0x3610 <dataToNibbles+0x1e0>
    35c8:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    35cc:	e1 e7       	ldi	r30, 0x71	; 113
    35ce:	f5 e0       	ldi	r31, 0x05	; 5
    35d0:	98 2f       	mov	r25, r24
    35d2:	97 70       	andi	r25, 0x07	; 7
    35d4:	9f 5f       	subi	r25, 0xFF	; 255
    35d6:	90 83       	st	Z, r25
    35d8:	86 95       	lsr	r24
    35da:	86 95       	lsr	r24
    35dc:	86 95       	lsr	r24
    35de:	8f 5f       	subi	r24, 0xFF	; 255
    35e0:	81 83       	std	Z+1, r24	; 0x01
    35e2:	16 c0       	rjmp	.+44     	; 0x3610 <dataToNibbles+0x1e0>
    35e4:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    35e8:	8f 5f       	subi	r24, 0xFF	; 255
    35ea:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    35ee:	10 92 71 05 	sts	0x0571, r1	; 0x800571 <nibble>
    35f2:	08 c0       	rjmp	.+16     	; 0x3604 <dataToNibbles+0x1d4>
    35f4:	e1 e7       	ldi	r30, 0x71	; 113
    35f6:	f5 e0       	ldi	r31, 0x05	; 5
    35f8:	90 81       	ld	r25, Z
    35fa:	9f 5f       	subi	r25, 0xFF	; 255
    35fc:	90 83       	st	Z, r25
    35fe:	8a 50       	subi	r24, 0x0A	; 10
    3600:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3604:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    3608:	8a 30       	cpi	r24, 0x0A	; 10
    360a:	a0 f7       	brcc	.-24     	; 0x35f4 <dataToNibbles+0x1c4>
    360c:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <nibble+0x1>
    3610:	df 91       	pop	r29
    3612:	cf 91       	pop	r28
    3614:	08 95       	ret

00003616 <nibbleToLCDstring>:
    3616:	0f 93       	push	r16
    3618:	1f 93       	push	r17
    361a:	cf 93       	push	r28
    361c:	df 93       	push	r29
    361e:	e0 91 22 05 	lds	r30, 0x0522	; 0x800522 <dataType>
    3622:	8e 2f       	mov	r24, r30
    3624:	90 e0       	ldi	r25, 0x00	; 0
    3626:	fc 01       	movw	r30, r24
    3628:	32 97       	sbiw	r30, 0x02	; 2
    362a:	ed 30       	cpi	r30, 0x0D	; 13
    362c:	f1 05       	cpc	r31, r1
    362e:	08 f0       	brcs	.+2      	; 0x3632 <nibbleToLCDstring+0x1c>
    3630:	3b c1       	rjmp	.+630    	; 0x38a8 <nibbleToLCDstring+0x292>
    3632:	88 27       	eor	r24, r24
    3634:	e1 58       	subi	r30, 0x81	; 129
    3636:	ff 4f       	sbci	r31, 0xFF	; 255
    3638:	8f 4f       	sbci	r24, 0xFF	; 255
    363a:	0c 94 97 32 	jmp	0x652e	; 0x652e <__tablejump2__>
    363e:	01 e7       	ldi	r16, 0x71	; 113
    3640:	15 e0       	ldi	r17, 0x05	; 5
    3642:	f8 01       	movw	r30, r16
    3644:	80 81       	ld	r24, Z
    3646:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    364a:	c3 e2       	ldi	r28, 0x23	; 35
    364c:	d2 e0       	ldi	r29, 0x02	; 2
    364e:	88 83       	st	Y, r24
    3650:	f8 01       	movw	r30, r16
    3652:	81 81       	ldd	r24, Z+1	; 0x01
    3654:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3658:	89 83       	std	Y+1, r24	; 0x01
    365a:	1a 82       	std	Y+2, r1	; 0x02
    365c:	25 c1       	rjmp	.+586    	; 0x38a8 <nibbleToLCDstring+0x292>
    365e:	e3 e2       	ldi	r30, 0x23	; 35
    3660:	f2 e0       	ldi	r31, 0x02	; 2
    3662:	83 e4       	ldi	r24, 0x43	; 67
    3664:	80 83       	st	Z, r24
    3666:	88 e6       	ldi	r24, 0x68	; 104
    3668:	81 83       	std	Z+1, r24	; 0x01
    366a:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    366e:	8f 3f       	cpi	r24, 0xFF	; 255
    3670:	29 f4       	brne	.+10     	; 0x367c <nibbleToLCDstring+0x66>
    3672:	80 e2       	ldi	r24, 0x20	; 32
    3674:	82 83       	std	Z+2, r24	; 0x02
    3676:	8d e2       	ldi	r24, 0x2D	; 45
    3678:	83 83       	std	Z+3, r24	; 0x03
    367a:	12 c0       	rjmp	.+36     	; 0x36a0 <nibbleToLCDstring+0x8a>
    367c:	8a 30       	cpi	r24, 0x0A	; 10
    367e:	48 f0       	brcs	.+18     	; 0x3692 <nibbleToLCDstring+0x7c>
    3680:	c3 e2       	ldi	r28, 0x23	; 35
    3682:	d2 e0       	ldi	r29, 0x02	; 2
    3684:	91 e3       	ldi	r25, 0x31	; 49
    3686:	9a 83       	std	Y+2, r25	; 0x02
    3688:	8a 50       	subi	r24, 0x0A	; 10
    368a:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    368e:	8b 83       	std	Y+3, r24	; 0x03
    3690:	07 c0       	rjmp	.+14     	; 0x36a0 <nibbleToLCDstring+0x8a>
    3692:	c3 e2       	ldi	r28, 0x23	; 35
    3694:	d2 e0       	ldi	r29, 0x02	; 2
    3696:	90 e3       	ldi	r25, 0x30	; 48
    3698:	9a 83       	std	Y+2, r25	; 0x02
    369a:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    369e:	8b 83       	std	Y+3, r24	; 0x03
    36a0:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <lcdData+0x4>
    36a4:	01 c1       	rjmp	.+514    	; 0x38a8 <nibbleToLCDstring+0x292>
    36a6:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    36aa:	8f 3f       	cpi	r24, 0xFF	; 255
    36ac:	21 f0       	breq	.+8      	; 0x36b6 <nibbleToLCDstring+0xa0>
    36ae:	90 91 72 05 	lds	r25, 0x0572	; 0x800572 <nibble+0x1>
    36b2:	9f 3f       	cpi	r25, 0xFF	; 255
    36b4:	59 f4       	brne	.+22     	; 0x36cc <nibbleToLCDstring+0xb6>
    36b6:	e3 e2       	ldi	r30, 0x23	; 35
    36b8:	f2 e0       	ldi	r31, 0x02	; 2
    36ba:	8e e6       	ldi	r24, 0x6E	; 110
    36bc:	80 83       	st	Z, r24
    36be:	9f e6       	ldi	r25, 0x6F	; 111
    36c0:	91 83       	std	Z+1, r25	; 0x01
    36c2:	82 83       	std	Z+2, r24	; 0x02
    36c4:	85 e6       	ldi	r24, 0x65	; 101
    36c6:	83 83       	std	Z+3, r24	; 0x03
    36c8:	14 82       	std	Z+4, r1	; 0x04
    36ca:	ee c0       	rjmp	.+476    	; 0x38a8 <nibbleToLCDstring+0x292>
    36cc:	9f e5       	ldi	r25, 0x5F	; 95
    36ce:	90 93 24 02 	sts	0x0224, r25	; 0x800224 <lcdData+0x1>
    36d2:	8b 30       	cpi	r24, 0x0B	; 11
    36d4:	21 f4       	brne	.+8      	; 0x36de <nibbleToLCDstring+0xc8>
    36d6:	88 e4       	ldi	r24, 0x48	; 72
    36d8:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <lcdData>
    36dc:	20 c0       	rjmp	.+64     	; 0x371e <nibbleToLCDstring+0x108>
    36de:	85 30       	cpi	r24, 0x05	; 5
    36e0:	58 f4       	brcc	.+22     	; 0x36f8 <nibbleToLCDstring+0xe2>
    36e2:	98 2f       	mov	r25, r24
    36e4:	96 95       	lsr	r25
    36e6:	9d 5b       	subi	r25, 0xBD	; 189
    36e8:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <lcdData>
    36ec:	80 ff       	sbrs	r24, 0
    36ee:	17 c0       	rjmp	.+46     	; 0x371e <nibbleToLCDstring+0x108>
    36f0:	83 e2       	ldi	r24, 0x23	; 35
    36f2:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <lcdData+0x1>
    36f6:	13 c0       	rjmp	.+38     	; 0x371e <nibbleToLCDstring+0x108>
    36f8:	28 2f       	mov	r18, r24
    36fa:	30 e0       	ldi	r19, 0x00	; 0
    36fc:	25 50       	subi	r18, 0x05	; 5
    36fe:	31 09       	sbc	r19, r1
    3700:	35 95       	asr	r19
    3702:	27 95       	ror	r18
    3704:	2a 5b       	subi	r18, 0xBA	; 186
    3706:	20 93 23 02 	sts	0x0223, r18	; 0x800223 <lcdData>
    370a:	80 fd       	sbrc	r24, 0
    370c:	03 c0       	rjmp	.+6      	; 0x3714 <nibbleToLCDstring+0xfe>
    370e:	83 e2       	ldi	r24, 0x23	; 35
    3710:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <lcdData+0x1>
    3714:	28 34       	cpi	r18, 0x48	; 72
    3716:	19 f4       	brne	.+6      	; 0x371e <nibbleToLCDstring+0x108>
    3718:	81 e4       	ldi	r24, 0x41	; 65
    371a:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <lcdData>
    371e:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <nibble+0x1>
    3722:	81 11       	cpse	r24, r1
    3724:	04 c0       	rjmp	.+8      	; 0x372e <nibbleToLCDstring+0x118>
    3726:	8d e6       	ldi	r24, 0x6D	; 109
    3728:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <lcdData+0x2>
    372c:	0b c0       	rjmp	.+22     	; 0x3744 <nibbleToLCDstring+0x12e>
    372e:	8c 30       	cpi	r24, 0x0C	; 12
    3730:	30 f4       	brcc	.+12     	; 0x373e <nibbleToLCDstring+0x128>
    3732:	81 50       	subi	r24, 0x01	; 1
    3734:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3738:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <lcdData+0x2>
    373c:	03 c0       	rjmp	.+6      	; 0x3744 <nibbleToLCDstring+0x12e>
    373e:	8d e2       	ldi	r24, 0x2D	; 45
    3740:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <lcdData+0x2>
    3744:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <lcdData+0x3>
    3748:	af c0       	rjmp	.+350    	; 0x38a8 <nibbleToLCDstring+0x292>
    374a:	c3 e2       	ldi	r28, 0x23	; 35
    374c:	d2 e0       	ldi	r29, 0x02	; 2
    374e:	8d e4       	ldi	r24, 0x4D	; 77
    3750:	88 83       	st	Y, r24
    3752:	01 e7       	ldi	r16, 0x71	; 113
    3754:	15 e0       	ldi	r17, 0x05	; 5
    3756:	f8 01       	movw	r30, r16
    3758:	80 81       	ld	r24, Z
    375a:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    375e:	89 83       	std	Y+1, r24	; 0x01
    3760:	82 e4       	ldi	r24, 0x42	; 66
    3762:	8a 83       	std	Y+2, r24	; 0x02
    3764:	f8 01       	movw	r30, r16
    3766:	81 81       	ldd	r24, Z+1	; 0x01
    3768:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    376c:	8b 83       	std	Y+3, r24	; 0x03
    376e:	f8 01       	movw	r30, r16
    3770:	82 81       	ldd	r24, Z+2	; 0x02
    3772:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3776:	8c 83       	std	Y+4, r24	; 0x04
    3778:	1d 82       	std	Y+5, r1	; 0x05
    377a:	96 c0       	rjmp	.+300    	; 0x38a8 <nibbleToLCDstring+0x292>
    377c:	01 e7       	ldi	r16, 0x71	; 113
    377e:	15 e0       	ldi	r17, 0x05	; 5
    3780:	f8 01       	movw	r30, r16
    3782:	80 81       	ld	r24, Z
    3784:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3788:	c3 e2       	ldi	r28, 0x23	; 35
    378a:	d2 e0       	ldi	r29, 0x02	; 2
    378c:	88 83       	st	Y, r24
    378e:	f8 01       	movw	r30, r16
    3790:	81 81       	ldd	r24, Z+1	; 0x01
    3792:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3796:	89 83       	std	Y+1, r24	; 0x01
    3798:	f8 01       	movw	r30, r16
    379a:	82 81       	ldd	r24, Z+2	; 0x02
    379c:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    37a0:	8a 83       	std	Y+2, r24	; 0x02
    37a2:	1b 82       	std	Y+3, r1	; 0x03
    37a4:	81 c0       	rjmp	.+258    	; 0x38a8 <nibbleToLCDstring+0x292>
    37a6:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    37aa:	83 30       	cpi	r24, 0x03	; 3
    37ac:	38 f4       	brcc	.+14     	; 0x37bc <nibbleToLCDstring+0x1a6>
    37ae:	e3 e2       	ldi	r30, 0x23	; 35
    37b0:	f2 e0       	ldi	r31, 0x02	; 2
    37b2:	93 e3       	ldi	r25, 0x33	; 51
    37b4:	98 1b       	sub	r25, r24
    37b6:	90 83       	st	Z, r25
    37b8:	11 82       	std	Z+1, r1	; 0x01
    37ba:	76 c0       	rjmp	.+236    	; 0x38a8 <nibbleToLCDstring+0x292>
    37bc:	83 30       	cpi	r24, 0x03	; 3
    37be:	31 f4       	brne	.+12     	; 0x37cc <nibbleToLCDstring+0x1b6>
    37c0:	e3 e2       	ldi	r30, 0x23	; 35
    37c2:	f2 e0       	ldi	r31, 0x02	; 2
    37c4:	80 e5       	ldi	r24, 0x50	; 80
    37c6:	80 83       	st	Z, r24
    37c8:	11 82       	std	Z+1, r1	; 0x01
    37ca:	6e c0       	rjmp	.+220    	; 0x38a8 <nibbleToLCDstring+0x292>
    37cc:	e3 e2       	ldi	r30, 0x23	; 35
    37ce:	f2 e0       	ldi	r31, 0x02	; 2
    37d0:	8d e2       	ldi	r24, 0x2D	; 45
    37d2:	80 83       	st	Z, r24
    37d4:	11 82       	std	Z+1, r1	; 0x01
    37d6:	68 c0       	rjmp	.+208    	; 0x38a8 <nibbleToLCDstring+0x292>
    37d8:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    37dc:	e3 e2       	ldi	r30, 0x23	; 35
    37de:	f2 e0       	ldi	r31, 0x02	; 2
    37e0:	80 5d       	subi	r24, 0xD0	; 208
    37e2:	80 83       	st	Z, r24
    37e4:	11 82       	std	Z+1, r1	; 0x01
    37e6:	60 c0       	rjmp	.+192    	; 0x38a8 <nibbleToLCDstring+0x292>
    37e8:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    37ec:	81 11       	cpse	r24, r1
    37ee:	09 c0       	rjmp	.+18     	; 0x3802 <nibbleToLCDstring+0x1ec>
    37f0:	e3 e2       	ldi	r30, 0x23	; 35
    37f2:	f2 e0       	ldi	r31, 0x02	; 2
    37f4:	81 e4       	ldi	r24, 0x41	; 65
    37f6:	80 83       	st	Z, r24
    37f8:	85 e7       	ldi	r24, 0x75	; 117
    37fa:	81 83       	std	Z+1, r24	; 0x01
    37fc:	83 e7       	ldi	r24, 0x73	; 115
    37fe:	82 83       	std	Z+2, r24	; 0x02
    3800:	08 c0       	rjmp	.+16     	; 0x3812 <nibbleToLCDstring+0x1fc>
    3802:	e3 e2       	ldi	r30, 0x23	; 35
    3804:	f2 e0       	ldi	r31, 0x02	; 2
    3806:	85 e4       	ldi	r24, 0x45	; 69
    3808:	80 83       	st	Z, r24
    380a:	89 e6       	ldi	r24, 0x69	; 105
    380c:	81 83       	std	Z+1, r24	; 0x01
    380e:	8e e6       	ldi	r24, 0x6E	; 110
    3810:	82 83       	std	Z+2, r24	; 0x02
    3812:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <lcdData+0x3>
    3816:	48 c0       	rjmp	.+144    	; 0x38a8 <nibbleToLCDstring+0x292>
    3818:	c1 2f       	mov	r28, r17
    381a:	d0 e0       	ldi	r29, 0x00	; 0
    381c:	fe 01       	movw	r30, r28
    381e:	ef 58       	subi	r30, 0x8F	; 143
    3820:	fa 4f       	sbci	r31, 0xFA	; 250
    3822:	80 81       	ld	r24, Z
    3824:	0e 94 b4 2f 	call	0x5f68	; 0x5f68 <nibbleToChr>
    3828:	cd 5d       	subi	r28, 0xDD	; 221
    382a:	dd 4f       	sbci	r29, 0xFD	; 253
    382c:	88 83       	st	Y, r24
    382e:	1f 5f       	subi	r17, 0xFF	; 255
    3830:	01 c0       	rjmp	.+2      	; 0x3834 <nibbleToLCDstring+0x21e>
    3832:	10 e0       	ldi	r17, 0x00	; 0
    3834:	18 30       	cpi	r17, 0x08	; 8
    3836:	80 f3       	brcs	.-32     	; 0x3818 <nibbleToLCDstring+0x202>
    3838:	37 c0       	rjmp	.+110    	; 0x38a8 <nibbleToLCDstring+0x292>
    383a:	82 2f       	mov	r24, r18
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	fc 01       	movw	r30, r24
    3840:	ef 58       	subi	r30, 0x8F	; 143
    3842:	fa 4f       	sbci	r31, 0xFA	; 250
    3844:	30 81       	ld	r19, Z
    3846:	31 11       	cpse	r19, r1
    3848:	02 c0       	rjmp	.+4      	; 0x384e <nibbleToLCDstring+0x238>
    384a:	3f e6       	ldi	r19, 0x6F	; 111
    384c:	01 c0       	rjmp	.+2      	; 0x3850 <nibbleToLCDstring+0x23a>
    384e:	39 e4       	ldi	r19, 0x49	; 73
    3850:	fc 01       	movw	r30, r24
    3852:	ed 5d       	subi	r30, 0xDD	; 221
    3854:	fd 4f       	sbci	r31, 0xFD	; 253
    3856:	30 83       	st	Z, r19
    3858:	2f 5f       	subi	r18, 0xFF	; 255
    385a:	01 c0       	rjmp	.+2      	; 0x385e <nibbleToLCDstring+0x248>
    385c:	20 e0       	ldi	r18, 0x00	; 0
    385e:	28 30       	cpi	r18, 0x08	; 8
    3860:	60 f3       	brcs	.-40     	; 0x383a <nibbleToLCDstring+0x224>
    3862:	22 c0       	rjmp	.+68     	; 0x38a8 <nibbleToLCDstring+0x292>
    3864:	a1 e7       	ldi	r26, 0x71	; 113
    3866:	b5 e0       	ldi	r27, 0x05	; 5
    3868:	8c 91       	ld	r24, X
    386a:	e3 e2       	ldi	r30, 0x23	; 35
    386c:	f2 e0       	ldi	r31, 0x02	; 2
    386e:	80 5d       	subi	r24, 0xD0	; 208
    3870:	80 83       	st	Z, r24
    3872:	11 96       	adiw	r26, 0x01	; 1
    3874:	8c 91       	ld	r24, X
    3876:	80 5c       	subi	r24, 0xC0	; 192
    3878:	81 83       	std	Z+1, r24	; 0x01
    387a:	12 82       	std	Z+2, r1	; 0x02
    387c:	15 c0       	rjmp	.+42     	; 0x38a8 <nibbleToLCDstring+0x292>
    387e:	e1 e7       	ldi	r30, 0x71	; 113
    3880:	f5 e0       	ldi	r31, 0x05	; 5
    3882:	90 81       	ld	r25, Z
    3884:	81 81       	ldd	r24, Z+1	; 0x01
    3886:	29 2f       	mov	r18, r25
    3888:	28 2b       	or	r18, r24
    388a:	31 f4       	brne	.+12     	; 0x3898 <nibbleToLCDstring+0x282>
    388c:	e3 e2       	ldi	r30, 0x23	; 35
    388e:	f2 e0       	ldi	r31, 0x02	; 2
    3890:	8d e2       	ldi	r24, 0x2D	; 45
    3892:	80 83       	st	Z, r24
    3894:	81 83       	std	Z+1, r24	; 0x01
    3896:	06 c0       	rjmp	.+12     	; 0x38a4 <nibbleToLCDstring+0x28e>
    3898:	e3 e2       	ldi	r30, 0x23	; 35
    389a:	f2 e0       	ldi	r31, 0x02	; 2
    389c:	90 5d       	subi	r25, 0xD0	; 208
    389e:	90 83       	st	Z, r25
    38a0:	80 5d       	subi	r24, 0xD0	; 208
    38a2:	81 83       	std	Z+1, r24	; 0x01
    38a4:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <lcdData+0x2>
    38a8:	df 91       	pop	r29
    38aa:	cf 91       	pop	r28
    38ac:	1f 91       	pop	r17
    38ae:	0f 91       	pop	r16
    38b0:	08 95       	ret

000038b2 <LCDStringOut>:
    38b2:	0f 93       	push	r16
    38b4:	1f 93       	push	r17
    38b6:	cf 93       	push	r28
    38b8:	8e e1       	ldi	r24, 0x1E	; 30
    38ba:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    38be:	c0 e0       	ldi	r28, 0x00	; 0
    38c0:	03 e2       	ldi	r16, 0x23	; 35
    38c2:	12 e0       	ldi	r17, 0x02	; 2
    38c4:	0b c0       	rjmp	.+22     	; 0x38dc <LCDStringOut+0x2a>
    38c6:	f8 01       	movw	r30, r16
    38c8:	80 81       	ld	r24, Z
    38ca:	88 23       	and	r24, r24
    38cc:	19 f0       	breq	.+6      	; 0x38d4 <LCDStringOut+0x22>
    38ce:	0f 5f       	subi	r16, 0xFF	; 255
    38d0:	1f 4f       	sbci	r17, 0xFF	; 255
    38d2:	01 c0       	rjmp	.+2      	; 0x38d6 <LCDStringOut+0x24>
    38d4:	80 e2       	ldi	r24, 0x20	; 32
    38d6:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    38da:	cf 5f       	subi	r28, 0xFF	; 255
    38dc:	ca 30       	cpi	r28, 0x0A	; 10
    38de:	98 f3       	brcs	.-26     	; 0x38c6 <LCDStringOut+0x14>
    38e0:	cf 91       	pop	r28
    38e2:	1f 91       	pop	r17
    38e4:	0f 91       	pop	r16
    38e6:	08 95       	ret

000038e8 <nibbleCheckOvfl>:
    38e8:	8a 30       	cpi	r24, 0x0A	; 10
    38ea:	1c f4       	brge	.+6      	; 0x38f2 <nibbleCheckOvfl+0xa>
    38ec:	88 23       	and	r24, r24
    38ee:	1c f0       	brlt	.+6      	; 0x38f6 <nibbleCheckOvfl+0xe>
    38f0:	08 95       	ret
    38f2:	80 e0       	ldi	r24, 0x00	; 0
    38f4:	08 95       	ret
    38f6:	89 e0       	ldi	r24, 0x09	; 9
    38f8:	08 95       	ret

000038fa <nibbleChange>:
    38fa:	0f 93       	push	r16
    38fc:	1f 93       	push	r17
    38fe:	cf 93       	push	r28
    3900:	df 93       	push	r29
    3902:	c8 2f       	mov	r28, r24
    3904:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    3908:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    390c:	31 96       	adiw	r30, 0x01	; 1
    390e:	84 91       	lpm	r24, Z
    3910:	28 2f       	mov	r18, r24
    3912:	20 71       	andi	r18, 0x10	; 16
    3914:	e0 91 22 05 	lds	r30, 0x0522	; 0x800522 <dataType>
    3918:	8e 2f       	mov	r24, r30
    391a:	90 e0       	ldi	r25, 0x00	; 0
    391c:	fc 01       	movw	r30, r24
    391e:	32 97       	sbiw	r30, 0x02	; 2
    3920:	ed 30       	cpi	r30, 0x0D	; 13
    3922:	f1 05       	cpc	r31, r1
    3924:	08 f0       	brcs	.+2      	; 0x3928 <nibbleChange+0x2e>
    3926:	92 c1       	rjmp	.+804    	; 0x3c4c <nibbleChange+0x352>
    3928:	88 27       	eor	r24, r24
    392a:	e4 57       	subi	r30, 0x74	; 116
    392c:	ff 4f       	sbci	r31, 0xFF	; 255
    392e:	8f 4f       	sbci	r24, 0xFF	; 255
    3930:	0c 94 97 32 	jmp	0x652e	; 0x652e <__tablejump2__>
    3934:	d0 e0       	ldi	r29, 0x00	; 0
    3936:	cf 58       	subi	r28, 0x8F	; 143
    3938:	da 4f       	sbci	r29, 0xFA	; 250
    393a:	88 81       	ld	r24, Y
    393c:	68 0f       	add	r22, r24
    393e:	6f 70       	andi	r22, 0x0F	; 15
    3940:	68 83       	st	Y, r22
    3942:	84 c1       	rjmp	.+776    	; 0x3c4c <nibbleChange+0x352>
    3944:	21 11       	cpse	r18, r1
    3946:	1a c0       	rjmp	.+52     	; 0x397c <nibbleChange+0x82>
    3948:	61 30       	cpi	r22, 0x01	; 1
    394a:	41 f4       	brne	.+16     	; 0x395c <nibbleChange+0x62>
    394c:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3950:	80 31       	cpi	r24, 0x10	; 16
    3952:	21 f4       	brne	.+8      	; 0x395c <nibbleChange+0x62>
    3954:	81 e0       	ldi	r24, 0x01	; 1
    3956:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    395a:	78 c1       	rjmp	.+752    	; 0x3c4c <nibbleChange+0x352>
    395c:	6f 3f       	cpi	r22, 0xFF	; 255
    395e:	41 f4       	brne	.+16     	; 0x3970 <nibbleChange+0x76>
    3960:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3964:	81 30       	cpi	r24, 0x01	; 1
    3966:	21 f4       	brne	.+8      	; 0x3970 <nibbleChange+0x76>
    3968:	80 e1       	ldi	r24, 0x10	; 16
    396a:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    396e:	6e c1       	rjmp	.+732    	; 0x3c4c <nibbleChange+0x352>
    3970:	e1 e7       	ldi	r30, 0x71	; 113
    3972:	f5 e0       	ldi	r31, 0x05	; 5
    3974:	80 81       	ld	r24, Z
    3976:	68 0f       	add	r22, r24
    3978:	60 83       	st	Z, r22
    397a:	68 c1       	rjmp	.+720    	; 0x3c4c <nibbleChange+0x352>
    397c:	61 30       	cpi	r22, 0x01	; 1
    397e:	41 f4       	brne	.+16     	; 0x3990 <nibbleChange+0x96>
    3980:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3984:	80 31       	cpi	r24, 0x10	; 16
    3986:	21 f4       	brne	.+8      	; 0x3990 <nibbleChange+0x96>
    3988:	8f ef       	ldi	r24, 0xFF	; 255
    398a:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    398e:	5e c1       	rjmp	.+700    	; 0x3c4c <nibbleChange+0x352>
    3990:	61 30       	cpi	r22, 0x01	; 1
    3992:	41 f4       	brne	.+16     	; 0x39a4 <nibbleChange+0xaa>
    3994:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3998:	8f 3f       	cpi	r24, 0xFF	; 255
    399a:	21 f4       	brne	.+8      	; 0x39a4 <nibbleChange+0xaa>
    399c:	81 e0       	ldi	r24, 0x01	; 1
    399e:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    39a2:	54 c1       	rjmp	.+680    	; 0x3c4c <nibbleChange+0x352>
    39a4:	6f 3f       	cpi	r22, 0xFF	; 255
    39a6:	41 f4       	brne	.+16     	; 0x39b8 <nibbleChange+0xbe>
    39a8:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    39ac:	8f 3f       	cpi	r24, 0xFF	; 255
    39ae:	21 f4       	brne	.+8      	; 0x39b8 <nibbleChange+0xbe>
    39b0:	80 e1       	ldi	r24, 0x10	; 16
    39b2:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    39b6:	4a c1       	rjmp	.+660    	; 0x3c4c <nibbleChange+0x352>
    39b8:	6f 3f       	cpi	r22, 0xFF	; 255
    39ba:	41 f4       	brne	.+16     	; 0x39cc <nibbleChange+0xd2>
    39bc:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    39c0:	81 30       	cpi	r24, 0x01	; 1
    39c2:	21 f4       	brne	.+8      	; 0x39cc <nibbleChange+0xd2>
    39c4:	8f ef       	ldi	r24, 0xFF	; 255
    39c6:	80 93 71 05 	sts	0x0571, r24	; 0x800571 <nibble>
    39ca:	40 c1       	rjmp	.+640    	; 0x3c4c <nibbleChange+0x352>
    39cc:	e1 e7       	ldi	r30, 0x71	; 113
    39ce:	f5 e0       	ldi	r31, 0x05	; 5
    39d0:	80 81       	ld	r24, Z
    39d2:	68 0f       	add	r22, r24
    39d4:	60 83       	st	Z, r22
    39d6:	3a c1       	rjmp	.+628    	; 0x3c4c <nibbleChange+0x352>
    39d8:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <nibble+0x1>
    39dc:	8f 3f       	cpi	r24, 0xFF	; 255
    39de:	09 f4       	brne	.+2      	; 0x39e2 <nibbleChange+0xe8>
    39e0:	c1 e0       	ldi	r28, 0x01	; 1
    39e2:	c1 11       	cpse	r28, r1
    39e4:	16 c0       	rjmp	.+44     	; 0x3a12 <nibbleChange+0x118>
    39e6:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    39ea:	8c 30       	cpi	r24, 0x0C	; 12
    39ec:	50 f4       	brcc	.+20     	; 0x3a02 <nibbleChange+0x108>
    39ee:	8b 30       	cpi	r24, 0x0B	; 11
    39f0:	11 f4       	brne	.+4      	; 0x39f6 <nibbleChange+0xfc>
    39f2:	61 30       	cpi	r22, 0x01	; 1
    39f4:	41 f0       	breq	.+16     	; 0x3a06 <nibbleChange+0x10c>
    39f6:	81 11       	cpse	r24, r1
    39f8:	02 c0       	rjmp	.+4      	; 0x39fe <nibbleChange+0x104>
    39fa:	6f 3f       	cpi	r22, 0xFF	; 255
    39fc:	31 f0       	breq	.+12     	; 0x3a0a <nibbleChange+0x110>
    39fe:	68 0f       	add	r22, r24
    3a00:	05 c0       	rjmp	.+10     	; 0x3a0c <nibbleChange+0x112>
    3a02:	60 e0       	ldi	r22, 0x00	; 0
    3a04:	03 c0       	rjmp	.+6      	; 0x3a0c <nibbleChange+0x112>
    3a06:	60 e0       	ldi	r22, 0x00	; 0
    3a08:	01 c0       	rjmp	.+2      	; 0x3a0c <nibbleChange+0x112>
    3a0a:	6b e0       	ldi	r22, 0x0B	; 11
    3a0c:	60 93 71 05 	sts	0x0571, r22	; 0x800571 <nibble>
    3a10:	2b c0       	rjmp	.+86     	; 0x3a68 <nibbleChange+0x16e>
    3a12:	21 11       	cpse	r18, r1
    3a14:	0a c0       	rjmp	.+20     	; 0x3a2a <nibbleChange+0x130>
    3a16:	81 11       	cpse	r24, r1
    3a18:	02 c0       	rjmp	.+4      	; 0x3a1e <nibbleChange+0x124>
    3a1a:	6f 3f       	cpi	r22, 0xFF	; 255
    3a1c:	c1 f0       	breq	.+48     	; 0x3a4e <nibbleChange+0x154>
    3a1e:	8a 30       	cpi	r24, 0x0A	; 10
    3a20:	11 f4       	brne	.+4      	; 0x3a26 <nibbleChange+0x12c>
    3a22:	61 30       	cpi	r22, 0x01	; 1
    3a24:	b1 f0       	breq	.+44     	; 0x3a52 <nibbleChange+0x158>
    3a26:	68 0f       	add	r22, r24
    3a28:	1d c0       	rjmp	.+58     	; 0x3a64 <nibbleChange+0x16a>
    3a2a:	81 11       	cpse	r24, r1
    3a2c:	02 c0       	rjmp	.+4      	; 0x3a32 <nibbleChange+0x138>
    3a2e:	6f 3f       	cpi	r22, 0xFF	; 255
    3a30:	91 f0       	breq	.+36     	; 0x3a56 <nibbleChange+0x15c>
    3a32:	8a 30       	cpi	r24, 0x0A	; 10
    3a34:	11 f4       	brne	.+4      	; 0x3a3a <nibbleChange+0x140>
    3a36:	61 30       	cpi	r22, 0x01	; 1
    3a38:	81 f0       	breq	.+32     	; 0x3a5a <nibbleChange+0x160>
    3a3a:	8f 3f       	cpi	r24, 0xFF	; 255
    3a3c:	11 f4       	brne	.+4      	; 0x3a42 <nibbleChange+0x148>
    3a3e:	61 30       	cpi	r22, 0x01	; 1
    3a40:	71 f0       	breq	.+28     	; 0x3a5e <nibbleChange+0x164>
    3a42:	8f 3f       	cpi	r24, 0xFF	; 255
    3a44:	11 f4       	brne	.+4      	; 0x3a4a <nibbleChange+0x150>
    3a46:	6f 3f       	cpi	r22, 0xFF	; 255
    3a48:	61 f0       	breq	.+24     	; 0x3a62 <nibbleChange+0x168>
    3a4a:	68 0f       	add	r22, r24
    3a4c:	0b c0       	rjmp	.+22     	; 0x3a64 <nibbleChange+0x16a>
    3a4e:	6a e0       	ldi	r22, 0x0A	; 10
    3a50:	09 c0       	rjmp	.+18     	; 0x3a64 <nibbleChange+0x16a>
    3a52:	60 e0       	ldi	r22, 0x00	; 0
    3a54:	07 c0       	rjmp	.+14     	; 0x3a64 <nibbleChange+0x16a>
    3a56:	6f ef       	ldi	r22, 0xFF	; 255
    3a58:	05 c0       	rjmp	.+10     	; 0x3a64 <nibbleChange+0x16a>
    3a5a:	6f ef       	ldi	r22, 0xFF	; 255
    3a5c:	03 c0       	rjmp	.+6      	; 0x3a64 <nibbleChange+0x16a>
    3a5e:	60 e0       	ldi	r22, 0x00	; 0
    3a60:	01 c0       	rjmp	.+2      	; 0x3a64 <nibbleChange+0x16a>
    3a62:	6a e0       	ldi	r22, 0x0A	; 10
    3a64:	60 93 72 05 	sts	0x0572, r22	; 0x800572 <nibble+0x1>
    3a68:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <nibble>
    3a6c:	9f 3f       	cpi	r25, 0xFF	; 255
    3a6e:	09 f4       	brne	.+2      	; 0x3a72 <nibbleChange+0x178>
    3a70:	ed c0       	rjmp	.+474    	; 0x3c4c <nibbleChange+0x352>
    3a72:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <nibble+0x1>
    3a76:	8f 3f       	cpi	r24, 0xFF	; 255
    3a78:	09 f4       	brne	.+2      	; 0x3a7c <nibbleChange+0x182>
    3a7a:	e8 c0       	rjmp	.+464    	; 0x3c4c <nibbleChange+0x352>
    3a7c:	28 2f       	mov	r18, r24
    3a7e:	22 0f       	add	r18, r18
    3a80:	82 0f       	add	r24, r18
    3a82:	28 2f       	mov	r18, r24
    3a84:	22 0f       	add	r18, r18
    3a86:	22 0f       	add	r18, r18
    3a88:	92 0f       	add	r25, r18
    3a8a:	0a f0       	brmi	.+2      	; 0x3a8e <nibbleChange+0x194>
    3a8c:	df c0       	rjmp	.+446    	; 0x3c4c <nibbleChange+0x352>
    3a8e:	e1 e7       	ldi	r30, 0x71	; 113
    3a90:	f5 e0       	ldi	r31, 0x05	; 5
    3a92:	87 e0       	ldi	r24, 0x07	; 7
    3a94:	80 83       	st	Z, r24
    3a96:	8a e0       	ldi	r24, 0x0A	; 10
    3a98:	81 83       	std	Z+1, r24	; 0x01
    3a9a:	d8 c0       	rjmp	.+432    	; 0x3c4c <nibbleChange+0x352>
    3a9c:	c1 11       	cpse	r28, r1
    3a9e:	07 c0       	rjmp	.+14     	; 0x3aae <nibbleChange+0x1b4>
    3aa0:	e1 e7       	ldi	r30, 0x71	; 113
    3aa2:	f5 e0       	ldi	r31, 0x05	; 5
    3aa4:	80 81       	ld	r24, Z
    3aa6:	68 0f       	add	r22, r24
    3aa8:	67 70       	andi	r22, 0x07	; 7
    3aaa:	60 83       	st	Z, r22
    3aac:	cf c0       	rjmp	.+414    	; 0x3c4c <nibbleChange+0x352>
    3aae:	d0 e0       	ldi	r29, 0x00	; 0
    3ab0:	01 e7       	ldi	r16, 0x71	; 113
    3ab2:	15 e0       	ldi	r17, 0x05	; 5
    3ab4:	cf 58       	subi	r28, 0x8F	; 143
    3ab6:	da 4f       	sbci	r29, 0xFA	; 250
    3ab8:	88 81       	ld	r24, Y
    3aba:	86 0f       	add	r24, r22
    3abc:	15 df       	rcall	.-470    	; 0x38e8 <nibbleCheckOvfl>
    3abe:	88 83       	st	Y, r24
    3ac0:	f8 01       	movw	r30, r16
    3ac2:	81 81       	ldd	r24, Z+1	; 0x01
    3ac4:	92 81       	ldd	r25, Z+2	; 0x02
    3ac6:	88 0f       	add	r24, r24
    3ac8:	28 2f       	mov	r18, r24
    3aca:	22 0f       	add	r18, r18
    3acc:	22 0f       	add	r18, r18
    3ace:	82 0f       	add	r24, r18
    3ad0:	89 0f       	add	r24, r25
    3ad2:	80 32       	cpi	r24, 0x20	; 32
    3ad4:	2c f0       	brlt	.+10     	; 0x3ae0 <nibbleChange+0x1e6>
    3ad6:	83 e0       	ldi	r24, 0x03	; 3
    3ad8:	81 83       	std	Z+1, r24	; 0x01
    3ada:	81 e0       	ldi	r24, 0x01	; 1
    3adc:	82 83       	std	Z+2, r24	; 0x02
    3ade:	b6 c0       	rjmp	.+364    	; 0x3c4c <nibbleChange+0x352>
    3ae0:	88 23       	and	r24, r24
    3ae2:	0c f0       	brlt	.+2      	; 0x3ae6 <nibbleChange+0x1ec>
    3ae4:	b3 c0       	rjmp	.+358    	; 0x3c4c <nibbleChange+0x352>
    3ae6:	e1 e7       	ldi	r30, 0x71	; 113
    3ae8:	f5 e0       	ldi	r31, 0x05	; 5
    3aea:	11 82       	std	Z+1, r1	; 0x01
    3aec:	12 82       	std	Z+2, r1	; 0x02
    3aee:	ae c0       	rjmp	.+348    	; 0x3c4c <nibbleChange+0x352>
    3af0:	d0 e0       	ldi	r29, 0x00	; 0
    3af2:	01 e7       	ldi	r16, 0x71	; 113
    3af4:	15 e0       	ldi	r17, 0x05	; 5
    3af6:	cf 58       	subi	r28, 0x8F	; 143
    3af8:	da 4f       	sbci	r29, 0xFA	; 250
    3afa:	88 81       	ld	r24, Y
    3afc:	86 0f       	add	r24, r22
    3afe:	f4 de       	rcall	.-536    	; 0x38e8 <nibbleCheckOvfl>
    3b00:	88 83       	st	Y, r24
    3b02:	f8 01       	movw	r30, r16
    3b04:	20 81       	ld	r18, Z
    3b06:	81 81       	ldd	r24, Z+1	; 0x01
    3b08:	90 e0       	ldi	r25, 0x00	; 0
    3b0a:	ac 01       	movw	r20, r24
    3b0c:	44 0f       	add	r20, r20
    3b0e:	55 1f       	adc	r21, r21
    3b10:	88 0f       	add	r24, r24
    3b12:	99 1f       	adc	r25, r25
    3b14:	88 0f       	add	r24, r24
    3b16:	99 1f       	adc	r25, r25
    3b18:	88 0f       	add	r24, r24
    3b1a:	99 1f       	adc	r25, r25
    3b1c:	84 0f       	add	r24, r20
    3b1e:	95 1f       	adc	r25, r21
    3b20:	f4 e6       	ldi	r31, 0x64	; 100
    3b22:	2f 9f       	mul	r18, r31
    3b24:	80 0d       	add	r24, r0
    3b26:	91 1d       	adc	r25, r1
    3b28:	11 24       	eor	r1, r1
    3b2a:	f8 01       	movw	r30, r16
    3b2c:	22 81       	ldd	r18, Z+2	; 0x02
    3b2e:	82 0f       	add	r24, r18
    3b30:	91 1d       	adc	r25, r1
    3b32:	8f 3f       	cpi	r24, 0xFF	; 255
    3b34:	91 05       	cpc	r25, r1
    3b36:	09 f0       	breq	.+2      	; 0x3b3a <nibbleChange+0x240>
    3b38:	0c f4       	brge	.+2      	; 0x3b3c <nibbleChange+0x242>
    3b3a:	88 c0       	rjmp	.+272    	; 0x3c4c <nibbleChange+0x352>
    3b3c:	82 e0       	ldi	r24, 0x02	; 2
    3b3e:	80 83       	st	Z, r24
    3b40:	85 e0       	ldi	r24, 0x05	; 5
    3b42:	81 83       	std	Z+1, r24	; 0x01
    3b44:	82 83       	std	Z+2, r24	; 0x02
    3b46:	82 c0       	rjmp	.+260    	; 0x3c4c <nibbleChange+0x352>
    3b48:	22 23       	and	r18, r18
    3b4a:	a1 f0       	breq	.+40     	; 0x3b74 <nibbleChange+0x27a>
    3b4c:	d0 e0       	ldi	r29, 0x00	; 0
    3b4e:	fe 01       	movw	r30, r28
    3b50:	ef 58       	subi	r30, 0x8F	; 143
    3b52:	fa 4f       	sbci	r31, 0xFA	; 250
    3b54:	80 81       	ld	r24, Z
    3b56:	68 0f       	add	r22, r24
    3b58:	60 83       	st	Z, r22
    3b5a:	64 30       	cpi	r22, 0x04	; 4
    3b5c:	19 f4       	brne	.+6      	; 0x3b64 <nibbleChange+0x26a>
    3b5e:	8f ef       	ldi	r24, 0xFF	; 255
    3b60:	80 83       	st	Z, r24
    3b62:	74 c0       	rjmp	.+232    	; 0x3c4c <nibbleChange+0x352>
    3b64:	6e 3f       	cpi	r22, 0xFE	; 254
    3b66:	09 f0       	breq	.+2      	; 0x3b6a <nibbleChange+0x270>
    3b68:	71 c0       	rjmp	.+226    	; 0x3c4c <nibbleChange+0x352>
    3b6a:	cf 58       	subi	r28, 0x8F	; 143
    3b6c:	da 4f       	sbci	r29, 0xFA	; 250
    3b6e:	83 e0       	ldi	r24, 0x03	; 3
    3b70:	88 83       	st	Y, r24
    3b72:	6c c0       	rjmp	.+216    	; 0x3c4c <nibbleChange+0x352>
    3b74:	d0 e0       	ldi	r29, 0x00	; 0
    3b76:	fe 01       	movw	r30, r28
    3b78:	ef 58       	subi	r30, 0x8F	; 143
    3b7a:	fa 4f       	sbci	r31, 0xFA	; 250
    3b7c:	80 81       	ld	r24, Z
    3b7e:	81 11       	cpse	r24, r1
    3b80:	05 c0       	rjmp	.+10     	; 0x3b8c <nibbleChange+0x292>
    3b82:	6f 3f       	cpi	r22, 0xFF	; 255
    3b84:	19 f4       	brne	.+6      	; 0x3b8c <nibbleChange+0x292>
    3b86:	83 e0       	ldi	r24, 0x03	; 3
    3b88:	80 83       	st	Z, r24
    3b8a:	60 c0       	rjmp	.+192    	; 0x3c4c <nibbleChange+0x352>
    3b8c:	83 30       	cpi	r24, 0x03	; 3
    3b8e:	31 f4       	brne	.+12     	; 0x3b9c <nibbleChange+0x2a2>
    3b90:	61 30       	cpi	r22, 0x01	; 1
    3b92:	21 f4       	brne	.+8      	; 0x3b9c <nibbleChange+0x2a2>
    3b94:	cf 58       	subi	r28, 0x8F	; 143
    3b96:	da 4f       	sbci	r29, 0xFA	; 250
    3b98:	18 82       	st	Y, r1
    3b9a:	58 c0       	rjmp	.+176    	; 0x3c4c <nibbleChange+0x352>
    3b9c:	cf 58       	subi	r28, 0x8F	; 143
    3b9e:	da 4f       	sbci	r29, 0xFA	; 250
    3ba0:	68 0f       	add	r22, r24
    3ba2:	68 83       	st	Y, r22
    3ba4:	53 c0       	rjmp	.+166    	; 0x3c4c <nibbleChange+0x352>
    3ba6:	d0 e0       	ldi	r29, 0x00	; 0
    3ba8:	cf 58       	subi	r28, 0x8F	; 143
    3baa:	da 4f       	sbci	r29, 0xFA	; 250
    3bac:	88 81       	ld	r24, Y
    3bae:	68 0f       	add	r22, r24
    3bb0:	63 70       	andi	r22, 0x03	; 3
    3bb2:	68 83       	st	Y, r22
    3bb4:	4b c0       	rjmp	.+150    	; 0x3c4c <nibbleChange+0x352>
    3bb6:	e1 e7       	ldi	r30, 0x71	; 113
    3bb8:	f5 e0       	ldi	r31, 0x05	; 5
    3bba:	80 81       	ld	r24, Z
    3bbc:	80 95       	com	r24
    3bbe:	80 83       	st	Z, r24
    3bc0:	45 c0       	rjmp	.+138    	; 0x3c4c <nibbleChange+0x352>
    3bc2:	d0 e0       	ldi	r29, 0x00	; 0
    3bc4:	81 e0       	ldi	r24, 0x01	; 1
    3bc6:	61 fd       	sbrc	r22, 1
    3bc8:	80 e0       	ldi	r24, 0x00	; 0
    3bca:	cf 58       	subi	r28, 0x8F	; 143
    3bcc:	da 4f       	sbci	r29, 0xFA	; 250
    3bce:	88 83       	st	Y, r24
    3bd0:	3d c0       	rjmp	.+122    	; 0x3c4c <nibbleChange+0x352>
    3bd2:	61 30       	cpi	r22, 0x01	; 1
    3bd4:	41 f4       	brne	.+16     	; 0x3be6 <nibbleChange+0x2ec>
    3bd6:	d0 e0       	ldi	r29, 0x00	; 0
    3bd8:	cf 58       	subi	r28, 0x8F	; 143
    3bda:	da 4f       	sbci	r29, 0xFA	; 250
    3bdc:	88 81       	ld	r24, Y
    3bde:	87 70       	andi	r24, 0x07	; 7
    3be0:	8f 5f       	subi	r24, 0xFF	; 255
    3be2:	88 83       	st	Y, r24
    3be4:	33 c0       	rjmp	.+102    	; 0x3c4c <nibbleChange+0x352>
    3be6:	ec 2f       	mov	r30, r28
    3be8:	f0 e0       	ldi	r31, 0x00	; 0
    3bea:	ef 58       	subi	r30, 0x8F	; 143
    3bec:	fa 4f       	sbci	r31, 0xFA	; 250
    3bee:	80 81       	ld	r24, Z
    3bf0:	82 50       	subi	r24, 0x02	; 2
    3bf2:	87 70       	andi	r24, 0x07	; 7
    3bf4:	8f 5f       	subi	r24, 0xFF	; 255
    3bf6:	80 83       	st	Z, r24
    3bf8:	29 c0       	rjmp	.+82     	; 0x3c4c <nibbleChange+0x352>
    3bfa:	e1 e7       	ldi	r30, 0x71	; 113
    3bfc:	f5 e0       	ldi	r31, 0x05	; 5
    3bfe:	90 81       	ld	r25, Z
    3c00:	81 81       	ldd	r24, Z+1	; 0x01
    3c02:	99 0f       	add	r25, r25
    3c04:	29 2f       	mov	r18, r25
    3c06:	22 0f       	add	r18, r18
    3c08:	22 0f       	add	r18, r18
    3c0a:	92 0f       	add	r25, r18
    3c0c:	89 0f       	add	r24, r25
    3c0e:	c1 11       	cpse	r28, r1
    3c10:	07 c0       	rjmp	.+14     	; 0x3c20 <nibbleChange+0x326>
    3c12:	66 0f       	add	r22, r22
    3c14:	96 2f       	mov	r25, r22
    3c16:	99 0f       	add	r25, r25
    3c18:	99 0f       	add	r25, r25
    3c1a:	69 0f       	add	r22, r25
    3c1c:	68 0f       	add	r22, r24
    3c1e:	01 c0       	rjmp	.+2      	; 0x3c22 <nibbleChange+0x328>
    3c20:	68 0f       	add	r22, r24
    3c22:	66 23       	and	r22, r22
    3c24:	1c f0       	brlt	.+6      	; 0x3c2c <nibbleChange+0x332>
    3c26:	61 34       	cpi	r22, 0x41	; 65
    3c28:	1c f4       	brge	.+6      	; 0x3c30 <nibbleChange+0x336>
    3c2a:	03 c0       	rjmp	.+6      	; 0x3c32 <nibbleChange+0x338>
    3c2c:	60 e0       	ldi	r22, 0x00	; 0
    3c2e:	01 c0       	rjmp	.+2      	; 0x3c32 <nibbleChange+0x338>
    3c30:	60 e0       	ldi	r22, 0x00	; 0
    3c32:	10 92 71 05 	sts	0x0571, r1	; 0x800571 <nibble>
    3c36:	06 c0       	rjmp	.+12     	; 0x3c44 <nibbleChange+0x34a>
    3c38:	e1 e7       	ldi	r30, 0x71	; 113
    3c3a:	f5 e0       	ldi	r31, 0x05	; 5
    3c3c:	80 81       	ld	r24, Z
    3c3e:	8f 5f       	subi	r24, 0xFF	; 255
    3c40:	80 83       	st	Z, r24
    3c42:	6a 50       	subi	r22, 0x0A	; 10
    3c44:	6a 30       	cpi	r22, 0x0A	; 10
    3c46:	c4 f7       	brge	.-16     	; 0x3c38 <nibbleChange+0x33e>
    3c48:	60 93 72 05 	sts	0x0572, r22	; 0x800572 <nibble+0x1>
    3c4c:	df 91       	pop	r29
    3c4e:	cf 91       	pop	r28
    3c50:	1f 91       	pop	r17
    3c52:	0f 91       	pop	r16
    3c54:	08 95       	ret

00003c56 <nibbleToData>:
    3c56:	e0 91 22 05 	lds	r30, 0x0522	; 0x800522 <dataType>
    3c5a:	8e 2f       	mov	r24, r30
    3c5c:	90 e0       	ldi	r25, 0x00	; 0
    3c5e:	fc 01       	movw	r30, r24
    3c60:	32 97       	sbiw	r30, 0x02	; 2
    3c62:	ed 30       	cpi	r30, 0x0D	; 13
    3c64:	f1 05       	cpc	r31, r1
    3c66:	08 f0       	brcs	.+2      	; 0x3c6a <nibbleToData+0x14>
    3c68:	d9 c0       	rjmp	.+434    	; 0x3e1c <nibbleToData+0x1c6>
    3c6a:	88 27       	eor	r24, r24
    3c6c:	e7 56       	subi	r30, 0x67	; 103
    3c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c70:	8f 4f       	sbci	r24, 0xFF	; 255
    3c72:	0c 94 97 32 	jmp	0x652e	; 0x652e <__tablejump2__>
    3c76:	e1 e7       	ldi	r30, 0x71	; 113
    3c78:	f5 e0       	ldi	r31, 0x05	; 5
    3c7a:	80 81       	ld	r24, Z
    3c7c:	20 e1       	ldi	r18, 0x10	; 16
    3c7e:	82 9f       	mul	r24, r18
    3c80:	c0 01       	movw	r24, r0
    3c82:	11 24       	eor	r1, r1
    3c84:	91 81       	ldd	r25, Z+1	; 0x01
    3c86:	9f 70       	andi	r25, 0x0F	; 15
    3c88:	89 2b       	or	r24, r25
    3c8a:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3c8e:	08 95       	ret
    3c90:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3c94:	8f 3f       	cpi	r24, 0xFF	; 255
    3c96:	19 f4       	brne	.+6      	; 0x3c9e <nibbleToData+0x48>
    3c98:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3c9c:	08 95       	ret
    3c9e:	81 50       	subi	r24, 0x01	; 1
    3ca0:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3ca4:	08 95       	ret
    3ca6:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <nibble>
    3caa:	9f 3f       	cpi	r25, 0xFF	; 255
    3cac:	21 f0       	breq	.+8      	; 0x3cb6 <nibbleToData+0x60>
    3cae:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <nibble+0x1>
    3cb2:	8f 3f       	cpi	r24, 0xFF	; 255
    3cb4:	21 f4       	brne	.+8      	; 0x3cbe <nibbleToData+0x68>
    3cb6:	8f ef       	ldi	r24, 0xFF	; 255
    3cb8:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3cbc:	08 95       	ret
    3cbe:	28 2f       	mov	r18, r24
    3cc0:	22 0f       	add	r18, r18
    3cc2:	82 0f       	add	r24, r18
    3cc4:	88 0f       	add	r24, r24
    3cc6:	88 0f       	add	r24, r24
    3cc8:	89 0f       	add	r24, r25
    3cca:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3cce:	08 95       	ret
    3cd0:	e1 e7       	ldi	r30, 0x71	; 113
    3cd2:	f5 e0       	ldi	r31, 0x05	; 5
    3cd4:	80 81       	ld	r24, Z
    3cd6:	30 e2       	ldi	r19, 0x20	; 32
    3cd8:	83 9f       	mul	r24, r19
    3cda:	c0 01       	movw	r24, r0
    3cdc:	11 24       	eor	r1, r1
    3cde:	21 81       	ldd	r18, Z+1	; 0x01
    3ce0:	32 81       	ldd	r19, Z+2	; 0x02
    3ce2:	22 0f       	add	r18, r18
    3ce4:	42 2f       	mov	r20, r18
    3ce6:	44 0f       	add	r20, r20
    3ce8:	44 0f       	add	r20, r20
    3cea:	24 0f       	add	r18, r20
    3cec:	23 0f       	add	r18, r19
    3cee:	20 32       	cpi	r18, 0x20	; 32
    3cf0:	20 f0       	brcs	.+8      	; 0x3cfa <nibbleToData+0xa4>
    3cf2:	8f 61       	ori	r24, 0x1F	; 31
    3cf4:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3cf8:	08 95       	ret
    3cfa:	82 2b       	or	r24, r18
    3cfc:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d00:	08 95       	ret
    3d02:	e1 e7       	ldi	r30, 0x71	; 113
    3d04:	f5 e0       	ldi	r31, 0x05	; 5
    3d06:	20 81       	ld	r18, Z
    3d08:	81 81       	ldd	r24, Z+1	; 0x01
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	ac 01       	movw	r20, r24
    3d0e:	44 0f       	add	r20, r20
    3d10:	55 1f       	adc	r21, r21
    3d12:	88 0f       	add	r24, r24
    3d14:	99 1f       	adc	r25, r25
    3d16:	88 0f       	add	r24, r24
    3d18:	99 1f       	adc	r25, r25
    3d1a:	88 0f       	add	r24, r24
    3d1c:	99 1f       	adc	r25, r25
    3d1e:	84 0f       	add	r24, r20
    3d20:	95 1f       	adc	r25, r21
    3d22:	34 e6       	ldi	r19, 0x64	; 100
    3d24:	23 9f       	mul	r18, r19
    3d26:	80 0d       	add	r24, r0
    3d28:	91 1d       	adc	r25, r1
    3d2a:	11 24       	eor	r1, r1
    3d2c:	22 81       	ldd	r18, Z+2	; 0x02
    3d2e:	82 0f       	add	r24, r18
    3d30:	91 1d       	adc	r25, r1
    3d32:	8f 3f       	cpi	r24, 0xFF	; 255
    3d34:	91 05       	cpc	r25, r1
    3d36:	29 f0       	breq	.+10     	; 0x3d42 <nibbleToData+0xec>
    3d38:	20 f0       	brcs	.+8      	; 0x3d42 <nibbleToData+0xec>
    3d3a:	8f ef       	ldi	r24, 0xFF	; 255
    3d3c:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d40:	08 95       	ret
    3d42:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d46:	08 95       	ret
    3d48:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3d4c:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d50:	84 30       	cpi	r24, 0x04	; 4
    3d52:	08 f4       	brcc	.+2      	; 0x3d56 <nibbleToData+0x100>
    3d54:	63 c0       	rjmp	.+198    	; 0x3e1c <nibbleToData+0x1c6>
    3d56:	8f ef       	ldi	r24, 0xFF	; 255
    3d58:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d5c:	08 95       	ret
    3d5e:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3d62:	83 70       	andi	r24, 0x03	; 3
    3d64:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d68:	08 95       	ret
    3d6a:	80 91 71 05 	lds	r24, 0x0571	; 0x800571 <nibble>
    3d6e:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3d72:	08 95       	ret
    3d74:	10 92 66 05 	sts	0x0566, r1	; 0x800566 <dataEntry>
    3d78:	80 e0       	ldi	r24, 0x00	; 0
    3d7a:	0c c0       	rjmp	.+24     	; 0x3d94 <nibbleToData+0x13e>
    3d7c:	90 91 66 05 	lds	r25, 0x0566	; 0x800566 <dataEntry>
    3d80:	99 0f       	add	r25, r25
    3d82:	e8 2f       	mov	r30, r24
    3d84:	f0 e0       	ldi	r31, 0x00	; 0
    3d86:	ef 58       	subi	r30, 0x8F	; 143
    3d88:	fa 4f       	sbci	r31, 0xFA	; 250
    3d8a:	20 81       	ld	r18, Z
    3d8c:	92 0f       	add	r25, r18
    3d8e:	90 93 66 05 	sts	0x0566, r25	; 0x800566 <dataEntry>
    3d92:	8f 5f       	subi	r24, 0xFF	; 255
    3d94:	88 30       	cpi	r24, 0x08	; 8
    3d96:	90 f3       	brcs	.-28     	; 0x3d7c <nibbleToData+0x126>
    3d98:	08 95       	ret
    3d9a:	10 92 4f 05 	sts	0x054F, r1	; 0x80054f <dataEntry32>
    3d9e:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <dataEntry32+0x1>
    3da2:	10 92 51 05 	sts	0x0551, r1	; 0x800551 <dataEntry32+0x2>
    3da6:	10 92 52 05 	sts	0x0552, r1	; 0x800552 <dataEntry32+0x3>
    3daa:	af e4       	ldi	r26, 0x4F	; 79
    3dac:	b5 e0       	ldi	r27, 0x05	; 5
    3dae:	88 e0       	ldi	r24, 0x08	; 8
    3db0:	10 c0       	rjmp	.+32     	; 0x3dd2 <nibbleToData+0x17c>
    3db2:	82 50       	subi	r24, 0x02	; 2
    3db4:	f0 e0       	ldi	r31, 0x00	; 0
    3db6:	ef 58       	subi	r30, 0x8F	; 143
    3db8:	fa 4f       	sbci	r31, 0xFA	; 250
    3dba:	90 81       	ld	r25, Z
    3dbc:	e8 2f       	mov	r30, r24
    3dbe:	f0 e0       	ldi	r31, 0x00	; 0
    3dc0:	ef 58       	subi	r30, 0x8F	; 143
    3dc2:	fa 4f       	sbci	r31, 0xFA	; 250
    3dc4:	20 81       	ld	r18, Z
    3dc6:	30 e1       	ldi	r19, 0x10	; 16
    3dc8:	23 9f       	mul	r18, r19
    3dca:	90 0d       	add	r25, r0
    3dcc:	11 24       	eor	r1, r1
    3dce:	9c 93       	st	X, r25
    3dd0:	11 96       	adiw	r26, 0x01	; 1
    3dd2:	ef ef       	ldi	r30, 0xFF	; 255
    3dd4:	e8 0f       	add	r30, r24
    3dd6:	81 11       	cpse	r24, r1
    3dd8:	ec cf       	rjmp	.-40     	; 0x3db2 <nibbleToData+0x15c>
    3dda:	08 95       	ret
    3ddc:	e1 e7       	ldi	r30, 0x71	; 113
    3dde:	f5 e0       	ldi	r31, 0x05	; 5
    3de0:	20 81       	ld	r18, Z
    3de2:	91 81       	ldd	r25, Z+1	; 0x01
    3de4:	89 2f       	mov	r24, r25
    3de6:	90 e0       	ldi	r25, 0x00	; 0
    3de8:	01 97       	sbiw	r24, 0x01	; 1
    3dea:	88 0f       	add	r24, r24
    3dec:	99 1f       	adc	r25, r25
    3dee:	88 0f       	add	r24, r24
    3df0:	99 1f       	adc	r25, r25
    3df2:	88 0f       	add	r24, r24
    3df4:	99 1f       	adc	r25, r25
    3df6:	9f ef       	ldi	r25, 0xFF	; 255
    3df8:	92 0f       	add	r25, r18
    3dfa:	89 2b       	or	r24, r25
    3dfc:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3e00:	08 95       	ret
    3e02:	e1 e7       	ldi	r30, 0x71	; 113
    3e04:	f5 e0       	ldi	r31, 0x05	; 5
    3e06:	80 81       	ld	r24, Z
    3e08:	91 81       	ldd	r25, Z+1	; 0x01
    3e0a:	88 0f       	add	r24, r24
    3e0c:	28 2f       	mov	r18, r24
    3e0e:	22 0f       	add	r18, r18
    3e10:	22 0f       	add	r18, r18
    3e12:	82 0f       	add	r24, r18
    3e14:	89 0f       	add	r24, r25
    3e16:	81 50       	subi	r24, 0x01	; 1
    3e18:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    3e1c:	08 95       	ret

00003e1e <menuTextOut>:
    3e1e:	0f 93       	push	r16
    3e20:	1f 93       	push	r17
    3e22:	cf 93       	push	r28
    3e24:	df 93       	push	r29
    3e26:	8c 01       	movw	r16, r24
    3e28:	d6 2f       	mov	r29, r22
    3e2a:	c0 e0       	ldi	r28, 0x00	; 0
    3e2c:	0c c0       	rjmp	.+24     	; 0x3e46 <menuTextOut+0x28>
    3e2e:	f8 01       	movw	r30, r16
    3e30:	84 91       	lpm	r24, Z
    3e32:	88 23       	and	r24, r24
    3e34:	19 f0       	breq	.+6      	; 0x3e3c <menuTextOut+0x1e>
    3e36:	0f 5f       	subi	r16, 0xFF	; 255
    3e38:	1f 4f       	sbci	r17, 0xFF	; 255
    3e3a:	02 c0       	rjmp	.+4      	; 0x3e40 <menuTextOut+0x22>
    3e3c:	8d 2f       	mov	r24, r29
    3e3e:	d0 e2       	ldi	r29, 0x20	; 32
    3e40:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    3e44:	cf 5f       	subi	r28, 0xFF	; 255
    3e46:	ca 30       	cpi	r28, 0x0A	; 10
    3e48:	90 f3       	brcs	.-28     	; 0x3e2e <menuTextOut+0x10>
    3e4a:	df 91       	pop	r29
    3e4c:	cf 91       	pop	r28
    3e4e:	1f 91       	pop	r17
    3e50:	0f 91       	pop	r16
    3e52:	08 95       	ret

00003e54 <menuParentMenuToLCD>:
    3e54:	80 e4       	ldi	r24, 0x40	; 64
    3e56:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    3e5a:	e0 91 15 05 	lds	r30, 0x0515	; 0x800515 <menuStackIndex>
    3e5e:	e1 11       	cpse	r30, r1
    3e60:	07 c0       	rjmp	.+14     	; 0x3e70 <menuParentMenuToLCD+0x1c>
    3e62:	6a e3       	ldi	r22, 0x3A	; 58
    3e64:	80 91 49 05 	lds	r24, 0x0549	; 0x800549 <pMenuTopTitle>
    3e68:	90 91 4a 05 	lds	r25, 0x054A	; 0x80054a <pMenuTopTitle+0x1>
    3e6c:	d8 cf       	rjmp	.-80     	; 0x3e1e <menuTextOut>
    3e6e:	08 95       	ret
    3e70:	f0 e0       	ldi	r31, 0x00	; 0
    3e72:	31 97       	sbiw	r30, 0x01	; 1
    3e74:	ee 0f       	add	r30, r30
    3e76:	ff 1f       	adc	r31, r31
    3e78:	e8 5d       	subi	r30, 0xD8	; 216
    3e7a:	fa 4f       	sbci	r31, 0xFA	; 250
    3e7c:	80 81       	ld	r24, Z
    3e7e:	91 81       	ldd	r25, Z+1	; 0x01
    3e80:	6a e3       	ldi	r22, 0x3A	; 58
    3e82:	02 96       	adiw	r24, 0x02	; 2
    3e84:	cc cf       	rjmp	.-104    	; 0x3e1e <menuTextOut>
    3e86:	08 95       	ret

00003e88 <menuDisplayValue>:
    3e88:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    3e8c:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    3e90:	84 91       	lpm	r24, Z
    3e92:	8f 73       	andi	r24, 0x3F	; 63
    3e94:	90 e0       	ldi	r25, 0x00	; 0
    3e96:	02 97       	sbiw	r24, 0x02	; 2
    3e98:	1c f0       	brlt	.+6      	; 0x3ea0 <menuDisplayValue+0x18>
    3e9a:	ca da       	rcall	.-2668   	; 0x3430 <dataToNibbles>
    3e9c:	bc db       	rcall	.-2184   	; 0x3616 <nibbleToLCDstring>
    3e9e:	09 cd       	rjmp	.-1518   	; 0x38b2 <LCDStringOut>
    3ea0:	08 95       	ret

00003ea2 <menuCursorSetDataNibble>:
    3ea2:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <pNibbleInfo>
    3ea6:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <pNibbleInfo+0x1>
    3eaa:	80 91 23 05 	lds	r24, 0x0523	; 0x800523 <nibbleIndex>
    3eae:	e8 0f       	add	r30, r24
    3eb0:	f1 1d       	adc	r31, r1
    3eb2:	31 96       	adiw	r30, 0x01	; 1
    3eb4:	84 91       	lpm	r24, Z
    3eb6:	82 5e       	subi	r24, 0xE2	; 226
    3eb8:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    3ebc:	20 91 23 05 	lds	r18, 0x0523	; 0x800523 <nibbleIndex>
    3ec0:	30 e0       	ldi	r19, 0x00	; 0
    3ec2:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <pNibbleInfo>
    3ec6:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <pNibbleInfo+0x1>
    3eca:	84 91       	lpm	r24, Z
    3ecc:	90 e0       	ldi	r25, 0x00	; 0
    3ece:	01 97       	sbiw	r24, 0x01	; 1
    3ed0:	28 17       	cp	r18, r24
    3ed2:	39 07       	cpc	r19, r25
    3ed4:	14 f4       	brge	.+4      	; 0x3eda <menuCursorSetDataNibble+0x38>
    3ed6:	6a da       	rcall	.-2860   	; 0x33ac <softkeyRight>
    3ed8:	03 c0       	rjmp	.+6      	; 0x3ee0 <menuCursorSetDataNibble+0x3e>
    3eda:	83 e0       	ldi	r24, 0x03	; 3
    3edc:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    3ee0:	80 91 23 05 	lds	r24, 0x0523	; 0x800523 <nibbleIndex>
    3ee4:	88 23       	and	r24, r24
    3ee6:	11 f0       	breq	.+4      	; 0x3eec <menuCursorSetDataNibble+0x4a>
    3ee8:	5b da       	rcall	.-2890   	; 0x33a0 <softkeyLeft>
    3eea:	03 c0       	rjmp	.+6      	; 0x3ef2 <menuCursorSetDataNibble+0x50>
    3eec:	82 e0       	ldi	r24, 0x02	; 2
    3eee:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    3ef2:	7a da       	rcall	.-2828   	; 0x33e8 <softkeyPlus>
    3ef4:	8b da       	rcall	.-2794   	; 0x340c <softkeyMinus>
    3ef6:	0c 94 34 32 	jmp	0x6468	; 0x6468 <keylabel_toLCD>
    3efa:	08 95       	ret

00003efc <menuCursorSetExtra>:
    3efc:	84 e1       	ldi	r24, 0x14	; 20
    3efe:	0c 94 7a 11 	jmp	0x22f4	; 0x22f4 <lcd_goto>
    3f02:	08 95       	ret

00003f04 <menuOnEnterStatusMidiIn>:
    3f04:	0f 93       	push	r16
    3f06:	1f 93       	push	r17
    3f08:	cf 93       	push	r28
    3f0a:	f8 df       	rcall	.-16     	; 0x3efc <menuCursorSetExtra>
    3f0c:	87 e8       	ldi	r24, 0x87	; 135
    3f0e:	93 e0       	ldi	r25, 0x03	; 3
    3f10:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    3f14:	80 91 19 0d 	lds	r24, 0x0D19	; 0x800d19 <midiRxBytesCount>
    3f18:	90 91 1a 0d 	lds	r25, 0x0D1A	; 0x800d1a <midiRxBytesCount+0x1>
    3f1c:	0e 94 1d 31 	call	0x623a	; 0x623a <lcd_wordout>
    3f20:	8d e2       	ldi	r24, 0x2D	; 45
    3f22:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    3f26:	80 91 19 0d 	lds	r24, 0x0D19	; 0x800d19 <midiRxBytesCount>
    3f2a:	90 91 1a 0d 	lds	r25, 0x0D1A	; 0x800d1a <midiRxBytesCount+0x1>
    3f2e:	04 97       	sbiw	r24, 0x04	; 4
    3f30:	30 f4       	brcc	.+12     	; 0x3f3e <menuOnEnterStatusMidiIn+0x3a>
    3f32:	80 91 19 0d 	lds	r24, 0x0D19	; 0x800d19 <midiRxBytesCount>
    3f36:	90 91 1a 0d 	lds	r25, 0x0D1A	; 0x800d1a <midiRxBytesCount+0x1>
    3f3a:	c8 2f       	mov	r28, r24
    3f3c:	01 c0       	rjmp	.+2      	; 0x3f40 <menuOnEnterStatusMidiIn+0x3c>
    3f3e:	c4 e0       	ldi	r28, 0x04	; 4
    3f40:	00 91 cf 0b 	lds	r16, 0x0BCF	; 0x800bcf <midiRxInIndex>
    3f44:	10 e0       	ldi	r17, 0x00	; 0
    3f46:	02 57       	subi	r16, 0x72	; 114
    3f48:	14 4f       	sbci	r17, 0xF4	; 244
    3f4a:	13 c0       	rjmp	.+38     	; 0x3f72 <menuOnEnterStatusMidiIn+0x6e>
    3f4c:	8b e0       	ldi	r24, 0x0B	; 11
    3f4e:	0f 38       	cpi	r16, 0x8F	; 143
    3f50:	18 07       	cpc	r17, r24
    3f52:	10 f0       	brcs	.+4      	; 0x3f58 <menuOnEnterStatusMidiIn+0x54>
    3f54:	f8 01       	movw	r30, r16
    3f56:	02 c0       	rjmp	.+4      	; 0x3f5c <menuOnEnterStatusMidiIn+0x58>
    3f58:	ee ea       	ldi	r30, 0xAE	; 174
    3f5a:	fb e0       	ldi	r31, 0x0B	; 11
    3f5c:	8f 01       	movw	r16, r30
    3f5e:	01 50       	subi	r16, 0x01	; 1
    3f60:	11 09       	sbc	r17, r1
    3f62:	80 81       	ld	r24, Z
    3f64:	0e 94 eb 2f 	call	0x5fd6	; 0x5fd6 <lcd_hexout>
    3f68:	c1 50       	subi	r28, 0x01	; 1
    3f6a:	19 f0       	breq	.+6      	; 0x3f72 <menuOnEnterStatusMidiIn+0x6e>
    3f6c:	80 e2       	ldi	r24, 0x20	; 32
    3f6e:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    3f72:	c1 11       	cpse	r28, r1
    3f74:	eb cf       	rjmp	.-42     	; 0x3f4c <menuOnEnterStatusMidiIn+0x48>
    3f76:	80 e0       	ldi	r24, 0x00	; 0
    3f78:	cf 91       	pop	r28
    3f7a:	1f 91       	pop	r17
    3f7c:	0f 91       	pop	r16
    3f7e:	08 95       	ret

00003f80 <menuOnEnterStatusMidiOut>:
    3f80:	0f 93       	push	r16
    3f82:	1f 93       	push	r17
    3f84:	cf 93       	push	r28
    3f86:	ba df       	rcall	.-140    	; 0x3efc <menuCursorSetExtra>
    3f88:	82 e8       	ldi	r24, 0x82	; 130
    3f8a:	93 e0       	ldi	r25, 0x03	; 3
    3f8c:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    3f90:	80 91 14 0c 	lds	r24, 0x0C14	; 0x800c14 <midiTxBytesCount>
    3f94:	90 91 15 0c 	lds	r25, 0x0C15	; 0x800c15 <midiTxBytesCount+0x1>
    3f98:	0e 94 1d 31 	call	0x623a	; 0x623a <lcd_wordout>
    3f9c:	8d e2       	ldi	r24, 0x2D	; 45
    3f9e:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    3fa2:	80 91 14 0c 	lds	r24, 0x0C14	; 0x800c14 <midiTxBytesCount>
    3fa6:	90 91 15 0c 	lds	r25, 0x0C15	; 0x800c15 <midiTxBytesCount+0x1>
    3faa:	04 97       	sbiw	r24, 0x04	; 4
    3fac:	30 f4       	brcc	.+12     	; 0x3fba <menuOnEnterStatusMidiOut+0x3a>
    3fae:	80 91 14 0c 	lds	r24, 0x0C14	; 0x800c14 <midiTxBytesCount>
    3fb2:	90 91 15 0c 	lds	r25, 0x0C15	; 0x800c15 <midiTxBytesCount+0x1>
    3fb6:	c8 2f       	mov	r28, r24
    3fb8:	01 c0       	rjmp	.+2      	; 0x3fbc <menuOnEnterStatusMidiOut+0x3c>
    3fba:	c4 e0       	ldi	r28, 0x04	; 4
    3fbc:	00 91 8a 0b 	lds	r16, 0x0B8A	; 0x800b8a <midiTxInIndex>
    3fc0:	10 e0       	ldi	r17, 0x00	; 0
    3fc2:	02 55       	subi	r16, 0x52	; 82
    3fc4:	14 4f       	sbci	r17, 0xF4	; 244
    3fc6:	13 c0       	rjmp	.+38     	; 0x3fee <menuOnEnterStatusMidiOut+0x6e>
    3fc8:	8b e0       	ldi	r24, 0x0B	; 11
    3fca:	0f 3a       	cpi	r16, 0xAF	; 175
    3fcc:	18 07       	cpc	r17, r24
    3fce:	10 f0       	brcs	.+4      	; 0x3fd4 <menuOnEnterStatusMidiOut+0x54>
    3fd0:	f8 01       	movw	r30, r16
    3fd2:	02 c0       	rjmp	.+4      	; 0x3fd8 <menuOnEnterStatusMidiOut+0x58>
    3fd4:	ee ec       	ldi	r30, 0xCE	; 206
    3fd6:	fb e0       	ldi	r31, 0x0B	; 11
    3fd8:	8f 01       	movw	r16, r30
    3fda:	01 50       	subi	r16, 0x01	; 1
    3fdc:	11 09       	sbc	r17, r1
    3fde:	80 81       	ld	r24, Z
    3fe0:	0e 94 eb 2f 	call	0x5fd6	; 0x5fd6 <lcd_hexout>
    3fe4:	c1 50       	subi	r28, 0x01	; 1
    3fe6:	19 f0       	breq	.+6      	; 0x3fee <menuOnEnterStatusMidiOut+0x6e>
    3fe8:	80 e2       	ldi	r24, 0x20	; 32
    3fea:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    3fee:	c1 11       	cpse	r28, r1
    3ff0:	eb cf       	rjmp	.-42     	; 0x3fc8 <menuOnEnterStatusMidiOut+0x48>
    3ff2:	80 e0       	ldi	r24, 0x00	; 0
    3ff4:	cf 91       	pop	r28
    3ff6:	1f 91       	pop	r17
    3ff8:	0f 91       	pop	r16
    3ffa:	08 95       	ret

00003ffc <menuOnEnterLogDisp>:
    3ffc:	0f 93       	push	r16
    3ffe:	1f 93       	push	r17
    4000:	cf 93       	push	r28
    4002:	8f 3f       	cpi	r24, 0xFF	; 255
    4004:	a9 f4       	brne	.+42     	; 0x4030 <menuOnEnterLogDisp+0x34>
    4006:	0e 94 b7 11 	call	0x236e	; 0x236e <log_count>
    400a:	81 50       	subi	r24, 0x01	; 1
    400c:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <logEntryNr.2902>
    4010:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <showText.2903>
    4014:	6a eb       	ldi	r22, 0xBA	; 186
    4016:	70 e1       	ldi	r23, 0x10	; 16
    4018:	80 e0       	ldi	r24, 0x00	; 0
    401a:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    401e:	64 eb       	ldi	r22, 0xB4	; 180
    4020:	70 e1       	ldi	r23, 0x10	; 16
    4022:	81 e0       	ldi	r24, 0x01	; 1
    4024:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    4028:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    402c:	cf ef       	ldi	r28, 0xFF	; 255
    402e:	2f c0       	rjmp	.+94     	; 0x408e <menuOnEnterLogDisp+0x92>
    4030:	84 30       	cpi	r24, 0x04	; 4
    4032:	49 f4       	brne	.+18     	; 0x4046 <menuOnEnterLogDisp+0x4a>
    4034:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    4038:	88 23       	and	r24, r24
    403a:	21 f1       	breq	.+72     	; 0x4084 <menuOnEnterLogDisp+0x88>
    403c:	81 50       	subi	r24, 0x01	; 1
    403e:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <logEntryNr.2902>
    4042:	cf ef       	ldi	r28, 0xFF	; 255
    4044:	24 c0       	rjmp	.+72     	; 0x408e <menuOnEnterLogDisp+0x92>
    4046:	81 30       	cpi	r24, 0x01	; 1
    4048:	91 f4       	brne	.+36     	; 0x406e <menuOnEnterLogDisp+0x72>
    404a:	00 91 09 02 	lds	r16, 0x0209	; 0x800209 <logEntryNr.2902>
    404e:	10 e0       	ldi	r17, 0x00	; 0
    4050:	0f 5f       	subi	r16, 0xFF	; 255
    4052:	1f 4f       	sbci	r17, 0xFF	; 255
    4054:	0e 94 b7 11 	call	0x236e	; 0x236e <log_count>
    4058:	90 e0       	ldi	r25, 0x00	; 0
    405a:	08 17       	cp	r16, r24
    405c:	19 07       	cpc	r17, r25
    405e:	a4 f4       	brge	.+40     	; 0x4088 <menuOnEnterLogDisp+0x8c>
    4060:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    4064:	8f 5f       	subi	r24, 0xFF	; 255
    4066:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <logEntryNr.2902>
    406a:	cf ef       	ldi	r28, 0xFF	; 255
    406c:	10 c0       	rjmp	.+32     	; 0x408e <menuOnEnterLogDisp+0x92>
    406e:	83 30       	cpi	r24, 0x03	; 3
    4070:	11 f0       	breq	.+4      	; 0x4076 <menuOnEnterLogDisp+0x7a>
    4072:	85 30       	cpi	r24, 0x05	; 5
    4074:	59 f4       	brne	.+22     	; 0x408c <menuOnEnterLogDisp+0x90>
    4076:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <showText.2903>
    407a:	80 95       	com	r24
    407c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <showText.2903>
    4080:	cf ef       	ldi	r28, 0xFF	; 255
    4082:	05 c0       	rjmp	.+10     	; 0x408e <menuOnEnterLogDisp+0x92>
    4084:	cf ef       	ldi	r28, 0xFF	; 255
    4086:	03 c0       	rjmp	.+6      	; 0x408e <menuOnEnterLogDisp+0x92>
    4088:	cf ef       	ldi	r28, 0xFF	; 255
    408a:	01 c0       	rjmp	.+2      	; 0x408e <menuOnEnterLogDisp+0x92>
    408c:	c0 e0       	ldi	r28, 0x00	; 0
    408e:	cf 3f       	cpi	r28, 0xFF	; 255
    4090:	09 f0       	breq	.+2      	; 0x4094 <menuOnEnterLogDisp+0x98>
    4092:	54 c0       	rjmp	.+168    	; 0x413c <menuOnEnterLogDisp+0x140>
    4094:	33 df       	rcall	.-410    	; 0x3efc <menuCursorSetExtra>
    4096:	0e 94 b7 11 	call	0x236e	; 0x236e <log_count>
    409a:	81 11       	cpse	r24, r1
    409c:	06 c0       	rjmp	.+12     	; 0x40aa <menuOnEnterLogDisp+0xae>
    409e:	85 e3       	ldi	r24, 0x35	; 53
    40a0:	93 e0       	ldi	r25, 0x03	; 3
    40a2:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    40a6:	c0 e0       	ldi	r28, 0x00	; 0
    40a8:	1d c0       	rjmp	.+58     	; 0x40e4 <menuOnEnterLogDisp+0xe8>
    40aa:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    40ae:	8f 5f       	subi	r24, 0xFF	; 255
    40b0:	0e 94 27 30 	call	0x604e	; 0x604e <lcd_dec2out>
    40b4:	8a e3       	ldi	r24, 0x3A	; 58
    40b6:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    40ba:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <showText.2903>
    40be:	81 11       	cpse	r24, r1
    40c0:	08 c0       	rjmp	.+16     	; 0x40d2 <menuOnEnterLogDisp+0xd6>
    40c2:	60 e2       	ldi	r22, 0x20	; 32
    40c4:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    40c8:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <log_getShortTextFromIndex>
    40cc:	0e 94 8c 11 	call	0x2318	; 0x2318 <lcd_puts>
    40d0:	06 c0       	rjmp	.+12     	; 0x40de <menuOnEnterLogDisp+0xe2>
    40d2:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    40d6:	0e 94 fe 11 	call	0x23fc	; 0x23fc <getErrorText>
    40da:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    40de:	0e 94 a5 31 	call	0x634a	; 0x634a <lcd_clrEol>
    40e2:	0c df       	rcall	.-488    	; 0x3efc <menuCursorSetExtra>
    40e4:	61 e0       	ldi	r22, 0x01	; 1
    40e6:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <showText.2903>
    40ea:	8f 3f       	cpi	r24, 0xFF	; 255
    40ec:	09 f0       	breq	.+2      	; 0x40f0 <menuOnEnterLogDisp+0xf4>
    40ee:	60 e0       	ldi	r22, 0x00	; 0
    40f0:	81 e0       	ldi	r24, 0x01	; 1
    40f2:	0e 94 53 32 	call	0x64a6	; 0x64a6 <keylabel_statcheck>
    40f6:	00 91 09 02 	lds	r16, 0x0209	; 0x800209 <logEntryNr.2902>
    40fa:	10 e0       	ldi	r17, 0x00	; 0
    40fc:	0f 5f       	subi	r16, 0xFF	; 255
    40fe:	1f 4f       	sbci	r17, 0xFF	; 255
    4100:	0e 94 b7 11 	call	0x236e	; 0x236e <log_count>
    4104:	90 e0       	ldi	r25, 0x00	; 0
    4106:	08 17       	cp	r16, r24
    4108:	19 07       	cpc	r17, r25
    410a:	34 f4       	brge	.+12     	; 0x4118 <menuOnEnterLogDisp+0x11c>
    410c:	64 ed       	ldi	r22, 0xD4	; 212
    410e:	70 e1       	ldi	r23, 0x10	; 16
    4110:	83 e0       	ldi	r24, 0x03	; 3
    4112:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    4116:	03 c0       	rjmp	.+6      	; 0x411e <menuOnEnterLogDisp+0x122>
    4118:	83 e0       	ldi	r24, 0x03	; 3
    411a:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    411e:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <logEntryNr.2902>
    4122:	88 23       	and	r24, r24
    4124:	31 f0       	breq	.+12     	; 0x4132 <menuOnEnterLogDisp+0x136>
    4126:	62 ed       	ldi	r22, 0xD2	; 210
    4128:	70 e1       	ldi	r23, 0x10	; 16
    412a:	82 e0       	ldi	r24, 0x02	; 2
    412c:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    4130:	03 c0       	rjmp	.+6      	; 0x4138 <menuOnEnterLogDisp+0x13c>
    4132:	82 e0       	ldi	r24, 0x02	; 2
    4134:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    4138:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    413c:	8c 2f       	mov	r24, r28
    413e:	cf 91       	pop	r28
    4140:	1f 91       	pop	r17
    4142:	0f 91       	pop	r16
    4144:	08 95       	ret

00004146 <menuCursorSetMenu>:
    4146:	8a e4       	ldi	r24, 0x4A	; 74
    4148:	0c 94 7a 11 	jmp	0x22f4	; 0x22f4 <lcd_goto>
    414c:	08 95       	ret

0000414e <menuClearExtraDisp>:
    414e:	d6 de       	rcall	.-596    	; 0x3efc <menuCursorSetExtra>
    4150:	8a e0       	ldi	r24, 0x0A	; 10
    4152:	0c 94 99 31 	jmp	0x6332	; 0x6332 <lcd_blank>
    4156:	08 95       	ret

00004158 <menu_ClearDataDisp>:
    4158:	8e e1       	ldi	r24, 0x1E	; 30
    415a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    415e:	8a e0       	ldi	r24, 0x0A	; 10
    4160:	0c 94 99 31 	jmp	0x6332	; 0x6332 <lcd_blank>
    4164:	08 95       	ret

00004166 <menuClearMenuDisp>:
    4166:	80 e4       	ldi	r24, 0x40	; 64
    4168:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    416c:	8a e0       	ldi	r24, 0x0A	; 10
    416e:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4172:	e9 df       	rcall	.-46     	; 0x4146 <menuCursorSetMenu>
    4174:	8a e0       	ldi	r24, 0x0A	; 10
    4176:	0c 94 99 31 	jmp	0x6332	; 0x6332 <lcd_blank>
    417a:	08 95       	ret

0000417c <menu_ClearAllDisp>:
    417c:	f4 df       	rcall	.-24     	; 0x4166 <menuClearMenuDisp>
    417e:	ec df       	rcall	.-40     	; 0x4158 <menu_ClearDataDisp>
    4180:	e6 cf       	rjmp	.-52     	; 0x414e <menuClearExtraDisp>
    4182:	08 95       	ret

00004184 <menuCheckArrowDown>:
    4184:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    4188:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    418c:	84 91       	lpm	r24, Z
    418e:	8f 73       	andi	r24, 0x3F	; 63
    4190:	81 30       	cpi	r24, 0x01	; 1
    4192:	11 f4       	brne	.+4      	; 0x4198 <menuCheckArrowDown+0x14>
    4194:	11 c9       	rjmp	.-3550   	; 0x33b8 <softkeyDown>
    4196:	08 95       	ret
    4198:	3e 96       	adiw	r30, 0x0e	; 14
    419a:	05 90       	lpm	r0, Z+
    419c:	f4 91       	lpm	r31, Z
    419e:	e0 2d       	mov	r30, r0
    41a0:	30 97       	sbiw	r30, 0x00	; 0
    41a2:	59 f0       	breq	.+22     	; 0x41ba <menuCheckArrowDown+0x36>
    41a4:	89 30       	cpi	r24, 0x09	; 9
    41a6:	39 f4       	brne	.+14     	; 0x41b6 <menuCheckArrowDown+0x32>
    41a8:	80 81       	ld	r24, Z
    41aa:	81 11       	cpse	r24, r1
    41ac:	02 c0       	rjmp	.+4      	; 0x41b2 <menuCheckArrowDown+0x2e>
    41ae:	0a c9       	rjmp	.-3564   	; 0x33c4 <softkeyOn>
    41b0:	08 95       	ret
    41b2:	0e c9       	rjmp	.-3556   	; 0x33d0 <softkeyOff>
    41b4:	08 95       	ret
    41b6:	00 c9       	rjmp	.-3584   	; 0x33b8 <softkeyDown>
    41b8:	08 95       	ret
    41ba:	81 e0       	ldi	r24, 0x01	; 1
    41bc:	0c 94 20 32 	jmp	0x6440	; 0x6440 <keylabel_clr>
    41c0:	08 95       	ret

000041c2 <menuCurrMenuToLCD>:
    41c2:	cf 93       	push	r28
    41c4:	89 e4       	ldi	r24, 0x49	; 73
    41c6:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    41ca:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    41ce:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    41d2:	c4 91       	lpm	r28, Z
    41d4:	c0 7c       	andi	r28, 0xC0	; 192
    41d6:	c0 38       	cpi	r28, 0x80	; 128
    41d8:	39 f4       	brne	.+14     	; 0x41e8 <menuCurrMenuToLCD+0x26>
    41da:	80 e2       	ldi	r24, 0x20	; 32
    41dc:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    41e0:	82 e0       	ldi	r24, 0x02	; 2
    41e2:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    41e6:	04 c0       	rjmp	.+8      	; 0x41f0 <menuCurrMenuToLCD+0x2e>
    41e8:	8f e7       	ldi	r24, 0x7F	; 127
    41ea:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    41ee:	d8 d8       	rcall	.-3664   	; 0x33a0 <softkeyLeft>
    41f0:	c0 3c       	cpi	r28, 0xC0	; 192
    41f2:	29 f4       	brne	.+10     	; 0x41fe <menuCurrMenuToLCD+0x3c>
    41f4:	83 e0       	ldi	r24, 0x03	; 3
    41f6:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    41fa:	c0 e2       	ldi	r28, 0x20	; 32
    41fc:	02 c0       	rjmp	.+4      	; 0x4202 <menuCurrMenuToLCD+0x40>
    41fe:	d6 d8       	rcall	.-3668   	; 0x33ac <softkeyRight>
    4200:	ce e7       	ldi	r28, 0x7E	; 126
    4202:	ec d8       	rcall	.-3624   	; 0x33dc <softkeyUp>
    4204:	bf df       	rcall	.-130    	; 0x4184 <menuCheckArrowDown>
    4206:	80 91 56 05 	lds	r24, 0x0556	; 0x800556 <currentMenu>
    420a:	90 91 57 05 	lds	r25, 0x0557	; 0x800557 <currentMenu+0x1>
    420e:	6c 2f       	mov	r22, r28
    4210:	02 96       	adiw	r24, 0x02	; 2
    4212:	05 de       	rcall	.-1014   	; 0x3e1e <menuTextOut>
    4214:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    4218:	96 df       	rcall	.-212    	; 0x4146 <menuCursorSetMenu>
    421a:	cf 91       	pop	r28
    421c:	08 95       	ret

0000421e <menuItemChanged>:
    421e:	8f ef       	ldi	r24, 0xFF	; 255
    4220:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <swTimer+0xe>
    4224:	80 91 56 05 	lds	r24, 0x0556	; 0x800556 <currentMenu>
    4228:	90 91 57 05 	lds	r25, 0x0557	; 0x800557 <currentMenu+0x1>
    422c:	fc 01       	movw	r30, r24
    422e:	24 91       	lpm	r18, Z
    4230:	62 2f       	mov	r22, r18
    4232:	6f 73       	andi	r22, 0x3F	; 63
    4234:	62 30       	cpi	r22, 0x02	; 2
    4236:	08 f4       	brcc	.+2      	; 0x423a <menuItemChanged+0x1c>
    4238:	49 c0       	rjmp	.+146    	; 0x42cc <menuItemChanged+0xae>
    423a:	9c 01       	movw	r18, r24
    423c:	22 5f       	subi	r18, 0xF2	; 242
    423e:	3f 4f       	sbci	r19, 0xFF	; 255
    4240:	f9 01       	movw	r30, r18
    4242:	45 91       	lpm	r20, Z+
    4244:	55 91       	lpm	r21, Z+
    4246:	41 15       	cp	r20, r1
    4248:	51 05       	cpc	r21, r1
    424a:	09 f4       	brne	.+2      	; 0x424e <menuItemChanged+0x30>
    424c:	3f c0       	rjmp	.+126    	; 0x42cc <menuItemChanged+0xae>
    424e:	e6 2f       	mov	r30, r22
    4250:	f0 e0       	ldi	r31, 0x00	; 0
    4252:	31 97       	sbiw	r30, 0x01	; 1
    4254:	9f 01       	movw	r18, r30
    4256:	22 0f       	add	r18, r18
    4258:	33 1f       	adc	r19, r19
    425a:	22 0f       	add	r18, r18
    425c:	33 1f       	adc	r19, r19
    425e:	22 0f       	add	r18, r18
    4260:	33 1f       	adc	r19, r19
    4262:	e2 0f       	add	r30, r18
    4264:	f3 1f       	adc	r31, r19
    4266:	eb 56       	subi	r30, 0x6B	; 107
    4268:	fc 4f       	sbci	r31, 0xFC	; 252
    426a:	f0 93 27 05 	sts	0x0527, r31	; 0x800527 <pNibbleInfo+0x1>
    426e:	e0 93 26 05 	sts	0x0526, r30	; 0x800526 <pNibbleInfo>
    4272:	24 91       	lpm	r18, Z
    4274:	20 93 4d 05 	sts	0x054D, r18	; 0x80054d <nibbleCount>
    4278:	fc 01       	movw	r30, r24
    427a:	25 91       	lpm	r18, Z+
    427c:	2f 73       	andi	r18, 0x3F	; 63
    427e:	20 93 22 05 	sts	0x0522, r18	; 0x800522 <dataType>
    4282:	24 91       	lpm	r18, Z
    4284:	22 23       	and	r18, r18
    4286:	2c f4       	brge	.+10     	; 0x4292 <menuItemChanged+0x74>
    4288:	20 91 5e 05 	lds	r18, 0x055E	; 0x80055e <DataAdressOffset>
    428c:	30 91 5f 05 	lds	r19, 0x055F	; 0x80055f <DataAdressOffset+0x1>
    4290:	02 c0       	rjmp	.+4      	; 0x4296 <menuItemChanged+0x78>
    4292:	20 e0       	ldi	r18, 0x00	; 0
    4294:	30 e0       	ldi	r19, 0x00	; 0
    4296:	24 0f       	add	r18, r20
    4298:	35 1f       	adc	r19, r21
    429a:	fc 01       	movw	r30, r24
    429c:	84 91       	lpm	r24, Z
    429e:	8f 73       	andi	r24, 0x3F	; 63
    42a0:	8b 30       	cpi	r24, 0x0B	; 11
    42a2:	71 f4       	brne	.+28     	; 0x42c0 <menuItemChanged+0xa2>
    42a4:	f9 01       	movw	r30, r18
    42a6:	80 81       	ld	r24, Z
    42a8:	91 81       	ldd	r25, Z+1	; 0x01
    42aa:	a2 81       	ldd	r26, Z+2	; 0x02
    42ac:	b3 81       	ldd	r27, Z+3	; 0x03
    42ae:	80 93 4f 05 	sts	0x054F, r24	; 0x80054f <dataEntry32>
    42b2:	90 93 50 05 	sts	0x0550, r25	; 0x800550 <dataEntry32+0x1>
    42b6:	a0 93 51 05 	sts	0x0551, r26	; 0x800551 <dataEntry32+0x2>
    42ba:	b0 93 52 05 	sts	0x0552, r27	; 0x800552 <dataEntry32+0x3>
    42be:	04 c0       	rjmp	.+8      	; 0x42c8 <menuItemChanged+0xaa>
    42c0:	f9 01       	movw	r30, r18
    42c2:	80 81       	ld	r24, Z
    42c4:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <dataEntry>
    42c8:	df dd       	rcall	.-1090   	; 0x3e88 <menuDisplayValue>
    42ca:	07 c0       	rjmp	.+14     	; 0x42da <menuItemChanged+0xbc>
    42cc:	45 df       	rcall	.-374    	; 0x4158 <menu_ClearDataDisp>
    42ce:	85 e9       	ldi	r24, 0x95	; 149
    42d0:	93 e0       	ldi	r25, 0x03	; 3
    42d2:	90 93 27 05 	sts	0x0527, r25	; 0x800527 <pNibbleInfo+0x1>
    42d6:	80 93 26 05 	sts	0x0526, r24	; 0x800526 <pNibbleInfo>
    42da:	54 df       	rcall	.-344    	; 0x4184 <menuCheckArrowDown>
    42dc:	34 cf       	rjmp	.-408    	; 0x4146 <menuCursorSetMenu>
    42de:	08 95       	ret

000042e0 <menu_InitLCD>:
    42e0:	36 df       	rcall	.-404    	; 0x414e <menuClearExtraDisp>
    42e2:	9d df       	rcall	.-198    	; 0x421e <menuItemChanged>
    42e4:	b7 dd       	rcall	.-1170   	; 0x3e54 <menuParentMenuToLCD>
    42e6:	6d df       	rcall	.-294    	; 0x41c2 <menuCurrMenuToLCD>
    42e8:	0c 94 bc 31 	jmp	0x6378	; 0x6378 <lcd_cursosblink>
    42ec:	08 95       	ret

000042ee <menu_ProcessMessage>:
    42ee:	cf 93       	push	r28
    42f0:	c8 2f       	mov	r28, r24
    42f2:	0e 94 bc 31 	call	0x6378	; 0x6378 <lcd_cursosblink>
    42f6:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    42fa:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    42fe:	84 91       	lpm	r24, Z
    4300:	8f 73       	andi	r24, 0x3F	; 63
    4302:	81 30       	cpi	r24, 0x01	; 1
    4304:	29 f0       	breq	.+10     	; 0x4310 <menu_ProcessMessage+0x22>
    4306:	80 91 23 05 	lds	r24, 0x0523	; 0x800523 <nibbleIndex>
    430a:	8f 3f       	cpi	r24, 0xFF	; 255
    430c:	09 f0       	breq	.+2      	; 0x4310 <menu_ProcessMessage+0x22>
    430e:	5b c1       	rjmp	.+694    	; 0x45c6 <menu_ProcessMessage+0x2d8>
    4310:	31 96       	adiw	r30, 0x01	; 1
    4312:	84 91       	lpm	r24, Z
    4314:	86 ff       	sbrs	r24, 6
    4316:	02 c0       	rjmp	.+4      	; 0x431c <menu_ProcessMessage+0x2e>
    4318:	1a df       	rcall	.-460    	; 0x414e <menuClearExtraDisp>
    431a:	15 df       	rcall	.-470    	; 0x4146 <menuCursorSetMenu>
    431c:	60 91 56 05 	lds	r22, 0x0556	; 0x800556 <currentMenu>
    4320:	70 91 57 05 	lds	r23, 0x0557	; 0x800557 <currentMenu+0x1>
    4324:	cb 01       	movw	r24, r22
    4326:	01 96       	adiw	r24, 0x01	; 1
    4328:	fc 01       	movw	r30, r24
    432a:	84 91       	lpm	r24, Z
    432c:	98 2f       	mov	r25, r24
    432e:	90 72       	andi	r25, 0x20	; 32
    4330:	85 ff       	sbrs	r24, 5
    4332:	1f c0       	rjmp	.+62     	; 0x4372 <menu_ProcessMessage+0x84>
    4334:	9b 01       	movw	r18, r22
    4336:	20 5f       	subi	r18, 0xF0	; 240
    4338:	3f 4f       	sbci	r19, 0xFF	; 255
    433a:	f9 01       	movw	r30, r18
    433c:	25 91       	lpm	r18, Z+
    433e:	35 91       	lpm	r19, Z+
    4340:	21 15       	cp	r18, r1
    4342:	31 05       	cpc	r19, r1
    4344:	b1 f0       	breq	.+44     	; 0x4372 <menu_ProcessMessage+0x84>
    4346:	40 91 23 05 	lds	r20, 0x0523	; 0x800523 <nibbleIndex>
    434a:	4f 3f       	cpi	r20, 0xFF	; 255
    434c:	91 f0       	breq	.+36     	; 0x4372 <menu_ProcessMessage+0x84>
    434e:	8c 2f       	mov	r24, r28
    4350:	f9 01       	movw	r30, r18
    4352:	19 95       	eicall
    4354:	8f 3f       	cpi	r24, 0xFF	; 255
    4356:	21 f4       	brne	.+8      	; 0x4360 <menu_ProcessMessage+0x72>
    4358:	10 92 23 05 	sts	0x0523, r1	; 0x800523 <nibbleIndex>
    435c:	80 e0       	ldi	r24, 0x00	; 0
    435e:	f5 c1       	rjmp	.+1002   	; 0x474a <menu_ProcessMessage+0x45c>
    4360:	f6 de       	rcall	.-532    	; 0x414e <menuClearExtraDisp>
    4362:	fa de       	rcall	.-524    	; 0x4158 <menu_ClearDataDisp>
    4364:	f0 de       	rcall	.-544    	; 0x4146 <menuCursorSetMenu>
    4366:	8f ef       	ldi	r24, 0xFF	; 255
    4368:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    436c:	2a df       	rcall	.-428    	; 0x41c2 <menuCurrMenuToLCD>
    436e:	80 e0       	ldi	r24, 0x00	; 0
    4370:	ec c1       	rjmp	.+984    	; 0x474a <menu_ProcessMessage+0x45c>
    4372:	c3 30       	cpi	r28, 0x03	; 3
    4374:	09 f4       	brne	.+2      	; 0x4378 <menu_ProcessMessage+0x8a>
    4376:	64 c0       	rjmp	.+200    	; 0x4440 <menu_ProcessMessage+0x152>
    4378:	28 f4       	brcc	.+10     	; 0x4384 <menu_ProcessMessage+0x96>
    437a:	c1 30       	cpi	r28, 0x01	; 1
    437c:	51 f0       	breq	.+20     	; 0x4392 <menu_ProcessMessage+0xa4>
    437e:	c2 30       	cpi	r28, 0x02	; 2
    4380:	31 f1       	breq	.+76     	; 0x43ce <menu_ProcessMessage+0xe0>
    4382:	ce c1       	rjmp	.+924    	; 0x4720 <menu_ProcessMessage+0x432>
    4384:	c5 30       	cpi	r28, 0x05	; 5
    4386:	09 f4       	brne	.+2      	; 0x438a <menu_ProcessMessage+0x9c>
    4388:	5b c0       	rjmp	.+182    	; 0x4440 <menu_ProcessMessage+0x152>
    438a:	90 f0       	brcs	.+36     	; 0x43b0 <menu_ProcessMessage+0xc2>
    438c:	c6 30       	cpi	r28, 0x06	; 6
    438e:	f9 f0       	breq	.+62     	; 0x43ce <menu_ProcessMessage+0xe0>
    4390:	c7 c1       	rjmp	.+910    	; 0x4720 <menu_ProcessMessage+0x432>
    4392:	fb 01       	movw	r30, r22
    4394:	84 91       	lpm	r24, Z
    4396:	80 7c       	andi	r24, 0xC0	; 192
    4398:	80 3c       	cpi	r24, 0xC0	; 192
    439a:	09 f4       	brne	.+2      	; 0x439e <menu_ProcessMessage+0xb0>
    439c:	c3 c1       	rjmp	.+902    	; 0x4724 <menu_ProcessMessage+0x436>
    439e:	74 96       	adiw	r30, 0x14	; 20
    43a0:	f0 93 57 05 	sts	0x0557, r31	; 0x800557 <currentMenu+0x1>
    43a4:	e0 93 56 05 	sts	0x0556, r30	; 0x800556 <currentMenu>
    43a8:	3a df       	rcall	.-396    	; 0x421e <menuItemChanged>
    43aa:	0b df       	rcall	.-490    	; 0x41c2 <menuCurrMenuToLCD>
    43ac:	80 e0       	ldi	r24, 0x00	; 0
    43ae:	cd c1       	rjmp	.+922    	; 0x474a <menu_ProcessMessage+0x45c>
    43b0:	fb 01       	movw	r30, r22
    43b2:	84 91       	lpm	r24, Z
    43b4:	80 7c       	andi	r24, 0xC0	; 192
    43b6:	80 38       	cpi	r24, 0x80	; 128
    43b8:	09 f4       	brne	.+2      	; 0x43bc <menu_ProcessMessage+0xce>
    43ba:	b6 c1       	rjmp	.+876    	; 0x4728 <menu_ProcessMessage+0x43a>
    43bc:	74 97       	sbiw	r30, 0x14	; 20
    43be:	f0 93 57 05 	sts	0x0557, r31	; 0x800557 <currentMenu+0x1>
    43c2:	e0 93 56 05 	sts	0x0556, r30	; 0x800556 <currentMenu>
    43c6:	2b df       	rcall	.-426    	; 0x421e <menuItemChanged>
    43c8:	fc de       	rcall	.-520    	; 0x41c2 <menuCurrMenuToLCD>
    43ca:	80 e0       	ldi	r24, 0x00	; 0
    43cc:	be c1       	rjmp	.+892    	; 0x474a <menu_ProcessMessage+0x45c>
    43ce:	84 ff       	sbrs	r24, 4
    43d0:	04 c0       	rjmp	.+8      	; 0x43da <menu_ProcessMessage+0xec>
    43d2:	10 92 7b 05 	sts	0x057B, r1	; 0x80057b <menuVMenuSoftKey+0x1>
    43d6:	10 92 7a 05 	sts	0x057A, r1	; 0x80057a <menuVMenuSoftKey>
    43da:	e0 91 15 05 	lds	r30, 0x0515	; 0x800515 <menuStackIndex>
    43de:	ee 23       	and	r30, r30
    43e0:	e9 f0       	breq	.+58     	; 0x441c <menu_ProcessMessage+0x12e>
    43e2:	e1 50       	subi	r30, 0x01	; 1
    43e4:	e0 93 15 05 	sts	0x0515, r30	; 0x800515 <menuStackIndex>
    43e8:	f0 e0       	ldi	r31, 0x00	; 0
    43ea:	ee 0f       	add	r30, r30
    43ec:	ff 1f       	adc	r31, r31
    43ee:	e8 5d       	subi	r30, 0xD8	; 216
    43f0:	fa 4f       	sbci	r31, 0xFA	; 250
    43f2:	01 90       	ld	r0, Z+
    43f4:	f0 81       	ld	r31, Z
    43f6:	e0 2d       	mov	r30, r0
    43f8:	f0 93 57 05 	sts	0x0557, r31	; 0x800557 <currentMenu+0x1>
    43fc:	e0 93 56 05 	sts	0x0556, r30	; 0x800556 <currentMenu>
    4400:	72 96       	adiw	r30, 0x12	; 18
    4402:	05 90       	lpm	r0, Z+
    4404:	f4 91       	lpm	r31, Z
    4406:	e0 2d       	mov	r30, r0
    4408:	30 97       	sbiw	r30, 0x00	; 0
    440a:	11 f0       	breq	.+4      	; 0x4410 <menu_ProcessMessage+0x122>
    440c:	80 e0       	ldi	r24, 0x00	; 0
    440e:	19 95       	eicall
    4410:	9e de       	rcall	.-708    	; 0x414e <menuClearExtraDisp>
    4412:	20 dd       	rcall	.-1472   	; 0x3e54 <menuParentMenuToLCD>
    4414:	d6 de       	rcall	.-596    	; 0x41c2 <menuCurrMenuToLCD>
    4416:	03 df       	rcall	.-506    	; 0x421e <menuItemChanged>
    4418:	80 e0       	ldi	r24, 0x00	; 0
    441a:	97 c1       	rjmp	.+814    	; 0x474a <menu_ProcessMessage+0x45c>
    441c:	80 e0       	ldi	r24, 0x00	; 0
    441e:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    4422:	81 e0       	ldi	r24, 0x01	; 1
    4424:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    4428:	82 e0       	ldi	r24, 0x02	; 2
    442a:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    442e:	83 e0       	ldi	r24, 0x03	; 3
    4430:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    4434:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    4438:	0e 94 c3 31 	call	0x6386	; 0x6386 <lcd_cursoroff>
    443c:	8f ef       	ldi	r24, 0xFF	; 255
    443e:	85 c1       	rjmp	.+778    	; 0x474a <menu_ProcessMessage+0x45c>
    4440:	fb 01       	movw	r30, r22
    4442:	24 91       	lpm	r18, Z
    4444:	2f 73       	andi	r18, 0x3F	; 63
    4446:	30 e0       	ldi	r19, 0x00	; 0
    4448:	22 30       	cpi	r18, 0x02	; 2
    444a:	31 05       	cpc	r19, r1
    444c:	0c f4       	brge	.+2      	; 0x4450 <menu_ProcessMessage+0x162>
    444e:	3b c0       	rjmp	.+118    	; 0x44c6 <menu_ProcessMessage+0x1d8>
    4450:	70 96       	adiw	r30, 0x10	; 16
    4452:	05 90       	lpm	r0, Z+
    4454:	f4 91       	lpm	r31, Z
    4456:	e0 2d       	mov	r30, r0
    4458:	30 97       	sbiw	r30, 0x00	; 0
    445a:	19 f0       	breq	.+6      	; 0x4462 <menu_ProcessMessage+0x174>
    445c:	8c 2f       	mov	r24, r28
    445e:	19 95       	eicall
    4460:	de de       	rcall	.-580    	; 0x421e <menuItemChanged>
    4462:	20 91 56 05 	lds	r18, 0x0556	; 0x800556 <currentMenu>
    4466:	30 91 57 05 	lds	r19, 0x0557	; 0x800557 <currentMenu+0x1>
    446a:	c9 01       	movw	r24, r18
    446c:	01 96       	adiw	r24, 0x01	; 1
    446e:	fc 01       	movw	r30, r24
    4470:	84 91       	lpm	r24, Z
    4472:	83 fd       	sbrc	r24, 3
    4474:	5b c1       	rjmp	.+694    	; 0x472c <menu_ProcessMessage+0x43e>
    4476:	c9 01       	movw	r24, r18
    4478:	0e 96       	adiw	r24, 0x0e	; 14
    447a:	fc 01       	movw	r30, r24
    447c:	85 91       	lpm	r24, Z+
    447e:	95 91       	lpm	r25, Z+
    4480:	89 2b       	or	r24, r25
    4482:	09 f4       	brne	.+2      	; 0x4486 <menu_ProcessMessage+0x198>
    4484:	55 c1       	rjmp	.+682    	; 0x4730 <menu_ProcessMessage+0x442>
    4486:	f9 01       	movw	r30, r18
    4488:	84 91       	lpm	r24, Z
    448a:	8f 73       	andi	r24, 0x3F	; 63
    448c:	89 30       	cpi	r24, 0x09	; 9
    448e:	b1 f4       	brne	.+44     	; 0x44bc <menu_ProcessMessage+0x1ce>
    4490:	61 e0       	ldi	r22, 0x01	; 1
    4492:	80 e0       	ldi	r24, 0x00	; 0
    4494:	32 da       	rcall	.-2972   	; 0x38fa <nibbleChange>
    4496:	df db       	rcall	.-2114   	; 0x3c56 <nibbleToData>
    4498:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    449c:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    44a0:	3e 96       	adiw	r30, 0x0e	; 14
    44a2:	05 90       	lpm	r0, Z+
    44a4:	f4 91       	lpm	r31, Z
    44a6:	e0 2d       	mov	r30, r0
    44a8:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    44ac:	80 83       	st	Z, r24
    44ae:	ec dc       	rcall	.-1576   	; 0x3e88 <menuDisplayValue>
    44b0:	69 de       	rcall	.-814    	; 0x4184 <menuCheckArrowDown>
    44b2:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    44b6:	47 de       	rcall	.-882    	; 0x4146 <menuCursorSetMenu>
    44b8:	80 e0       	ldi	r24, 0x00	; 0
    44ba:	47 c1       	rjmp	.+654    	; 0x474a <menu_ProcessMessage+0x45c>
    44bc:	10 92 23 05 	sts	0x0523, r1	; 0x800523 <nibbleIndex>
    44c0:	f0 dc       	rcall	.-1568   	; 0x3ea2 <menuCursorSetDataNibble>
    44c2:	80 e0       	ldi	r24, 0x00	; 0
    44c4:	42 c1       	rjmp	.+644    	; 0x474a <menu_ProcessMessage+0x45c>
    44c6:	2f ef       	ldi	r18, 0xFF	; 255
    44c8:	20 93 23 05 	sts	0x0523, r18	; 0x800523 <nibbleIndex>
    44cc:	84 ff       	sbrs	r24, 4
    44ce:	26 c0       	rjmp	.+76     	; 0x451c <menu_ProcessMessage+0x22e>
    44d0:	70 93 7b 05 	sts	0x057B, r23	; 0x80057b <menuVMenuSoftKey+0x1>
    44d4:	60 93 7a 05 	sts	0x057A, r22	; 0x80057a <menuVMenuSoftKey>
    44d8:	e0 91 15 05 	lds	r30, 0x0515	; 0x800515 <menuStackIndex>
    44dc:	ee 23       	and	r30, r30
    44de:	09 f4       	brne	.+2      	; 0x44e2 <menu_ProcessMessage+0x1f4>
    44e0:	29 c1       	rjmp	.+594    	; 0x4734 <menu_ProcessMessage+0x446>
    44e2:	e1 50       	subi	r30, 0x01	; 1
    44e4:	e0 93 15 05 	sts	0x0515, r30	; 0x800515 <menuStackIndex>
    44e8:	f0 e0       	ldi	r31, 0x00	; 0
    44ea:	ee 0f       	add	r30, r30
    44ec:	ff 1f       	adc	r31, r31
    44ee:	e8 5d       	subi	r30, 0xD8	; 216
    44f0:	fa 4f       	sbci	r31, 0xFA	; 250
    44f2:	01 90       	ld	r0, Z+
    44f4:	f0 81       	ld	r31, Z
    44f6:	e0 2d       	mov	r30, r0
    44f8:	f0 93 57 05 	sts	0x0557, r31	; 0x800557 <currentMenu+0x1>
    44fc:	e0 93 56 05 	sts	0x0556, r30	; 0x800556 <currentMenu>
    4500:	72 96       	adiw	r30, 0x12	; 18
    4502:	05 90       	lpm	r0, Z+
    4504:	f4 91       	lpm	r31, Z
    4506:	e0 2d       	mov	r30, r0
    4508:	30 97       	sbiw	r30, 0x00	; 0
    450a:	11 f0       	breq	.+4      	; 0x4510 <menu_ProcessMessage+0x222>
    450c:	80 e0       	ldi	r24, 0x00	; 0
    450e:	19 95       	eicall
    4510:	1e de       	rcall	.-964    	; 0x414e <menuClearExtraDisp>
    4512:	a0 dc       	rcall	.-1728   	; 0x3e54 <menuParentMenuToLCD>
    4514:	56 de       	rcall	.-852    	; 0x41c2 <menuCurrMenuToLCD>
    4516:	83 de       	rcall	.-762    	; 0x421e <menuItemChanged>
    4518:	80 e0       	ldi	r24, 0x00	; 0
    451a:	17 c1       	rjmp	.+558    	; 0x474a <menu_ProcessMessage+0x45c>
    451c:	fb 01       	movw	r30, r22
    451e:	70 96       	adiw	r30, 0x10	; 16
    4520:	05 90       	lpm	r0, Z+
    4522:	f4 91       	lpm	r31, Z
    4524:	e0 2d       	mov	r30, r0
    4526:	30 97       	sbiw	r30, 0x00	; 0
    4528:	99 f0       	breq	.+38     	; 0x4550 <menu_ProcessMessage+0x262>
    452a:	99 23       	and	r25, r25
    452c:	71 f0       	breq	.+28     	; 0x454a <menu_ProcessMessage+0x25c>
    452e:	8f ef       	ldi	r24, 0xFF	; 255
    4530:	19 95       	eicall
    4532:	8f 3f       	cpi	r24, 0xFF	; 255
    4534:	19 f4       	brne	.+6      	; 0x453c <menu_ProcessMessage+0x24e>
    4536:	10 92 23 05 	sts	0x0523, r1	; 0x800523 <nibbleIndex>
    453a:	0a c0       	rjmp	.+20     	; 0x4550 <menu_ProcessMessage+0x262>
    453c:	08 de       	rcall	.-1008   	; 0x414e <menuClearExtraDisp>
    453e:	0c de       	rcall	.-1000   	; 0x4158 <menu_ClearDataDisp>
    4540:	02 de       	rcall	.-1020   	; 0x4146 <menuCursorSetMenu>
    4542:	8f ef       	ldi	r24, 0xFF	; 255
    4544:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    4548:	03 c0       	rjmp	.+6      	; 0x4550 <menu_ProcessMessage+0x262>
    454a:	85 e0       	ldi	r24, 0x05	; 5
    454c:	19 95       	eicall
    454e:	fb dd       	rcall	.-1034   	; 0x4146 <menuCursorSetMenu>
    4550:	20 91 56 05 	lds	r18, 0x0556	; 0x800556 <currentMenu>
    4554:	30 91 57 05 	lds	r19, 0x0557	; 0x800557 <currentMenu+0x1>
    4558:	c9 01       	movw	r24, r18
    455a:	0c 96       	adiw	r24, 0x0c	; 12
    455c:	fc 01       	movw	r30, r24
    455e:	85 91       	lpm	r24, Z+
    4560:	95 91       	lpm	r25, Z+
    4562:	89 2b       	or	r24, r25
    4564:	09 f4       	brne	.+2      	; 0x4568 <menu_ProcessMessage+0x27a>
    4566:	e8 c0       	rjmp	.+464    	; 0x4738 <menu_ProcessMessage+0x44a>
    4568:	a0 91 15 05 	lds	r26, 0x0515	; 0x800515 <menuStackIndex>
    456c:	a0 31       	cpi	r26, 0x10	; 16
    456e:	08 f0       	brcs	.+2      	; 0x4572 <menu_ProcessMessage+0x284>
    4570:	e5 c0       	rjmp	.+458    	; 0x473c <menu_ProcessMessage+0x44e>
    4572:	81 e0       	ldi	r24, 0x01	; 1
    4574:	8a 0f       	add	r24, r26
    4576:	80 93 15 05 	sts	0x0515, r24	; 0x800515 <menuStackIndex>
    457a:	b0 e0       	ldi	r27, 0x00	; 0
    457c:	aa 0f       	add	r26, r26
    457e:	bb 1f       	adc	r27, r27
    4580:	a8 5d       	subi	r26, 0xD8	; 216
    4582:	ba 4f       	sbci	r27, 0xFA	; 250
    4584:	2d 93       	st	X+, r18
    4586:	3c 93       	st	X, r19
    4588:	c9 01       	movw	r24, r18
    458a:	01 96       	adiw	r24, 0x01	; 1
    458c:	fc 01       	movw	r30, r24
    458e:	84 91       	lpm	r24, Z
    4590:	83 ff       	sbrs	r24, 3
    4592:	0b c0       	rjmp	.+22     	; 0x45aa <menu_ProcessMessage+0x2bc>
    4594:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <menuVMenuSoftKey>
    4598:	90 91 7b 05 	lds	r25, 0x057B	; 0x80057b <menuVMenuSoftKey+0x1>
    459c:	00 97       	sbiw	r24, 0x00	; 0
    459e:	29 f0       	breq	.+10     	; 0x45aa <menu_ProcessMessage+0x2bc>
    45a0:	90 93 57 05 	sts	0x0557, r25	; 0x800557 <currentMenu+0x1>
    45a4:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <currentMenu>
    45a8:	08 c0       	rjmp	.+16     	; 0x45ba <menu_ProcessMessage+0x2cc>
    45aa:	f9 01       	movw	r30, r18
    45ac:	3c 96       	adiw	r30, 0x0c	; 12
    45ae:	85 91       	lpm	r24, Z+
    45b0:	95 91       	lpm	r25, Z+
    45b2:	90 93 57 05 	sts	0x0557, r25	; 0x800557 <currentMenu+0x1>
    45b6:	80 93 56 05 	sts	0x0556, r24	; 0x800556 <currentMenu>
    45ba:	c9 dd       	rcall	.-1134   	; 0x414e <menuClearExtraDisp>
    45bc:	4b dc       	rcall	.-1898   	; 0x3e54 <menuParentMenuToLCD>
    45be:	01 de       	rcall	.-1022   	; 0x41c2 <menuCurrMenuToLCD>
    45c0:	2e de       	rcall	.-932    	; 0x421e <menuItemChanged>
    45c2:	80 e0       	ldi	r24, 0x00	; 0
    45c4:	c2 c0       	rjmp	.+388    	; 0x474a <menu_ProcessMessage+0x45c>
    45c6:	c3 30       	cpi	r28, 0x03	; 3
    45c8:	09 f4       	brne	.+2      	; 0x45cc <menu_ProcessMessage+0x2de>
    45ca:	49 c0       	rjmp	.+146    	; 0x465e <menu_ProcessMessage+0x370>
    45cc:	28 f4       	brcc	.+10     	; 0x45d8 <menu_ProcessMessage+0x2ea>
    45ce:	c1 30       	cpi	r28, 0x01	; 1
    45d0:	59 f0       	breq	.+22     	; 0x45e8 <menu_ProcessMessage+0x2fa>
    45d2:	c2 30       	cpi	r28, 0x02	; 2
    45d4:	31 f1       	breq	.+76     	; 0x4622 <menu_ProcessMessage+0x334>
    45d6:	b4 c0       	rjmp	.+360    	; 0x4740 <menu_ProcessMessage+0x452>
    45d8:	c5 30       	cpi	r28, 0x05	; 5
    45da:	09 f4       	brne	.+2      	; 0x45de <menu_ProcessMessage+0x2f0>
    45dc:	5e c0       	rjmp	.+188    	; 0x469a <menu_ProcessMessage+0x3ac>
    45de:	c0 f0       	brcs	.+48     	; 0x4610 <menu_ProcessMessage+0x322>
    45e0:	c6 30       	cpi	r28, 0x06	; 6
    45e2:	09 f4       	brne	.+2      	; 0x45e6 <menu_ProcessMessage+0x2f8>
    45e4:	8a c0       	rjmp	.+276    	; 0x46fa <menu_ProcessMessage+0x40c>
    45e6:	ac c0       	rjmp	.+344    	; 0x4740 <menu_ProcessMessage+0x452>
    45e8:	48 2f       	mov	r20, r24
    45ea:	50 e0       	ldi	r21, 0x00	; 0
    45ec:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <pNibbleInfo>
    45f0:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <pNibbleInfo+0x1>
    45f4:	24 91       	lpm	r18, Z
    45f6:	30 e0       	ldi	r19, 0x00	; 0
    45f8:	21 50       	subi	r18, 0x01	; 1
    45fa:	31 09       	sbc	r19, r1
    45fc:	42 17       	cp	r20, r18
    45fe:	53 07       	cpc	r21, r19
    4600:	0c f0       	brlt	.+2      	; 0x4604 <menu_ProcessMessage+0x316>
    4602:	a0 c0       	rjmp	.+320    	; 0x4744 <menu_ProcessMessage+0x456>
    4604:	8f 5f       	subi	r24, 0xFF	; 255
    4606:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    460a:	4b dc       	rcall	.-1898   	; 0x3ea2 <menuCursorSetDataNibble>
    460c:	80 e0       	ldi	r24, 0x00	; 0
    460e:	9d c0       	rjmp	.+314    	; 0x474a <menu_ProcessMessage+0x45c>
    4610:	88 23       	and	r24, r24
    4612:	09 f4       	brne	.+2      	; 0x4616 <menu_ProcessMessage+0x328>
    4614:	99 c0       	rjmp	.+306    	; 0x4748 <menu_ProcessMessage+0x45a>
    4616:	81 50       	subi	r24, 0x01	; 1
    4618:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    461c:	42 dc       	rcall	.-1916   	; 0x3ea2 <menuCursorSetDataNibble>
    461e:	80 e0       	ldi	r24, 0x00	; 0
    4620:	94 c0       	rjmp	.+296    	; 0x474a <menu_ProcessMessage+0x45c>
    4622:	61 e0       	ldi	r22, 0x01	; 1
    4624:	6a d9       	rcall	.-3372   	; 0x38fa <nibbleChange>
    4626:	17 db       	rcall	.-2514   	; 0x3c56 <nibbleToData>
    4628:	2f dc       	rcall	.-1954   	; 0x3e88 <menuDisplayValue>
    462a:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <dataType>
    462e:	8a 30       	cpi	r24, 0x0A	; 10
    4630:	11 f0       	breq	.+4      	; 0x4636 <menu_ProcessMessage+0x348>
    4632:	8e 30       	cpi	r24, 0x0E	; 14
    4634:	89 f4       	brne	.+34     	; 0x4658 <menu_ProcessMessage+0x36a>
    4636:	20 91 23 05 	lds	r18, 0x0523	; 0x800523 <nibbleIndex>
    463a:	42 2f       	mov	r20, r18
    463c:	50 e0       	ldi	r21, 0x00	; 0
    463e:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <pNibbleInfo>
    4642:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <pNibbleInfo+0x1>
    4646:	84 91       	lpm	r24, Z
    4648:	90 e0       	ldi	r25, 0x00	; 0
    464a:	01 97       	sbiw	r24, 0x01	; 1
    464c:	48 17       	cp	r20, r24
    464e:	59 07       	cpc	r21, r25
    4650:	1c f4       	brge	.+6      	; 0x4658 <menu_ProcessMessage+0x36a>
    4652:	2f 5f       	subi	r18, 0xFF	; 255
    4654:	20 93 23 05 	sts	0x0523, r18	; 0x800523 <nibbleIndex>
    4658:	24 dc       	rcall	.-1976   	; 0x3ea2 <menuCursorSetDataNibble>
    465a:	80 e0       	ldi	r24, 0x00	; 0
    465c:	76 c0       	rjmp	.+236    	; 0x474a <menu_ProcessMessage+0x45c>
    465e:	6f ef       	ldi	r22, 0xFF	; 255
    4660:	4c d9       	rcall	.-3432   	; 0x38fa <nibbleChange>
    4662:	f9 da       	rcall	.-2574   	; 0x3c56 <nibbleToData>
    4664:	11 dc       	rcall	.-2014   	; 0x3e88 <menuDisplayValue>
    4666:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <dataType>
    466a:	8a 30       	cpi	r24, 0x0A	; 10
    466c:	11 f0       	breq	.+4      	; 0x4672 <menu_ProcessMessage+0x384>
    466e:	8e 30       	cpi	r24, 0x0E	; 14
    4670:	89 f4       	brne	.+34     	; 0x4694 <menu_ProcessMessage+0x3a6>
    4672:	20 91 23 05 	lds	r18, 0x0523	; 0x800523 <nibbleIndex>
    4676:	42 2f       	mov	r20, r18
    4678:	50 e0       	ldi	r21, 0x00	; 0
    467a:	e0 91 26 05 	lds	r30, 0x0526	; 0x800526 <pNibbleInfo>
    467e:	f0 91 27 05 	lds	r31, 0x0527	; 0x800527 <pNibbleInfo+0x1>
    4682:	84 91       	lpm	r24, Z
    4684:	90 e0       	ldi	r25, 0x00	; 0
    4686:	01 97       	sbiw	r24, 0x01	; 1
    4688:	48 17       	cp	r20, r24
    468a:	59 07       	cpc	r21, r25
    468c:	1c f4       	brge	.+6      	; 0x4694 <menu_ProcessMessage+0x3a6>
    468e:	2f 5f       	subi	r18, 0xFF	; 255
    4690:	20 93 23 05 	sts	0x0523, r18	; 0x800523 <nibbleIndex>
    4694:	06 dc       	rcall	.-2036   	; 0x3ea2 <menuCursorSetDataNibble>
    4696:	80 e0       	ldi	r24, 0x00	; 0
    4698:	58 c0       	rjmp	.+176    	; 0x474a <menu_ProcessMessage+0x45c>
    469a:	dd da       	rcall	.-2630   	; 0x3c56 <nibbleToData>
    469c:	20 91 56 05 	lds	r18, 0x0556	; 0x800556 <currentMenu>
    46a0:	30 91 57 05 	lds	r19, 0x0557	; 0x800557 <currentMenu+0x1>
    46a4:	c9 01       	movw	r24, r18
    46a6:	0e 96       	adiw	r24, 0x0e	; 14
    46a8:	fc 01       	movw	r30, r24
    46aa:	a5 91       	lpm	r26, Z+
    46ac:	b5 91       	lpm	r27, Z+
    46ae:	10 97       	sbiw	r26, 0x00	; 0
    46b0:	21 f1       	breq	.+72     	; 0x46fa <menu_ProcessMessage+0x40c>
    46b2:	0d 97       	sbiw	r24, 0x0d	; 13
    46b4:	fc 01       	movw	r30, r24
    46b6:	84 91       	lpm	r24, Z
    46b8:	88 23       	and	r24, r24
    46ba:	2c f4       	brge	.+10     	; 0x46c6 <menu_ProcessMessage+0x3d8>
    46bc:	80 91 5e 05 	lds	r24, 0x055E	; 0x80055e <DataAdressOffset>
    46c0:	90 91 5f 05 	lds	r25, 0x055F	; 0x80055f <DataAdressOffset+0x1>
    46c4:	02 c0       	rjmp	.+4      	; 0x46ca <menu_ProcessMessage+0x3dc>
    46c6:	80 e0       	ldi	r24, 0x00	; 0
    46c8:	90 e0       	ldi	r25, 0x00	; 0
    46ca:	a8 0f       	add	r26, r24
    46cc:	b9 1f       	adc	r27, r25
    46ce:	f9 01       	movw	r30, r18
    46d0:	84 91       	lpm	r24, Z
    46d2:	8f 73       	andi	r24, 0x3F	; 63
    46d4:	8b 30       	cpi	r24, 0x0B	; 11
    46d6:	71 f4       	brne	.+28     	; 0x46f4 <menu_ProcessMessage+0x406>
    46d8:	40 91 4f 05 	lds	r20, 0x054F	; 0x80054f <dataEntry32>
    46dc:	50 91 50 05 	lds	r21, 0x0550	; 0x800550 <dataEntry32+0x1>
    46e0:	60 91 51 05 	lds	r22, 0x0551	; 0x800551 <dataEntry32+0x2>
    46e4:	70 91 52 05 	lds	r23, 0x0552	; 0x800552 <dataEntry32+0x3>
    46e8:	4d 93       	st	X+, r20
    46ea:	5d 93       	st	X+, r21
    46ec:	6d 93       	st	X+, r22
    46ee:	7c 93       	st	X, r23
    46f0:	13 97       	sbiw	r26, 0x03	; 3
    46f2:	03 c0       	rjmp	.+6      	; 0x46fa <menu_ProcessMessage+0x40c>
    46f4:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <dataEntry>
    46f8:	8c 93       	st	X, r24
    46fa:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    46fe:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    4702:	72 96       	adiw	r30, 0x12	; 18
    4704:	05 90       	lpm	r0, Z+
    4706:	f4 91       	lpm	r31, Z
    4708:	e0 2d       	mov	r30, r0
    470a:	30 97       	sbiw	r30, 0x00	; 0
    470c:	11 f0       	breq	.+4      	; 0x4712 <menu_ProcessMessage+0x424>
    470e:	8c 2f       	mov	r24, r28
    4710:	19 95       	eicall
    4712:	8f ef       	ldi	r24, 0xFF	; 255
    4714:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <nibbleIndex>
    4718:	54 dd       	rcall	.-1368   	; 0x41c2 <menuCurrMenuToLCD>
    471a:	81 dd       	rcall	.-1278   	; 0x421e <menuItemChanged>
    471c:	80 e0       	ldi	r24, 0x00	; 0
    471e:	15 c0       	rjmp	.+42     	; 0x474a <menu_ProcessMessage+0x45c>
    4720:	80 e0       	ldi	r24, 0x00	; 0
    4722:	13 c0       	rjmp	.+38     	; 0x474a <menu_ProcessMessage+0x45c>
    4724:	80 e0       	ldi	r24, 0x00	; 0
    4726:	11 c0       	rjmp	.+34     	; 0x474a <menu_ProcessMessage+0x45c>
    4728:	80 e0       	ldi	r24, 0x00	; 0
    472a:	0f c0       	rjmp	.+30     	; 0x474a <menu_ProcessMessage+0x45c>
    472c:	80 e0       	ldi	r24, 0x00	; 0
    472e:	0d c0       	rjmp	.+26     	; 0x474a <menu_ProcessMessage+0x45c>
    4730:	80 e0       	ldi	r24, 0x00	; 0
    4732:	0b c0       	rjmp	.+22     	; 0x474a <menu_ProcessMessage+0x45c>
    4734:	80 e0       	ldi	r24, 0x00	; 0
    4736:	09 c0       	rjmp	.+18     	; 0x474a <menu_ProcessMessage+0x45c>
    4738:	80 e0       	ldi	r24, 0x00	; 0
    473a:	07 c0       	rjmp	.+14     	; 0x474a <menu_ProcessMessage+0x45c>
    473c:	80 e0       	ldi	r24, 0x00	; 0
    473e:	05 c0       	rjmp	.+10     	; 0x474a <menu_ProcessMessage+0x45c>
    4740:	80 e0       	ldi	r24, 0x00	; 0
    4742:	03 c0       	rjmp	.+6      	; 0x474a <menu_ProcessMessage+0x45c>
    4744:	80 e0       	ldi	r24, 0x00	; 0
    4746:	01 c0       	rjmp	.+2      	; 0x474a <menu_ProcessMessage+0x45c>
    4748:	80 e0       	ldi	r24, 0x00	; 0
    474a:	cf 91       	pop	r28
    474c:	08 95       	ret

0000474e <displayMenuMessage_P>:
    474e:	0f 93       	push	r16
    4750:	1f 93       	push	r17
    4752:	cf 93       	push	r28
    4754:	df 93       	push	r29
    4756:	8c 01       	movw	r16, r24
    4758:	d0 91 56 03 	lds	r29, 0x0356	; 0x800356 <lcd_cursorPos>
    475c:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    4760:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    4764:	84 91       	lpm	r24, Z
    4766:	8f 73       	andi	r24, 0x3F	; 63
    4768:	81 30       	cpi	r24, 0x01	; 1
    476a:	39 f4       	brne	.+14     	; 0x477a <displayMenuMessage_P+0x2c>
    476c:	8e e1       	ldi	r24, 0x1E	; 30
    476e:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4772:	81 e0       	ldi	r24, 0x01	; 1
    4774:	80 93 4b 05 	sts	0x054B, r24	; 0x80054b <displayMessageArea>
    4778:	05 c0       	rjmp	.+10     	; 0x4784 <displayMenuMessage_P+0x36>
    477a:	84 e1       	ldi	r24, 0x14	; 20
    477c:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4780:	10 92 4b 05 	sts	0x054B, r1	; 0x80054b <displayMessageArea>
    4784:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    4788:	c8 01       	movw	r24, r16
    478a:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    478e:	8d 2f       	mov	r24, r29
    4790:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4794:	9f b7       	in	r25, 0x3f	; 63
    4796:	f8 94       	cli
    4798:	81 e0       	ldi	r24, 0x01	; 1
    479a:	06 c0       	rjmp	.+12     	; 0x47a8 <displayMenuMessage_P+0x5a>
    479c:	ed e2       	ldi	r30, 0x2D	; 45
    479e:	f2 e0       	ldi	r31, 0x02	; 2
    47a0:	84 e6       	ldi	r24, 0x64	; 100
    47a2:	86 87       	std	Z+14, r24	; 0x0e
    47a4:	17 86       	std	Z+15, r1	; 0x0f
    47a6:	80 e0       	ldi	r24, 0x00	; 0
    47a8:	81 11       	cpse	r24, r1
    47aa:	f8 cf       	rjmp	.-16     	; 0x479c <displayMenuMessage_P+0x4e>
    47ac:	9f bf       	out	0x3f, r25	; 63
    47ae:	8c 2f       	mov	r24, r28
    47b0:	df 91       	pop	r29
    47b2:	cf 91       	pop	r28
    47b4:	1f 91       	pop	r17
    47b6:	0f 91       	pop	r16
    47b8:	08 95       	ret

000047ba <menu_OnEnterMidiPanic>:
    47ba:	83 e5       	ldi	r24, 0x53	; 83
    47bc:	93 e0       	ldi	r25, 0x03	; 3
    47be:	c7 df       	rcall	.-114    	; 0x474e <displayMenuMessage_P>
    47c0:	0e 94 ca 2d 	call	0x5b94	; 0x5b94 <midiSendAllNotesOff>
    47c4:	c0 dc       	rcall	.-1664   	; 0x4146 <menuCursorSetMenu>
    47c6:	80 e0       	ldi	r24, 0x00	; 0
    47c8:	08 95       	ret

000047ca <menu_ModuleTestExecute>:
    47ca:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <menu_TestModuleBitCounter>
    47ce:	8f 3f       	cpi	r24, 0xFF	; 255
    47d0:	11 f0       	breq	.+4      	; 0x47d6 <menu_ModuleTestExecute+0xc>
    47d2:	8d 3f       	cpi	r24, 0xFD	; 253
    47d4:	71 f5       	brne	.+92     	; 0x4832 <menu_ModuleTestExecute+0x68>
    47d6:	0e 94 c3 31 	call	0x6386	; 0x6386 <lcd_cursoroff>
    47da:	be dc       	rcall	.-1668   	; 0x4158 <menu_ClearDataDisp>
    47dc:	10 92 a0 07 	sts	0x07A0, r1	; 0x8007a0 <msgPipe_Handling>
    47e0:	90 e0       	ldi	r25, 0x00	; 0
    47e2:	e7 e4       	ldi	r30, 0x47	; 71
    47e4:	f2 e0       	ldi	r31, 0x02	; 2
    47e6:	07 c0       	rjmp	.+14     	; 0x47f6 <menu_ModuleTestExecute+0x2c>
    47e8:	21 81       	ldd	r18, Z+1	; 0x01
    47ea:	80 91 6f 05 	lds	r24, 0x056F	; 0x80056f <menu_TestModulePattern>
    47ee:	82 2b       	or	r24, r18
    47f0:	81 83       	std	Z+1, r24	; 0x01
    47f2:	38 96       	adiw	r30, 0x08	; 8
    47f4:	9f 5f       	subi	r25, 0xFF	; 255
    47f6:	90 32       	cpi	r25, 0x20	; 32
    47f8:	b8 f3       	brcs	.-18     	; 0x47e8 <menu_ModuleTestExecute+0x1e>
    47fa:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <menu_TestModuleBitCounter>
    47fe:	8f 3f       	cpi	r24, 0xFF	; 255
    4800:	19 f4       	brne	.+6      	; 0x4808 <menu_ModuleTestExecute+0x3e>
    4802:	10 92 53 05 	sts	0x0553, r1	; 0x800553 <menu_TestModuleBitCounter>
    4806:	5b c0       	rjmp	.+182    	; 0x48be <menu_ModuleTestExecute+0xf4>
    4808:	8d e4       	ldi	r24, 0x4D	; 77
    480a:	93 e0       	ldi	r25, 0x03	; 3
    480c:	a0 df       	rcall	.-192    	; 0x474e <displayMenuMessage_P>
    480e:	8e ef       	ldi	r24, 0xFE	; 254
    4810:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <menu_TestModuleBitCounter>
    4814:	9f b7       	in	r25, 0x3f	; 63
    4816:	f8 94       	cli
    4818:	81 e0       	ldi	r24, 0x01	; 1
    481a:	06 c0       	rjmp	.+12     	; 0x4828 <menu_ModuleTestExecute+0x5e>
    481c:	ed e2       	ldi	r30, 0x2D	; 45
    481e:	f2 e0       	ldi	r31, 0x02	; 2
    4820:	82 e0       	ldi	r24, 0x02	; 2
    4822:	84 87       	std	Z+12, r24	; 0x0c
    4824:	85 87       	std	Z+13, r24	; 0x0d
    4826:	80 e0       	ldi	r24, 0x00	; 0
    4828:	81 11       	cpse	r24, r1
    482a:	f8 cf       	rjmp	.-16     	; 0x481c <menu_ModuleTestExecute+0x52>
    482c:	9f bf       	out	0x3f, r25	; 63
    482e:	8b dc       	rcall	.-1770   	; 0x4146 <menuCursorSetMenu>
    4830:	46 c0       	rjmp	.+140    	; 0x48be <menu_ModuleTestExecute+0xf4>
    4832:	8e 3f       	cpi	r24, 0xFE	; 254
    4834:	41 f4       	brne	.+16     	; 0x4846 <menu_ModuleTestExecute+0x7c>
    4836:	8f ef       	ldi	r24, 0xFF	; 255
    4838:	80 93 a0 07 	sts	0x07A0, r24	; 0x8007a0 <msgPipe_Handling>
    483c:	10 92 6f 05 	sts	0x056F, r1	; 0x80056f <menu_TestModulePattern>
    4840:	0e 94 bc 31 	call	0x6378	; 0x6378 <lcd_cursosblink>
    4844:	3c c0       	rjmp	.+120    	; 0x48be <menu_ModuleTestExecute+0xf4>
    4846:	40 91 16 05 	lds	r20, 0x0516	; 0x800516 <menu_TestModuleErrorList>
    484a:	50 91 17 05 	lds	r21, 0x0517	; 0x800517 <menu_TestModuleErrorList+0x1>
    484e:	60 91 18 05 	lds	r22, 0x0518	; 0x800518 <menu_TestModuleErrorList+0x2>
    4852:	70 91 19 05 	lds	r23, 0x0519	; 0x800519 <menu_TestModuleErrorList+0x3>
    4856:	76 95       	lsr	r23
    4858:	67 95       	ror	r22
    485a:	57 95       	ror	r21
    485c:	47 95       	ror	r20
    485e:	40 93 16 05 	sts	0x0516, r20	; 0x800516 <menu_TestModuleErrorList>
    4862:	50 93 17 05 	sts	0x0517, r21	; 0x800517 <menu_TestModuleErrorList+0x1>
    4866:	60 93 18 05 	sts	0x0518, r22	; 0x800518 <menu_TestModuleErrorList+0x2>
    486a:	70 93 19 05 	sts	0x0519, r23	; 0x800519 <menu_TestModuleErrorList+0x3>
    486e:	e8 2f       	mov	r30, r24
    4870:	f0 e0       	ldi	r31, 0x00	; 0
    4872:	df 01       	movw	r26, r30
    4874:	aa 0f       	add	r26, r26
    4876:	bb 1f       	adc	r27, r27
    4878:	aa 0f       	add	r26, r26
    487a:	bb 1f       	adc	r27, r27
    487c:	aa 0f       	add	r26, r26
    487e:	bb 1f       	adc	r27, r27
    4880:	a9 5b       	subi	r26, 0xB9	; 185
    4882:	bd 4f       	sbci	r27, 0xFD	; 253
    4884:	16 96       	adiw	r26, 0x06	; 6
    4886:	2c 91       	ld	r18, X
    4888:	90 91 6f 05 	lds	r25, 0x056F	; 0x80056f <menu_TestModulePattern>
    488c:	29 23       	and	r18, r25
    488e:	49 f4       	brne	.+18     	; 0x48a2 <menu_ModuleTestExecute+0xd8>
    4890:	70 68       	ori	r23, 0x80	; 128
    4892:	40 93 16 05 	sts	0x0516, r20	; 0x800516 <menu_TestModuleErrorList>
    4896:	50 93 17 05 	sts	0x0517, r21	; 0x800517 <menu_TestModuleErrorList+0x1>
    489a:	60 93 18 05 	sts	0x0518, r22	; 0x800518 <menu_TestModuleErrorList+0x2>
    489e:	70 93 19 05 	sts	0x0519, r23	; 0x800519 <menu_TestModuleErrorList+0x3>
    48a2:	ee 0f       	add	r30, r30
    48a4:	ff 1f       	adc	r31, r31
    48a6:	ee 0f       	add	r30, r30
    48a8:	ff 1f       	adc	r31, r31
    48aa:	ee 0f       	add	r30, r30
    48ac:	ff 1f       	adc	r31, r31
    48ae:	e9 5b       	subi	r30, 0xB9	; 185
    48b0:	fd 4f       	sbci	r31, 0xFD	; 253
    48b2:	21 81       	ldd	r18, Z+1	; 0x01
    48b4:	92 2b       	or	r25, r18
    48b6:	91 83       	std	Z+1, r25	; 0x01
    48b8:	8f 5f       	subi	r24, 0xFF	; 255
    48ba:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <menu_TestModuleBitCounter>
    48be:	e0 91 53 05 	lds	r30, 0x0553	; 0x800553 <menu_TestModuleBitCounter>
    48c2:	e0 32       	cpi	r30, 0x20	; 32
    48c4:	28 f5       	brcc	.+74     	; 0x4910 <menu_ModuleTestExecute+0x146>
    48c6:	f0 e0       	ldi	r31, 0x00	; 0
    48c8:	ee 0f       	add	r30, r30
    48ca:	ff 1f       	adc	r31, r31
    48cc:	ee 0f       	add	r30, r30
    48ce:	ff 1f       	adc	r31, r31
    48d0:	ee 0f       	add	r30, r30
    48d2:	ff 1f       	adc	r31, r31
    48d4:	e9 5b       	subi	r30, 0xB9	; 185
    48d6:	fd 4f       	sbci	r31, 0xFD	; 253
    48d8:	80 91 6f 05 	lds	r24, 0x056F	; 0x80056f <menu_TestModulePattern>
    48dc:	98 2f       	mov	r25, r24
    48de:	90 95       	com	r25
    48e0:	81 81       	ldd	r24, Z+1	; 0x01
    48e2:	89 23       	and	r24, r25
    48e4:	81 83       	std	Z+1, r24	; 0x01
    48e6:	8e e1       	ldi	r24, 0x1E	; 30
    48e8:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    48ec:	80 91 53 05 	lds	r24, 0x0553	; 0x800553 <menu_TestModuleBitCounter>
    48f0:	0e 94 27 30 	call	0x604e	; 0x604e <lcd_dec2out>
    48f4:	9f b7       	in	r25, 0x3f	; 63
    48f6:	f8 94       	cli
    48f8:	81 e0       	ldi	r24, 0x01	; 1
    48fa:	06 c0       	rjmp	.+12     	; 0x4908 <menu_ModuleTestExecute+0x13e>
    48fc:	ed e2       	ldi	r30, 0x2D	; 45
    48fe:	f2 e0       	ldi	r31, 0x02	; 2
    4900:	88 e0       	ldi	r24, 0x08	; 8
    4902:	84 87       	std	Z+12, r24	; 0x0c
    4904:	15 86       	std	Z+13, r1	; 0x0d
    4906:	80 e0       	ldi	r24, 0x00	; 0
    4908:	81 11       	cpse	r24, r1
    490a:	f8 cf       	rjmp	.-16     	; 0x48fc <menu_ModuleTestExecute+0x132>
    490c:	9f bf       	out	0x3f, r25	; 63
    490e:	08 95       	ret
    4910:	e0 32       	cpi	r30, 0x20	; 32
    4912:	81 f5       	brne	.+96     	; 0x4974 <menu_ModuleTestExecute+0x1aa>
    4914:	80 91 16 05 	lds	r24, 0x0516	; 0x800516 <menu_TestModuleErrorList>
    4918:	90 91 17 05 	lds	r25, 0x0517	; 0x800517 <menu_TestModuleErrorList+0x1>
    491c:	a0 91 18 05 	lds	r26, 0x0518	; 0x800518 <menu_TestModuleErrorList+0x2>
    4920:	b0 91 19 05 	lds	r27, 0x0519	; 0x800519 <menu_TestModuleErrorList+0x3>
    4924:	00 97       	sbiw	r24, 0x00	; 0
    4926:	a1 05       	cpc	r26, r1
    4928:	b1 05       	cpc	r27, r1
    492a:	21 f4       	brne	.+8      	; 0x4934 <menu_ModuleTestExecute+0x16a>
    492c:	8a e4       	ldi	r24, 0x4A	; 74
    492e:	93 e0       	ldi	r25, 0x03	; 3
    4930:	0e df       	rcall	.-484    	; 0x474e <displayMenuMessage_P>
    4932:	0f c0       	rjmp	.+30     	; 0x4952 <menu_ModuleTestExecute+0x188>
    4934:	80 93 1e 0d 	sts	0x0D1E, r24	; 0x800d1e <editLong>
    4938:	90 93 1f 0d 	sts	0x0D1F, r25	; 0x800d1f <editLong+0x1>
    493c:	a0 93 20 0d 	sts	0x0D20, r26	; 0x800d20 <editLong+0x2>
    4940:	b0 93 21 0d 	sts	0x0D21, r27	; 0x800d21 <editLong+0x3>
    4944:	87 e4       	ldi	r24, 0x47	; 71
    4946:	93 e0       	ldi	r25, 0x03	; 3
    4948:	02 df       	rcall	.-508    	; 0x474e <displayMenuMessage_P>
    494a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    494e:	0e 94 02 30 	call	0x6004	; 0x6004 <lcd_longout>
    4952:	8e ef       	ldi	r24, 0xFE	; 254
    4954:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <menu_TestModuleBitCounter>
    4958:	9f b7       	in	r25, 0x3f	; 63
    495a:	f8 94       	cli
    495c:	81 e0       	ldi	r24, 0x01	; 1
    495e:	06 c0       	rjmp	.+12     	; 0x496c <menu_ModuleTestExecute+0x1a2>
    4960:	ed e2       	ldi	r30, 0x2D	; 45
    4962:	f2 e0       	ldi	r31, 0x02	; 2
    4964:	82 e0       	ldi	r24, 0x02	; 2
    4966:	84 87       	std	Z+12, r24	; 0x0c
    4968:	85 87       	std	Z+13, r24	; 0x0d
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	81 11       	cpse	r24, r1
    496e:	f8 cf       	rjmp	.-16     	; 0x4960 <menu_ModuleTestExecute+0x196>
    4970:	9f bf       	out	0x3f, r25	; 63
    4972:	e9 cb       	rjmp	.-2094   	; 0x4146 <menuCursorSetMenu>
    4974:	08 95       	ret

00004976 <menu_ModuleTestPattern>:
    4976:	81 e0       	ldi	r24, 0x01	; 1
    4978:	90 e0       	ldi	r25, 0x00	; 0
    497a:	00 90 25 05 	lds	r0, 0x0525	; 0x800525 <menuVmodule>
    497e:	02 c0       	rjmp	.+4      	; 0x4984 <menu_ModuleTestPattern+0xe>
    4980:	88 0f       	add	r24, r24
    4982:	99 1f       	adc	r25, r25
    4984:	0a 94       	dec	r0
    4986:	e2 f7       	brpl	.-8      	; 0x4980 <menu_ModuleTestPattern+0xa>
    4988:	80 93 6f 05 	sts	0x056F, r24	; 0x80056f <menu_TestModulePattern>
    498c:	8f ef       	ldi	r24, 0xFF	; 255
    498e:	80 93 53 05 	sts	0x0553, r24	; 0x800553 <menu_TestModuleBitCounter>
    4992:	10 92 16 05 	sts	0x0516, r1	; 0x800516 <menu_TestModuleErrorList>
    4996:	10 92 17 05 	sts	0x0517, r1	; 0x800517 <menu_TestModuleErrorList+0x1>
    499a:	10 92 18 05 	sts	0x0518, r1	; 0x800518 <menu_TestModuleErrorList+0x2>
    499e:	10 92 19 05 	sts	0x0519, r1	; 0x800519 <menu_TestModuleErrorList+0x3>
    49a2:	13 df       	rcall	.-474    	; 0x47ca <menu_ModuleTestExecute>
    49a4:	80 e0       	ldi	r24, 0x00	; 0
    49a6:	08 95       	ret

000049a8 <menuLCDwriteOK>:
    49a8:	8a e4       	ldi	r24, 0x4A	; 74
    49aa:	93 e0       	ldi	r25, 0x03	; 3
    49ac:	d0 ce       	rjmp	.-608    	; 0x474e <displayMenuMessage_P>
    49ae:	08 95       	ret

000049b0 <menuOnEnterEEBackup>:
    49b0:	8e e1       	ldi	r24, 0x1E	; 30
    49b2:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    49b6:	8d e2       	ldi	r24, 0x2D	; 45
    49b8:	93 e0       	ldi	r25, 0x03	; 3
    49ba:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    49be:	0e 94 0f 0c 	call	0x181e	; 0x181e <eeprom_Backup>
    49c2:	f2 df       	rcall	.-28     	; 0x49a8 <menuLCDwriteOK>
    49c4:	80 e0       	ldi	r24, 0x00	; 0
    49c6:	08 95       	ret

000049c8 <menuOnEnterEERestore>:
    49c8:	8e e1       	ldi	r24, 0x1E	; 30
    49ca:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    49ce:	8d e2       	ldi	r24, 0x2D	; 45
    49d0:	93 e0       	ldi	r25, 0x03	; 3
    49d2:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    49d6:	0e 94 1b 0c 	call	0x1836	; 0x1836 <eeprom_Restore>
    49da:	e6 df       	rcall	.-52     	; 0x49a8 <menuLCDwriteOK>
    49dc:	80 e0       	ldi	r24, 0x00	; 0
    49de:	08 95       	ret

000049e0 <menuOnEnterEEUpdate>:
    49e0:	8d e2       	ldi	r24, 0x2D	; 45
    49e2:	93 e0       	ldi	r25, 0x03	; 3
    49e4:	b4 de       	rcall	.-664    	; 0x474e <displayMenuMessage_P>
    49e6:	8e e1       	ldi	r24, 0x1E	; 30
    49e8:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    49ec:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <eeprom_UpdateALL>
    49f0:	db df       	rcall	.-74     	; 0x49a8 <menuLCDwriteOK>
    49f2:	80 e0       	ldi	r24, 0x00	; 0
    49f4:	08 95       	ret

000049f6 <menudeleteMainMessage>:
    49f6:	cf 93       	push	r28
    49f8:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    49fc:	80 e4       	ldi	r24, 0x40	; 64
    49fe:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4a02:	84 e1       	ldi	r24, 0x14	; 20
    4a04:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4a08:	8c 2f       	mov	r24, r28
    4a0a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4a0e:	cf 91       	pop	r28
    4a10:	08 95       	ret

00004a12 <menu_deleteMessage>:
    4a12:	80 91 4b 05 	lds	r24, 0x054B	; 0x80054b <displayMessageArea>
    4a16:	81 11       	cpse	r24, r1
    4a18:	02 c0       	rjmp	.+4      	; 0x4a1e <menu_deleteMessage+0xc>
    4a1a:	99 cb       	rjmp	.-2254   	; 0x414e <menuClearExtraDisp>
    4a1c:	08 95       	ret
    4a1e:	81 30       	cpi	r24, 0x01	; 1
    4a20:	11 f4       	brne	.+4      	; 0x4a26 <menu_deleteMessage+0x14>
    4a22:	9a cb       	rjmp	.-2252   	; 0x4158 <menu_ClearDataDisp>
    4a24:	08 95       	ret
    4a26:	e7 cf       	rjmp	.-50     	; 0x49f6 <menudeleteMainMessage>
    4a28:	08 95       	ret

00004a2a <menu_DisplayMainMessage_P>:
    4a2a:	0f 93       	push	r16
    4a2c:	1f 93       	push	r17
    4a2e:	cf 93       	push	r28
    4a30:	df 93       	push	r29
    4a32:	ec 01       	movw	r28, r24
    4a34:	10 91 56 03 	lds	r17, 0x0356	; 0x800356 <lcd_cursorPos>
    4a38:	0e 94 76 32 	call	0x64ec	; 0x64ec <get_StrLenP>
    4a3c:	08 2f       	mov	r16, r24
    4a3e:	80 e4       	ldi	r24, 0x40	; 64
    4a40:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4a44:	84 e1       	ldi	r24, 0x14	; 20
    4a46:	90 e0       	ldi	r25, 0x00	; 0
    4a48:	80 1b       	sub	r24, r16
    4a4a:	91 09       	sbc	r25, r1
    4a4c:	95 95       	asr	r25
    4a4e:	87 95       	ror	r24
    4a50:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4a54:	ce 01       	movw	r24, r28
    4a56:	0e 94 9c 11 	call	0x2338	; 0x2338 <lcd_puts_P>
    4a5a:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <lcd_cursorPos>
    4a5e:	84 e5       	ldi	r24, 0x54	; 84
    4a60:	89 1b       	sub	r24, r25
    4a62:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4a66:	81 2f       	mov	r24, r17
    4a68:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4a6c:	9f b7       	in	r25, 0x3f	; 63
    4a6e:	f8 94       	cli
    4a70:	81 e0       	ldi	r24, 0x01	; 1
    4a72:	06 c0       	rjmp	.+12     	; 0x4a80 <menu_DisplayMainMessage_P+0x56>
    4a74:	ed e2       	ldi	r30, 0x2D	; 45
    4a76:	f2 e0       	ldi	r31, 0x02	; 2
    4a78:	84 e6       	ldi	r24, 0x64	; 100
    4a7a:	86 87       	std	Z+14, r24	; 0x0e
    4a7c:	17 86       	std	Z+15, r1	; 0x0f
    4a7e:	80 e0       	ldi	r24, 0x00	; 0
    4a80:	81 11       	cpse	r24, r1
    4a82:	f8 cf       	rjmp	.-16     	; 0x4a74 <menu_DisplayMainMessage_P+0x4a>
    4a84:	9f bf       	out	0x3f, r25	; 63
    4a86:	82 e0       	ldi	r24, 0x02	; 2
    4a88:	80 93 4b 05 	sts	0x054B, r24	; 0x80054b <displayMessageArea>
    4a8c:	df 91       	pop	r29
    4a8e:	cf 91       	pop	r28
    4a90:	1f 91       	pop	r17
    4a92:	0f 91       	pop	r16
    4a94:	08 95       	ret

00004a96 <menu_DisplayMainMessage>:
    4a96:	0f 93       	push	r16
    4a98:	1f 93       	push	r17
    4a9a:	cf 93       	push	r28
    4a9c:	df 93       	push	r29
    4a9e:	ec 01       	movw	r28, r24
    4aa0:	10 91 56 03 	lds	r17, 0x0356	; 0x800356 <lcd_cursorPos>
    4aa4:	0e 94 80 32 	call	0x6500	; 0x6500 <get_StrLen>
    4aa8:	08 2f       	mov	r16, r24
    4aaa:	80 e4       	ldi	r24, 0x40	; 64
    4aac:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4ab0:	84 e1       	ldi	r24, 0x14	; 20
    4ab2:	90 e0       	ldi	r25, 0x00	; 0
    4ab4:	80 1b       	sub	r24, r16
    4ab6:	91 09       	sbc	r25, r1
    4ab8:	95 95       	asr	r25
    4aba:	87 95       	ror	r24
    4abc:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4ac0:	ce 01       	movw	r24, r28
    4ac2:	0e 94 8c 11 	call	0x2318	; 0x2318 <lcd_puts>
    4ac6:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <lcd_cursorPos>
    4aca:	84 e5       	ldi	r24, 0x54	; 84
    4acc:	89 1b       	sub	r24, r25
    4ace:	0e 94 99 31 	call	0x6332	; 0x6332 <lcd_blank>
    4ad2:	81 2f       	mov	r24, r17
    4ad4:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4ad8:	9f b7       	in	r25, 0x3f	; 63
    4ada:	f8 94       	cli
    4adc:	81 e0       	ldi	r24, 0x01	; 1
    4ade:	06 c0       	rjmp	.+12     	; 0x4aec <menu_DisplayMainMessage+0x56>
    4ae0:	ed e2       	ldi	r30, 0x2D	; 45
    4ae2:	f2 e0       	ldi	r31, 0x02	; 2
    4ae4:	84 e6       	ldi	r24, 0x64	; 100
    4ae6:	86 87       	std	Z+14, r24	; 0x0e
    4ae8:	17 86       	std	Z+15, r1	; 0x0f
    4aea:	80 e0       	ldi	r24, 0x00	; 0
    4aec:	81 11       	cpse	r24, r1
    4aee:	f8 cf       	rjmp	.-16     	; 0x4ae0 <menu_DisplayMainMessage+0x4a>
    4af0:	9f bf       	out	0x3f, r25	; 63
    4af2:	82 e0       	ldi	r24, 0x02	; 2
    4af4:	80 93 4b 05 	sts	0x054B, r24	; 0x80054b <displayMessageArea>
    4af8:	df 91       	pop	r29
    4afa:	cf 91       	pop	r28
    4afc:	1f 91       	pop	r17
    4afe:	0f 91       	pop	r16
    4b00:	08 95       	ret

00004b02 <menuDisplaySaveMessage>:
    4b02:	62 e2       	ldi	r22, 0x22	; 34
    4b04:	7d e0       	ldi	r23, 0x0D	; 13
    4b06:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    4b0a:	bc 01       	movw	r22, r24
    4b0c:	80 e7       	ldi	r24, 0x70	; 112
    4b0e:	93 e0       	ldi	r25, 0x03	; 3
    4b10:	0e 94 07 31 	call	0x620e	; 0x620e <putString_P>
    4b14:	82 e2       	ldi	r24, 0x22	; 34
    4b16:	9d e0       	ldi	r25, 0x0D	; 13
    4b18:	be cf       	rjmp	.-132    	; 0x4a96 <menu_DisplayMainMessage>
    4b1a:	08 95       	ret

00004b1c <menuDisplayLoadMessage>:
    4b1c:	62 e2       	ldi	r22, 0x22	; 34
    4b1e:	7d e0       	ldi	r23, 0x0D	; 13
    4b20:	0e 94 41 30 	call	0x6082	; 0x6082 <putChar_Dec2>
    4b24:	bc 01       	movw	r22, r24
    4b26:	82 e6       	ldi	r24, 0x62	; 98
    4b28:	93 e0       	ldi	r25, 0x03	; 3
    4b2a:	0e 94 07 31 	call	0x620e	; 0x620e <putString_P>
    4b2e:	82 e2       	ldi	r24, 0x22	; 34
    4b30:	9d e0       	ldi	r25, 0x0D	; 13
    4b32:	b1 cf       	rjmp	.-158    	; 0x4a96 <menu_DisplayMainMessage>
    4b34:	08 95       	ret

00004b36 <softKeyK1A>:
    4b36:	88 23       	and	r24, r24
    4b38:	2c f4       	brge	.+10     	; 0x4b44 <softKeyK1A+0xe>
    4b3a:	6f ef       	ldi	r22, 0xFF	; 255
    4b3c:	80 e0       	ldi	r24, 0x00	; 0
    4b3e:	32 d4       	rcall	.+2148   	; 0x53a4 <register_toProgram>
    4b40:	e0 df       	rcall	.-64     	; 0x4b02 <menuDisplaySaveMessage>
    4b42:	05 c0       	rjmp	.+10     	; 0x4b4e <softKeyK1A+0x18>
    4b44:	88 23       	and	r24, r24
    4b46:	19 f0       	breq	.+6      	; 0x4b4e <softKeyK1A+0x18>
    4b48:	80 e0       	ldi	r24, 0x00	; 0
    4b4a:	c7 d3       	rcall	.+1934   	; 0x52da <program_toRegister>
    4b4c:	e7 df       	rcall	.-50     	; 0x4b1c <menuDisplayLoadMessage>
    4b4e:	80 e0       	ldi	r24, 0x00	; 0
    4b50:	08 95       	ret

00004b52 <softKeyK2A>:
    4b52:	88 23       	and	r24, r24
    4b54:	2c f4       	brge	.+10     	; 0x4b60 <softKeyK2A+0xe>
    4b56:	6f ef       	ldi	r22, 0xFF	; 255
    4b58:	81 e0       	ldi	r24, 0x01	; 1
    4b5a:	24 d4       	rcall	.+2120   	; 0x53a4 <register_toProgram>
    4b5c:	d2 df       	rcall	.-92     	; 0x4b02 <menuDisplaySaveMessage>
    4b5e:	05 c0       	rjmp	.+10     	; 0x4b6a <softKeyK2A+0x18>
    4b60:	88 23       	and	r24, r24
    4b62:	19 f0       	breq	.+6      	; 0x4b6a <softKeyK2A+0x18>
    4b64:	81 e0       	ldi	r24, 0x01	; 1
    4b66:	b9 d3       	rcall	.+1906   	; 0x52da <program_toRegister>
    4b68:	d9 df       	rcall	.-78     	; 0x4b1c <menuDisplayLoadMessage>
    4b6a:	80 e0       	ldi	r24, 0x00	; 0
    4b6c:	08 95       	ret

00004b6e <softKeyK3A>:
    4b6e:	88 23       	and	r24, r24
    4b70:	2c f4       	brge	.+10     	; 0x4b7c <softKeyK3A+0xe>
    4b72:	6f ef       	ldi	r22, 0xFF	; 255
    4b74:	82 e0       	ldi	r24, 0x02	; 2
    4b76:	16 d4       	rcall	.+2092   	; 0x53a4 <register_toProgram>
    4b78:	c4 df       	rcall	.-120    	; 0x4b02 <menuDisplaySaveMessage>
    4b7a:	05 c0       	rjmp	.+10     	; 0x4b86 <softKeyK3A+0x18>
    4b7c:	88 23       	and	r24, r24
    4b7e:	19 f0       	breq	.+6      	; 0x4b86 <softKeyK3A+0x18>
    4b80:	82 e0       	ldi	r24, 0x02	; 2
    4b82:	ab d3       	rcall	.+1878   	; 0x52da <program_toRegister>
    4b84:	cb df       	rcall	.-106    	; 0x4b1c <menuDisplayLoadMessage>
    4b86:	80 e0       	ldi	r24, 0x00	; 0
    4b88:	08 95       	ret

00004b8a <softKeyK4A>:
    4b8a:	88 23       	and	r24, r24
    4b8c:	2c f4       	brge	.+10     	; 0x4b98 <softKeyK4A+0xe>
    4b8e:	6f ef       	ldi	r22, 0xFF	; 255
    4b90:	83 e0       	ldi	r24, 0x03	; 3
    4b92:	08 d4       	rcall	.+2064   	; 0x53a4 <register_toProgram>
    4b94:	b6 df       	rcall	.-148    	; 0x4b02 <menuDisplaySaveMessage>
    4b96:	05 c0       	rjmp	.+10     	; 0x4ba2 <softKeyK4A+0x18>
    4b98:	88 23       	and	r24, r24
    4b9a:	19 f0       	breq	.+6      	; 0x4ba2 <softKeyK4A+0x18>
    4b9c:	83 e0       	ldi	r24, 0x03	; 3
    4b9e:	9d d3       	rcall	.+1850   	; 0x52da <program_toRegister>
    4ba0:	bd df       	rcall	.-134    	; 0x4b1c <menuDisplayLoadMessage>
    4ba2:	80 e0       	ldi	r24, 0x00	; 0
    4ba4:	08 95       	ret

00004ba6 <getSoftKeyIndex>:
    4ba6:	20 e0       	ldi	r18, 0x00	; 0
    4ba8:	34 e0       	ldi	r19, 0x04	; 4
    4baa:	8c 31       	cpi	r24, 0x1C	; 28
    4bac:	93 07       	cpc	r25, r19
    4bae:	49 f0       	breq	.+18     	; 0x4bc2 <getSoftKeyIndex+0x1c>
    4bb0:	34 e0       	ldi	r19, 0x04	; 4
    4bb2:	8c 31       	cpi	r24, 0x1C	; 28
    4bb4:	93 07       	cpc	r25, r19
    4bb6:	38 f0       	brcs	.+14     	; 0x4bc6 <getSoftKeyIndex+0x20>
    4bb8:	44 97       	sbiw	r24, 0x14	; 20
    4bba:	2f 5f       	subi	r18, 0xFF	; 255
    4bbc:	a9 f7       	brne	.-22     	; 0x4ba8 <getSoftKeyIndex+0x2>
    4bbe:	80 e0       	ldi	r24, 0x00	; 0
    4bc0:	08 95       	ret
    4bc2:	82 2f       	mov	r24, r18
    4bc4:	08 95       	ret
    4bc6:	80 e0       	ldi	r24, 0x00	; 0
    4bc8:	08 95       	ret

00004bca <init_SoftKeys>:
    4bca:	cf 93       	push	r28
    4bcc:	0e 94 84 0a 	call	0x1508	; 0x1508 <eeprom_ReadSoftkeys>
    4bd0:	8f 3f       	cpi	r24, 0xFF	; 255
    4bd2:	c9 f4       	brne	.+50     	; 0x4c06 <init_SoftKeys+0x3c>
    4bd4:	0f c0       	rjmp	.+30     	; 0x4bf4 <init_SoftKeys+0x2a>
    4bd6:	82 2f       	mov	r24, r18
    4bd8:	90 e0       	ldi	r25, 0x00	; 0
    4bda:	fc 01       	movw	r30, r24
    4bdc:	e0 5a       	subi	r30, 0xA0	; 160
    4bde:	fa 4f       	sbci	r31, 0xFA	; 250
    4be0:	10 82       	st	Z, r1
    4be2:	88 0f       	add	r24, r24
    4be4:	99 1f       	adc	r25, r25
    4be6:	fc 01       	movw	r30, r24
    4be8:	e9 59       	subi	r30, 0x99	; 153
    4bea:	fa 4f       	sbci	r31, 0xFA	; 250
    4bec:	11 82       	std	Z+1, r1	; 0x01
    4bee:	10 82       	st	Z, r1
    4bf0:	2f 5f       	subi	r18, 0xFF	; 255
    4bf2:	01 c0       	rjmp	.+2      	; 0x4bf6 <init_SoftKeys+0x2c>
    4bf4:	20 e0       	ldi	r18, 0x00	; 0
    4bf6:	24 30       	cpi	r18, 0x04	; 4
    4bf8:	70 f3       	brcs	.-36     	; 0x4bd6 <init_SoftKeys+0xc>
    4bfa:	40 e0       	ldi	r20, 0x00	; 0
    4bfc:	50 e0       	ldi	r21, 0x00	; 0
    4bfe:	67 e0       	ldi	r22, 0x07	; 7
    4c00:	81 e0       	ldi	r24, 0x01	; 1
    4c02:	0e 94 52 13 	call	0x26a4	; 0x26a4 <log_putError>
    4c06:	c0 e0       	ldi	r28, 0x00	; 0
    4c08:	25 c0       	rjmp	.+74     	; 0x4c54 <init_SoftKeys+0x8a>
    4c0a:	4c 2f       	mov	r20, r28
    4c0c:	50 e0       	ldi	r21, 0x00	; 0
    4c0e:	fa 01       	movw	r30, r20
    4c10:	e0 5a       	subi	r30, 0xA0	; 160
    4c12:	fa 4f       	sbci	r31, 0xFA	; 250
    4c14:	80 81       	ld	r24, Z
    4c16:	85 31       	cpi	r24, 0x15	; 21
    4c18:	70 f4       	brcc	.+28     	; 0x4c36 <init_SoftKeys+0x6c>
    4c1a:	24 e1       	ldi	r18, 0x14	; 20
    4c1c:	82 9f       	mul	r24, r18
    4c1e:	c0 01       	movw	r24, r0
    4c20:	11 24       	eor	r1, r1
    4c22:	84 5e       	subi	r24, 0xE4	; 228
    4c24:	9b 4f       	sbci	r25, 0xFB	; 251
    4c26:	44 0f       	add	r20, r20
    4c28:	55 1f       	adc	r21, r21
    4c2a:	fa 01       	movw	r30, r20
    4c2c:	e9 59       	subi	r30, 0x99	; 153
    4c2e:	fa 4f       	sbci	r31, 0xFA	; 250
    4c30:	91 83       	std	Z+1, r25	; 0x01
    4c32:	80 83       	st	Z, r24
    4c34:	0e c0       	rjmp	.+28     	; 0x4c52 <init_SoftKeys+0x88>
    4c36:	fa 01       	movw	r30, r20
    4c38:	ee 0f       	add	r30, r30
    4c3a:	ff 1f       	adc	r31, r31
    4c3c:	e9 59       	subi	r30, 0x99	; 153
    4c3e:	fa 4f       	sbci	r31, 0xFA	; 250
    4c40:	11 82       	std	Z+1, r1	; 0x01
    4c42:	10 82       	st	Z, r1
    4c44:	4f 5f       	subi	r20, 0xFF	; 255
    4c46:	5f 4f       	sbci	r21, 0xFF	; 255
    4c48:	40 61       	ori	r20, 0x10	; 16
    4c4a:	67 e0       	ldi	r22, 0x07	; 7
    4c4c:	81 e0       	ldi	r24, 0x01	; 1
    4c4e:	0e 94 52 13 	call	0x26a4	; 0x26a4 <log_putError>
    4c52:	cf 5f       	subi	r28, 0xFF	; 255
    4c54:	c4 30       	cpi	r28, 0x04	; 4
    4c56:	c8 f2       	brcs	.-78     	; 0x4c0a <init_SoftKeys+0x40>
    4c58:	cf 91       	pop	r28
    4c5a:	08 95       	ret

00004c5c <softKey_Set>:
    4c5c:	cf 93       	push	r28
    4c5e:	df 93       	push	r29
    4c60:	64 30       	cpi	r22, 0x04	; 4
    4c62:	28 f5       	brcc	.+74     	; 0x4cae <softKey_Set+0x52>
    4c64:	00 97       	sbiw	r24, 0x00	; 0
    4c66:	b9 f0       	breq	.+46     	; 0x4c96 <softKey_Set+0x3a>
    4c68:	fc 01       	movw	r30, r24
    4c6a:	24 91       	lpm	r18, Z
    4c6c:	2f 73       	andi	r18, 0x3F	; 63
    4c6e:	21 30       	cpi	r18, 0x01	; 1
    4c70:	91 f4       	brne	.+36     	; 0x4c96 <softKey_Set+0x3a>
    4c72:	31 96       	adiw	r30, 0x01	; 1
    4c74:	24 91       	lpm	r18, Z
    4c76:	24 ff       	sbrs	r18, 4
    4c78:	0e c0       	rjmp	.+28     	; 0x4c96 <softKey_Set+0x3a>
    4c7a:	c6 2f       	mov	r28, r22
    4c7c:	d0 e0       	ldi	r29, 0x00	; 0
    4c7e:	fe 01       	movw	r30, r28
    4c80:	ee 0f       	add	r30, r30
    4c82:	ff 1f       	adc	r31, r31
    4c84:	e9 59       	subi	r30, 0x99	; 153
    4c86:	fa 4f       	sbci	r31, 0xFA	; 250
    4c88:	91 83       	std	Z+1, r25	; 0x01
    4c8a:	80 83       	st	Z, r24
    4c8c:	8c df       	rcall	.-232    	; 0x4ba6 <getSoftKeyIndex>
    4c8e:	c0 5a       	subi	r28, 0xA0	; 160
    4c90:	da 4f       	sbci	r29, 0xFA	; 250
    4c92:	88 83       	st	Y, r24
    4c94:	0c c0       	rjmp	.+24     	; 0x4cae <softKey_Set+0x52>
    4c96:	70 e0       	ldi	r23, 0x00	; 0
    4c98:	fb 01       	movw	r30, r22
    4c9a:	ee 0f       	add	r30, r30
    4c9c:	ff 1f       	adc	r31, r31
    4c9e:	e9 59       	subi	r30, 0x99	; 153
    4ca0:	fa 4f       	sbci	r31, 0xFA	; 250
    4ca2:	11 82       	std	Z+1, r1	; 0x01
    4ca4:	10 82       	st	Z, r1
    4ca6:	fb 01       	movw	r30, r22
    4ca8:	e0 5a       	subi	r30, 0xA0	; 160
    4caa:	fa 4f       	sbci	r31, 0xFA	; 250
    4cac:	10 82       	st	Z, r1
    4cae:	df 91       	pop	r29
    4cb0:	cf 91       	pop	r28
    4cb2:	08 95       	ret

00004cb4 <menuOnExitKey>:
    4cb4:	e0 91 56 05 	lds	r30, 0x0556	; 0x800556 <currentMenu>
    4cb8:	f0 91 57 05 	lds	r31, 0x0557	; 0x800557 <currentMenu+0x1>
    4cbc:	3e 96       	adiw	r30, 0x0e	; 14
    4cbe:	65 91       	lpm	r22, Z+
    4cc0:	75 91       	lpm	r23, Z+
    4cc2:	80 91 7a 05 	lds	r24, 0x057A	; 0x80057a <menuVMenuSoftKey>
    4cc6:	90 91 7b 05 	lds	r25, 0x057B	; 0x80057b <menuVMenuSoftKey+0x1>
    4cca:	c8 df       	rcall	.-112    	; 0x4c5c <softKey_Set>
    4ccc:	0e 94 bb 0b 	call	0x1776	; 0x1776 <eeprom_UpdateSoftkeys>
    4cd0:	80 e0       	ldi	r24, 0x00	; 0
    4cd2:	08 95       	ret

00004cd4 <softKeys_toLCD>:
    4cd4:	0f 93       	push	r16
    4cd6:	1f 93       	push	r17
    4cd8:	cf 93       	push	r28
    4cda:	c0 e0       	ldi	r28, 0x00	; 0
    4cdc:	32 c0       	rjmp	.+100    	; 0x4d42 <softKeys_toLCD+0x6e>
    4cde:	0c 2f       	mov	r16, r28
    4ce0:	10 e0       	ldi	r17, 0x00	; 0
    4ce2:	f8 01       	movw	r30, r16
    4ce4:	ee 0f       	add	r30, r30
    4ce6:	ff 1f       	adc	r31, r31
    4ce8:	e9 59       	subi	r30, 0x99	; 153
    4cea:	fa 4f       	sbci	r31, 0xFA	; 250
    4cec:	01 90       	ld	r0, Z+
    4cee:	f0 81       	ld	r31, Z
    4cf0:	e0 2d       	mov	r30, r0
    4cf2:	30 97       	sbiw	r30, 0x00	; 0
    4cf4:	31 f0       	breq	.+12     	; 0x4d02 <softKeys_toLCD+0x2e>
    4cf6:	3e 96       	adiw	r30, 0x0e	; 14
    4cf8:	65 91       	lpm	r22, Z+
    4cfa:	75 91       	lpm	r23, Z+
    4cfc:	61 15       	cp	r22, r1
    4cfe:	71 05       	cpc	r23, r1
    4d00:	21 f4       	brne	.+8      	; 0x4d0a <softKeys_toLCD+0x36>
    4d02:	8c 2f       	mov	r24, r28
    4d04:	0e 94 20 32 	call	0x6440	; 0x6440 <keylabel_clr>
    4d08:	1b c0       	rjmp	.+54     	; 0x4d40 <softKeys_toLCD+0x6c>
    4d0a:	8c 2f       	mov	r24, r28
    4d0c:	0e 94 e5 31 	call	0x63ca	; 0x63ca <keylabel_set>
    4d10:	00 0f       	add	r16, r16
    4d12:	11 1f       	adc	r17, r17
    4d14:	f8 01       	movw	r30, r16
    4d16:	e9 59       	subi	r30, 0x99	; 153
    4d18:	fa 4f       	sbci	r31, 0xFA	; 250
    4d1a:	01 90       	ld	r0, Z+
    4d1c:	f0 81       	ld	r31, Z
    4d1e:	e0 2d       	mov	r30, r0
    4d20:	70 96       	adiw	r30, 0x10	; 16
    4d22:	05 90       	lpm	r0, Z+
    4d24:	f4 91       	lpm	r31, Z
    4d26:	e0 2d       	mov	r30, r0
    4d28:	30 97       	sbiw	r30, 0x00	; 0
    4d2a:	51 f0       	breq	.+20     	; 0x4d40 <softKeys_toLCD+0x6c>
    4d2c:	80 e0       	ldi	r24, 0x00	; 0
    4d2e:	19 95       	eicall
    4d30:	81 38       	cpi	r24, 0x81	; 129
    4d32:	11 f4       	brne	.+4      	; 0x4d38 <softKeys_toLCD+0x64>
    4d34:	6f ef       	ldi	r22, 0xFF	; 255
    4d36:	01 c0       	rjmp	.+2      	; 0x4d3a <softKeys_toLCD+0x66>
    4d38:	60 e0       	ldi	r22, 0x00	; 0
    4d3a:	8c 2f       	mov	r24, r28
    4d3c:	0e 94 53 32 	call	0x64a6	; 0x64a6 <keylabel_statcheck>
    4d40:	cf 5f       	subi	r28, 0xFF	; 255
    4d42:	c4 30       	cpi	r28, 0x04	; 4
    4d44:	60 f2       	brcs	.-104    	; 0x4cde <softKeys_toLCD+0xa>
    4d46:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    4d4a:	cf 91       	pop	r28
    4d4c:	1f 91       	pop	r17
    4d4e:	0f 91       	pop	r16
    4d50:	08 95       	ret

00004d52 <softKey_MessageKey_ToSoftKeyNr>:
    4d52:	82 30       	cpi	r24, 0x02	; 2
    4d54:	49 f0       	breq	.+18     	; 0x4d68 <softKey_MessageKey_ToSoftKeyNr+0x16>
    4d56:	18 f4       	brcc	.+6      	; 0x4d5e <softKey_MessageKey_ToSoftKeyNr+0xc>
    4d58:	81 30       	cpi	r24, 0x01	; 1
    4d5a:	51 f0       	breq	.+20     	; 0x4d70 <softKey_MessageKey_ToSoftKeyNr+0x1e>
    4d5c:	0b c0       	rjmp	.+22     	; 0x4d74 <softKey_MessageKey_ToSoftKeyNr+0x22>
    4d5e:	83 30       	cpi	r24, 0x03	; 3
    4d60:	59 f0       	breq	.+22     	; 0x4d78 <softKey_MessageKey_ToSoftKeyNr+0x26>
    4d62:	84 30       	cpi	r24, 0x04	; 4
    4d64:	19 f0       	breq	.+6      	; 0x4d6c <softKey_MessageKey_ToSoftKeyNr+0x1a>
    4d66:	06 c0       	rjmp	.+12     	; 0x4d74 <softKey_MessageKey_ToSoftKeyNr+0x22>
    4d68:	80 e0       	ldi	r24, 0x00	; 0
    4d6a:	08 95       	ret
    4d6c:	82 e0       	ldi	r24, 0x02	; 2
    4d6e:	08 95       	ret
    4d70:	83 e0       	ldi	r24, 0x03	; 3
    4d72:	08 95       	ret
    4d74:	8f ef       	ldi	r24, 0xFF	; 255
    4d76:	08 95       	ret
    4d78:	81 e0       	ldi	r24, 0x01	; 1
    4d7a:	08 95       	ret

00004d7c <softKey_Execute>:
    4d7c:	0f 93       	push	r16
    4d7e:	1f 93       	push	r17
    4d80:	cf 93       	push	r28
    4d82:	84 30       	cpi	r24, 0x04	; 4
    4d84:	d0 f5       	brcc	.+116    	; 0x4dfa <softKey_Execute+0x7e>
    4d86:	e8 2f       	mov	r30, r24
    4d88:	f0 e0       	ldi	r31, 0x00	; 0
    4d8a:	ee 0f       	add	r30, r30
    4d8c:	ff 1f       	adc	r31, r31
    4d8e:	e9 59       	subi	r30, 0x99	; 153
    4d90:	fa 4f       	sbci	r31, 0xFA	; 250
    4d92:	00 81       	ld	r16, Z
    4d94:	11 81       	ldd	r17, Z+1	; 0x01
    4d96:	01 15       	cp	r16, r1
    4d98:	11 05       	cpc	r17, r1
    4d9a:	89 f1       	breq	.+98     	; 0x4dfe <softKey_Execute+0x82>
    4d9c:	f8 01       	movw	r30, r16
    4d9e:	94 91       	lpm	r25, Z
    4da0:	9f 73       	andi	r25, 0x3F	; 63
    4da2:	91 30       	cpi	r25, 0x01	; 1
    4da4:	71 f5       	brne	.+92     	; 0x4e02 <softKey_Execute+0x86>
    4da6:	31 96       	adiw	r30, 0x01	; 1
    4da8:	94 91       	lpm	r25, Z
    4daa:	94 ff       	sbrs	r25, 4
    4dac:	2c c0       	rjmp	.+88     	; 0x4e06 <softKey_Execute+0x8a>
    4dae:	c8 2f       	mov	r28, r24
    4db0:	3f 96       	adiw	r30, 0x0f	; 15
    4db2:	05 90       	lpm	r0, Z+
    4db4:	f4 91       	lpm	r31, Z
    4db6:	e0 2d       	mov	r30, r0
    4db8:	30 97       	sbiw	r30, 0x00	; 0
    4dba:	89 f0       	breq	.+34     	; 0x4dde <softKey_Execute+0x62>
    4dbc:	86 2f       	mov	r24, r22
    4dbe:	19 95       	eicall
    4dc0:	82 38       	cpi	r24, 0x82	; 130
    4dc2:	29 f4       	brne	.+10     	; 0x4dce <softKey_Execute+0x52>
    4dc4:	60 e0       	ldi	r22, 0x00	; 0
    4dc6:	8c 2f       	mov	r24, r28
    4dc8:	0e 94 53 32 	call	0x64a6	; 0x64a6 <keylabel_statcheck>
    4dcc:	06 c0       	rjmp	.+12     	; 0x4dda <softKey_Execute+0x5e>
    4dce:	81 38       	cpi	r24, 0x81	; 129
    4dd0:	21 f4       	brne	.+8      	; 0x4dda <softKey_Execute+0x5e>
    4dd2:	6f ef       	ldi	r22, 0xFF	; 255
    4dd4:	8c 2f       	mov	r24, r28
    4dd6:	0e 94 53 32 	call	0x64a6	; 0x64a6 <keylabel_statcheck>
    4dda:	0e 94 34 32 	call	0x6468	; 0x6468 <keylabel_toLCD>
    4dde:	f8 01       	movw	r30, r16
    4de0:	3c 96       	adiw	r30, 0x0c	; 12
    4de2:	85 91       	lpm	r24, Z+
    4de4:	95 91       	lpm	r25, Z+
    4de6:	00 97       	sbiw	r24, 0x00	; 0
    4de8:	81 f0       	breq	.+32     	; 0x4e0a <softKey_Execute+0x8e>
    4dea:	b8 01       	movw	r22, r16
    4dec:	6e 5f       	subi	r22, 0xFE	; 254
    4dee:	7f 4f       	sbci	r23, 0xFF	; 255
    4df0:	0e 94 ad 19 	call	0x335a	; 0x335a <menu_Init>
    4df4:	75 da       	rcall	.-2838   	; 0x42e0 <menu_InitLCD>
    4df6:	80 e0       	ldi	r24, 0x00	; 0
    4df8:	09 c0       	rjmp	.+18     	; 0x4e0c <softKey_Execute+0x90>
    4dfa:	8f ef       	ldi	r24, 0xFF	; 255
    4dfc:	07 c0       	rjmp	.+14     	; 0x4e0c <softKey_Execute+0x90>
    4dfe:	8f ef       	ldi	r24, 0xFF	; 255
    4e00:	05 c0       	rjmp	.+10     	; 0x4e0c <softKey_Execute+0x90>
    4e02:	8f ef       	ldi	r24, 0xFF	; 255
    4e04:	03 c0       	rjmp	.+6      	; 0x4e0c <softKey_Execute+0x90>
    4e06:	8f ef       	ldi	r24, 0xFF	; 255
    4e08:	01 c0       	rjmp	.+2      	; 0x4e0c <softKey_Execute+0x90>
    4e0a:	8f ef       	ldi	r24, 0xFF	; 255
    4e0c:	cf 91       	pop	r28
    4e0e:	1f 91       	pop	r17
    4e10:	0f 91       	pop	r16
    4e12:	08 95       	ret

00004e14 <menu_showPowerState>:
    4e14:	cf 93       	push	r28
    4e16:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    4e1a:	8c e0       	ldi	r24, 0x0C	; 12
    4e1c:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4e20:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <pipe_PowerStatus>
    4e24:	84 ff       	sbrs	r24, 4
    4e26:	02 c0       	rjmp	.+4      	; 0x4e2c <menu_showPowerState+0x18>
    4e28:	80 e2       	ldi	r24, 0x20	; 32
    4e2a:	01 c0       	rjmp	.+2      	; 0x4e2e <menu_showPowerState+0x1a>
    4e2c:	89 e0       	ldi	r24, 0x09	; 9
    4e2e:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    4e32:	8c 2f       	mov	r24, r28
    4e34:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    4e38:	cf 91       	pop	r28
    4e3a:	08 95       	ret

00004e3c <menuOnEnterPwrOn>:
    4e3c:	85 b1       	in	r24, 0x05	; 5
    4e3e:	80 64       	ori	r24, 0x40	; 64
    4e40:	85 b9       	out	0x05, r24	; 5
    4e42:	83 e1       	ldi	r24, 0x13	; 19
    4e44:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
    4e48:	e5 df       	rcall	.-54     	; 0x4e14 <menu_showPowerState>
    4e4a:	80 e0       	ldi	r24, 0x00	; 0
    4e4c:	08 95       	ret

00004e4e <menuOnEnterPwrOff>:
    4e4e:	85 b1       	in	r24, 0x05	; 5
    4e50:	8f 7b       	andi	r24, 0xBF	; 191
    4e52:	85 b9       	out	0x05, r24	; 5
    4e54:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <pipe_PowerStatus>
    4e58:	dd df       	rcall	.-70     	; 0x4e14 <menu_showPowerState>
    4e5a:	80 e0       	ldi	r24, 0x00	; 0
    4e5c:	08 95       	ret

00004e5e <menuOnEnterPwrRest>:
    4e5e:	85 b1       	in	r24, 0x05	; 5
    4e60:	8f 7b       	andi	r24, 0xBF	; 191
    4e62:	85 b9       	out	0x05, r24	; 5
    4e64:	81 e0       	ldi	r24, 0x01	; 1
    4e66:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pipe_PowerStatus>
    4e6a:	d4 df       	rcall	.-88     	; 0x4e14 <menu_showPowerState>
    4e6c:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    4e6e:	f8 94       	cli
    4e70:	81 e0       	ldi	r24, 0x01	; 1
    4e72:	06 c0       	rjmp	.+12     	; 0x4e80 <menuOnEnterPwrRest+0x22>
    4e74:	ed e2       	ldi	r30, 0x2D	; 45
    4e76:	f2 e0       	ldi	r31, 0x02	; 2
    4e78:	88 e2       	ldi	r24, 0x28	; 40
    4e7a:	82 83       	std	Z+2, r24	; 0x02
    4e7c:	13 82       	std	Z+3, r1	; 0x03
    4e7e:	80 e0       	ldi	r24, 0x00	; 0
    4e80:	81 11       	cpse	r24, r1
    4e82:	f8 cf       	rjmp	.-16     	; 0x4e74 <menuOnEnterPwrRest+0x16>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    4e84:	9f bf       	out	0x3f, r25	; 63
    4e86:	08 95       	ret

00004e88 <init_message>:

void pipeMsgInit (void) {
	pipeMsgInIndex = 0;
	pipeMsgOutIndex = 0;
	msgPipeOverflow = MESSAGE_PIPE_OVERFLOW_NO;
	msgPipe_Handling = FALSE;
    4e88:	10 92 7f 07 	sts	0x077F, r1	; 0x80077f <msgInIndex>
    4e8c:	10 92 7c 05 	sts	0x057C, r1	; 0x80057c <msgOutIndex>
    4e90:	10 92 7e 07 	sts	0x077E, r1	; 0x80077e <msgOverflow>
    4e94:	08 95       	ret

00004e96 <message_push>:
    4e96:	90 91 7f 07 	lds	r25, 0x077F	; 0x80077f <msgInIndex>
    4e9a:	e9 2f       	mov	r30, r25
    4e9c:	f0 e0       	ldi	r31, 0x00	; 0
    4e9e:	e0 58       	subi	r30, 0x80	; 128
    4ea0:	f8 4f       	sbci	r31, 0xF8	; 248
    4ea2:	80 83       	st	Z, r24
    4ea4:	9f 5f       	subi	r25, 0xFF	; 255
    4ea6:	9f 71       	andi	r25, 0x1F	; 31
    4ea8:	80 91 7c 05 	lds	r24, 0x057C	; 0x80057c <msgOutIndex>
    4eac:	98 13       	cpse	r25, r24
    4eae:	04 c0       	rjmp	.+8      	; 0x4eb8 <message_push+0x22>
    4eb0:	8f ef       	ldi	r24, 0xFF	; 255
    4eb2:	80 93 7e 07 	sts	0x077E, r24	; 0x80077e <msgOverflow>
    4eb6:	08 95       	ret
    4eb8:	90 93 7f 07 	sts	0x077F, r25	; 0x80077f <msgInIndex>
    4ebc:	08 95       	ret

00004ebe <message_get>:
    4ebe:	4f b7       	in	r20, 0x3f	; 63
    4ec0:	f8 94       	cli
    4ec2:	21 e0       	ldi	r18, 0x01	; 1
    4ec4:	11 c0       	rjmp	.+34     	; 0x4ee8 <message_get+0x2a>
    4ec6:	90 91 7c 05 	lds	r25, 0x057C	; 0x80057c <msgOutIndex>
    4eca:	30 91 7f 07 	lds	r19, 0x077F	; 0x80077f <msgInIndex>
    4ece:	8f ef       	ldi	r24, 0xFF	; 255
    4ed0:	20 e0       	ldi	r18, 0x00	; 0
    4ed2:	93 17       	cp	r25, r19
    4ed4:	49 f0       	breq	.+18     	; 0x4ee8 <message_get+0x2a>
    4ed6:	e9 2f       	mov	r30, r25
    4ed8:	f0 e0       	ldi	r31, 0x00	; 0
    4eda:	e0 58       	subi	r30, 0x80	; 128
    4edc:	f8 4f       	sbci	r31, 0xF8	; 248
    4ede:	80 81       	ld	r24, Z
    4ee0:	9f 5f       	subi	r25, 0xFF	; 255
    4ee2:	9f 71       	andi	r25, 0x1F	; 31
    4ee4:	90 93 7c 05 	sts	0x057C, r25	; 0x80057c <msgOutIndex>
    4ee8:	21 11       	cpse	r18, r1
    4eea:	ed cf       	rjmp	.-38     	; 0x4ec6 <message_get+0x8>
    4eec:	4f bf       	out	0x3f, r20	; 63
    4eee:	08 95       	ret

00004ef0 <message_status>:
    4ef0:	4f b7       	in	r20, 0x3f	; 63
    4ef2:	f8 94       	cli
    4ef4:	91 e0       	ldi	r25, 0x01	; 1
    4ef6:	08 c0       	rjmp	.+16     	; 0x4f08 <message_status+0x18>
    4ef8:	30 91 7c 05 	lds	r19, 0x057C	; 0x80057c <msgOutIndex>
    4efc:	20 91 7f 07 	lds	r18, 0x077F	; 0x80077f <msgInIndex>
    4f00:	90 e0       	ldi	r25, 0x00	; 0
    4f02:	80 e0       	ldi	r24, 0x00	; 0
    4f04:	32 17       	cp	r19, r18
    4f06:	11 f0       	breq	.+4      	; 0x4f0c <message_status+0x1c>
    4f08:	8f ef       	ldi	r24, 0xFF	; 255
    4f0a:	01 c0       	rjmp	.+2      	; 0x4f0e <message_status+0x1e>
    4f0c:	90 e0       	ldi	r25, 0x00	; 0
    4f0e:	91 11       	cpse	r25, r1
    4f10:	f3 cf       	rjmp	.-26     	; 0x4ef8 <message_status+0x8>
    4f12:	4f bf       	out	0x3f, r20	; 63
    4f14:	08 95       	ret

00004f16 <pipeMsgPush>:
};

void pipeMsgPush (PipeMessage_t pipeNr) {
    4f16:	ac 01       	movw	r20, r24
	if (msgPipe_Handling){
    4f18:	90 91 a0 07 	lds	r25, 0x07A0	; 0x8007a0 <msgPipe_Handling>
    4f1c:	99 23       	and	r25, r25
    4f1e:	e1 f0       	breq	.+56     	; 0x4f58 <pipeMsgPush+0x42>
		pipeMessages[pipeMsgInIndex++] = pipeNr;
    4f20:	90 91 7d 07 	lds	r25, 0x077D	; 0x80077d <pipeMsgInIndex>
    4f24:	21 e0       	ldi	r18, 0x01	; 1
    4f26:	29 0f       	add	r18, r25
    4f28:	20 93 7d 07 	sts	0x077D, r18	; 0x80077d <pipeMsgInIndex>
    4f2c:	e9 2f       	mov	r30, r25
    4f2e:	f0 e0       	ldi	r31, 0x00	; 0
    4f30:	ee 0f       	add	r30, r30
    4f32:	ff 1f       	adc	r31, r31
    4f34:	e3 58       	subi	r30, 0x83	; 131
    4f36:	fa 4f       	sbci	r31, 0xFA	; 250
    4f38:	51 83       	std	Z+1, r21	; 0x01
    4f3a:	40 83       	st	Z, r20
		if (pipeMsgInIndex >= PIPE_MSG_BUFCOUNT) {
			pipeMsgInIndex = 0;
		}
		if (pipeMsgInIndex == pipeMsgOutIndex) {
    4f3c:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <pipeMsgOutIndex>
    4f40:	28 13       	cpse	r18, r24
    4f42:	0a c0       	rjmp	.+20     	; 0x4f58 <pipeMsgPush+0x42>
			// overflow: reverse
			pipeMsgInIndex--;
    4f44:	90 93 7d 07 	sts	0x077D, r25	; 0x80077d <pipeMsgInIndex>
			if (pipeMsgInIndex == 0xFF) { // underflow -> 0xFF
    4f48:	9f 3f       	cpi	r25, 0xFF	; 255
    4f4a:	19 f4       	brne	.+6      	; 0x4f52 <pipeMsgPush+0x3c>
				pipeMsgInIndex = PIPE_MSG_BUFCOUNT-1;
    4f4c:	8f ef       	ldi	r24, 0xFF	; 255
    4f4e:	80 93 7d 07 	sts	0x077D, r24	; 0x80077d <pipeMsgInIndex>
			}
			msgPipeOverflow = MESSAGE_PIPE_OVERFLOW_YES; // must be reset by application
    4f52:	8f ef       	ldi	r24, 0xFF	; 255
    4f54:	80 93 a1 07 	sts	0x07A1, r24	; 0x8007a1 <msgPipeOverflow>
    4f58:	08 95       	ret

00004f5a <pipeMsgGet>:
		}
	}
}

PipeMessage_t pipeMsgGet (void){
	if (pipeMsgOutIndex == pipeMsgInIndex) {
    4f5a:	e0 91 a2 07 	lds	r30, 0x07A2	; 0x8007a2 <pipeMsgOutIndex>
    4f5e:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pipeMsgInIndex>
    4f62:	e8 13       	cpse	r30, r24
    4f64:	03 c0       	rjmp	.+6      	; 0x4f6c <pipeMsgGet+0x12>
		PipeMessage_t result;
		result.Message16 =  MESSAGE_PIPE_NIL;
		return (result);
    4f66:	8f ef       	ldi	r24, 0xFF	; 255
    4f68:	9f ef       	ldi	r25, 0xFF	; 255
    4f6a:	08 95       	ret
	} else {
		PipeMessage_t mess = pipeMessages[pipeMsgOutIndex++];
    4f6c:	81 e0       	ldi	r24, 0x01	; 1
    4f6e:	8e 0f       	add	r24, r30
    4f70:	80 93 a2 07 	sts	0x07A2, r24	; 0x8007a2 <pipeMsgOutIndex>
    4f74:	f0 e0       	ldi	r31, 0x00	; 0
    4f76:	ee 0f       	add	r30, r30
    4f78:	ff 1f       	adc	r31, r31
    4f7a:	e3 58       	subi	r30, 0x83	; 131
    4f7c:	fa 4f       	sbci	r31, 0xFA	; 250
    4f7e:	80 81       	ld	r24, Z
    4f80:	91 81       	ldd	r25, Z+1	; 0x01
		if (pipeMsgInIndex >= PIPE_MSG_BUFCOUNT) {
			pipeMsgInIndex = 0;
		}
		return mess;
	}
};
    4f82:	08 95       	ret

00004f84 <pipeMsgStatus>:

uint8_t pipeMsgStatus (void) {
	if (pipeMsgOutIndex == pipeMsgInIndex) {
    4f84:	90 91 a2 07 	lds	r25, 0x07A2	; 0x8007a2 <pipeMsgOutIndex>
    4f88:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <pipeMsgInIndex>
    4f8c:	98 13       	cpse	r25, r24
    4f8e:	02 c0       	rjmp	.+4      	; 0x4f94 <pipeMsgStatus+0x10>
		return MESSAGE_STAT_EMPTY;
    4f90:	80 e0       	ldi	r24, 0x00	; 0
    4f92:	08 95       	ret
	} else {
		return MESSAGE_STAT_NONEMPTY;
    4f94:	8f ef       	ldi	r24, 0xFF	; 255
	}
}
    4f96:	08 95       	ret

00004f98 <midi_CouplerReset>:
    4f98:	80 e0       	ldi	r24, 0x00	; 0
    4f9a:	ec eb       	ldi	r30, 0xBC	; 188
    4f9c:	f7 e0       	ldi	r31, 0x07	; 7
    4f9e:	03 c0       	rjmp	.+6      	; 0x4fa6 <midi_CouplerReset+0xe>
    4fa0:	10 82       	st	Z, r1
    4fa2:	8f 5f       	subi	r24, 0xFF	; 255
    4fa4:	31 96       	adiw	r30, 0x01	; 1
    4fa6:	8c 30       	cpi	r24, 0x0C	; 12
    4fa8:	d8 f3       	brcs	.-10     	; 0x4fa0 <midi_CouplerReset+0x8>
    4faa:	08 95       	ret

00004fac <init_Midi>:
    4fac:	f5 cf       	rjmp	.-22     	; 0x4f98 <midi_CouplerReset>
    4fae:	08 95       	ret

00004fb0 <set_Coupler>:
    4fb0:	8c 30       	cpi	r24, 0x0C	; 12
    4fb2:	e8 f4       	brcc	.+58     	; 0x4fee <set_Coupler+0x3e>
    4fb4:	e8 2f       	mov	r30, r24
    4fb6:	f0 e0       	ldi	r31, 0x00	; 0
    4fb8:	e4 54       	subi	r30, 0x44	; 68
    4fba:	f8 4f       	sbci	r31, 0xF8	; 248
    4fbc:	9f ef       	ldi	r25, 0xFF	; 255
    4fbe:	90 83       	st	Z, r25
    4fc0:	86 30       	cpi	r24, 0x06	; 6
    4fc2:	10 f0       	brcs	.+4      	; 0x4fc8 <set_Coupler+0x18>
    4fc4:	86 50       	subi	r24, 0x06	; 6
    4fc6:	01 c0       	rjmp	.+2      	; 0x4fca <set_Coupler+0x1a>
    4fc8:	8a 5f       	subi	r24, 0xFA	; 250
    4fca:	e8 2f       	mov	r30, r24
    4fcc:	f0 e0       	ldi	r31, 0x00	; 0
    4fce:	df 01       	movw	r26, r30
    4fd0:	a4 54       	subi	r26, 0x44	; 68
    4fd2:	b8 4f       	sbci	r27, 0xF8	; 248
    4fd4:	8c 91       	ld	r24, X
    4fd6:	88 23       	and	r24, r24
    4fd8:	59 f0       	breq	.+22     	; 0x4ff0 <set_Coupler+0x40>
    4fda:	df 01       	movw	r26, r30
    4fdc:	a4 54       	subi	r26, 0x44	; 68
    4fde:	b8 4f       	sbci	r27, 0xF8	; 248
    4fe0:	1c 92       	st	X, r1
    4fe2:	ee 0f       	add	r30, r30
    4fe4:	ff 1f       	adc	r31, r31
    4fe6:	e8 56       	subi	r30, 0x68	; 104
    4fe8:	ff 4e       	sbci	r31, 0xEF	; 239
    4fea:	84 91       	lpm	r24, Z
    4fec:	08 95       	ret
    4fee:	80 e0       	ldi	r24, 0x00	; 0
    4ff0:	08 95       	ret

00004ff2 <getAllCouplers>:
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	4b e0       	ldi	r20, 0x0B	; 11
    4ff8:	01 c0       	rjmp	.+2      	; 0x4ffc <getAllCouplers+0xa>
    4ffa:	42 2f       	mov	r20, r18
    4ffc:	28 2f       	mov	r18, r24
    4ffe:	39 2f       	mov	r19, r25
    5000:	22 0f       	add	r18, r18
    5002:	33 1f       	adc	r19, r19
    5004:	82 2f       	mov	r24, r18
    5006:	93 2f       	mov	r25, r19
    5008:	e4 2f       	mov	r30, r20
    500a:	f0 e0       	ldi	r31, 0x00	; 0
    500c:	e4 54       	subi	r30, 0x44	; 68
    500e:	f8 4f       	sbci	r31, 0xF8	; 248
    5010:	50 81       	ld	r21, Z
    5012:	5f 3f       	cpi	r21, 0xFF	; 255
    5014:	09 f4       	brne	.+2      	; 0x5018 <getAllCouplers+0x26>
    5016:	81 60       	ori	r24, 0x01	; 1
    5018:	2f ef       	ldi	r18, 0xFF	; 255
    501a:	24 0f       	add	r18, r20
    501c:	41 11       	cpse	r20, r1
    501e:	ed cf       	rjmp	.-38     	; 0x4ffa <getAllCouplers+0x8>
    5020:	08 95       	ret

00005022 <setAllCouplers>:
    5022:	40 e0       	ldi	r20, 0x00	; 0
    5024:	80 ff       	sbrs	r24, 0
    5026:	07 c0       	rjmp	.+14     	; 0x5036 <setAllCouplers+0x14>
    5028:	e4 2f       	mov	r30, r20
    502a:	f0 e0       	ldi	r31, 0x00	; 0
    502c:	e4 54       	subi	r30, 0x44	; 68
    502e:	f8 4f       	sbci	r31, 0xF8	; 248
    5030:	2f ef       	ldi	r18, 0xFF	; 255
    5032:	20 83       	st	Z, r18
    5034:	05 c0       	rjmp	.+10     	; 0x5040 <setAllCouplers+0x1e>
    5036:	e4 2f       	mov	r30, r20
    5038:	f0 e0       	ldi	r31, 0x00	; 0
    503a:	e4 54       	subi	r30, 0x44	; 68
    503c:	f8 4f       	sbci	r31, 0xF8	; 248
    503e:	10 82       	st	Z, r1
    5040:	28 2f       	mov	r18, r24
    5042:	39 2f       	mov	r19, r25
    5044:	36 95       	lsr	r19
    5046:	27 95       	ror	r18
    5048:	82 2f       	mov	r24, r18
    504a:	93 2f       	mov	r25, r19
    504c:	4f 5f       	subi	r20, 0xFF	; 255
    504e:	4c 30       	cpi	r20, 0x0C	; 12
    5050:	48 f3       	brcs	.-46     	; 0x5024 <setAllCouplers+0x2>
    5052:	08 95       	ret

00005054 <midiAllReset>:
    5054:	80 e8       	ldi	r24, 0x80	; 128
    5056:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <pipeProcessing>
    505a:	0c 94 78 0c 	jmp	0x18f0	; 0x18f0 <init_Pipe>
    505e:	08 95       	ret

00005060 <registers_CalcCount>:
    5060:	20 e0       	ldi	r18, 0x00	; 0
    5062:	30 e0       	ldi	r19, 0x00	; 0
    5064:	12 c0       	rjmp	.+36     	; 0x508a <registers_CalcCount+0x2a>
    5066:	82 2f       	mov	r24, r18
    5068:	90 e0       	ldi	r25, 0x00	; 0
    506a:	fc 01       	movw	r30, r24
    506c:	ee 0f       	add	r30, r30
    506e:	ff 1f       	adc	r31, r31
    5070:	8e 0f       	add	r24, r30
    5072:	9f 1f       	adc	r25, r31
    5074:	fc 01       	movw	r30, r24
    5076:	ed 55       	subi	r30, 0x5D	; 93
    5078:	f8 4f       	sbci	r31, 0xF8	; 248
    507a:	81 81       	ldd	r24, Z+1	; 0x01
    507c:	8f 3f       	cpi	r24, 0xFF	; 255
    507e:	21 f0       	breq	.+8      	; 0x5088 <registers_CalcCount+0x28>
    5080:	83 17       	cp	r24, r19
    5082:	10 f0       	brcs	.+4      	; 0x5088 <registers_CalcCount+0x28>
    5084:	31 e0       	ldi	r19, 0x01	; 1
    5086:	38 0f       	add	r19, r24
    5088:	2f 5f       	subi	r18, 0xFF	; 255
    508a:	28 30       	cpi	r18, 0x08	; 8
    508c:	60 f3       	brcs	.-40     	; 0x5066 <registers_CalcCount+0x6>
    508e:	30 93 bb 07 	sts	0x07BB, r19	; 0x8007bb <registerCount>
    5092:	08 95       	ret

00005094 <init_Registers>:
    5094:	20 e0       	ldi	r18, 0x00	; 0
    5096:	0e c0       	rjmp	.+28     	; 0x50b4 <init_Registers+0x20>
    5098:	82 2f       	mov	r24, r18
    509a:	90 e0       	ldi	r25, 0x00	; 0
    509c:	fc 01       	movw	r30, r24
    509e:	ee 0f       	add	r30, r30
    50a0:	ff 1f       	adc	r31, r31
    50a2:	e8 0f       	add	r30, r24
    50a4:	f9 1f       	adc	r31, r25
    50a6:	ed 55       	subi	r30, 0x5D	; 93
    50a8:	f8 4f       	sbci	r31, 0xF8	; 248
    50aa:	8f ef       	ldi	r24, 0xFF	; 255
    50ac:	80 83       	st	Z, r24
    50ae:	81 83       	std	Z+1, r24	; 0x01
    50b0:	12 82       	std	Z+2, r1	; 0x02
    50b2:	2f 5f       	subi	r18, 0xFF	; 255
    50b4:	28 30       	cpi	r18, 0x08	; 8
    50b6:	80 f3       	brcs	.-32     	; 0x5098 <init_Registers+0x4>
    50b8:	0e 94 28 0a 	call	0x1450	; 0x1450 <eeprom_ReadReg>
    50bc:	8f 3f       	cpi	r24, 0xFF	; 255
    50be:	49 f4       	brne	.+18     	; 0x50d2 <init_Registers+0x3e>
    50c0:	10 92 bb 07 	sts	0x07BB, r1	; 0x8007bb <registerCount>
    50c4:	40 e0       	ldi	r20, 0x00	; 0
    50c6:	50 e0       	ldi	r21, 0x00	; 0
    50c8:	65 e0       	ldi	r22, 0x05	; 5
    50ca:	81 e0       	ldi	r24, 0x01	; 1
    50cc:	0e 94 52 13 	call	0x26a4	; 0x26a4 <log_putError>
    50d0:	01 c0       	rjmp	.+2      	; 0x50d4 <init_Registers+0x40>
    50d2:	c6 df       	rcall	.-116    	; 0x5060 <registers_CalcCount>
    50d4:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <eeprom_ReadProg>
    50d8:	8f 3f       	cpi	r24, 0xFF	; 255
    50da:	a1 f5       	brne	.+104    	; 0x5144 <init_Registers+0xb0>
    50dc:	2a c0       	rjmp	.+84     	; 0x5132 <init_Registers+0x9e>
    50de:	83 2f       	mov	r24, r19
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	fc 01       	movw	r30, r24
    50e4:	ee 0f       	add	r30, r30
    50e6:	ff 1f       	adc	r31, r31
    50e8:	88 0f       	add	r24, r24
    50ea:	99 1f       	adc	r25, r25
    50ec:	88 0f       	add	r24, r24
    50ee:	99 1f       	adc	r25, r25
    50f0:	88 0f       	add	r24, r24
    50f2:	99 1f       	adc	r25, r25
    50f4:	e8 0f       	add	r30, r24
    50f6:	f9 1f       	adc	r31, r25
    50f8:	e9 5f       	subi	r30, 0xF9	; 249
    50fa:	f6 4f       	sbci	r31, 0xF6	; 246
    50fc:	e2 0f       	add	r30, r18
    50fe:	f1 1d       	adc	r31, r1
    5100:	10 82       	st	Z, r1
    5102:	2f 5f       	subi	r18, 0xFF	; 255
    5104:	01 c0       	rjmp	.+2      	; 0x5108 <init_Registers+0x74>
    5106:	20 e0       	ldi	r18, 0x00	; 0
    5108:	28 30       	cpi	r18, 0x08	; 8
    510a:	48 f3       	brcs	.-46     	; 0x50de <init_Registers+0x4a>
    510c:	83 2f       	mov	r24, r19
    510e:	90 e0       	ldi	r25, 0x00	; 0
    5110:	fc 01       	movw	r30, r24
    5112:	ee 0f       	add	r30, r30
    5114:	ff 1f       	adc	r31, r31
    5116:	88 0f       	add	r24, r24
    5118:	99 1f       	adc	r25, r25
    511a:	88 0f       	add	r24, r24
    511c:	99 1f       	adc	r25, r25
    511e:	88 0f       	add	r24, r24
    5120:	99 1f       	adc	r25, r25
    5122:	e8 0f       	add	r30, r24
    5124:	f9 1f       	adc	r31, r25
    5126:	e9 5f       	subi	r30, 0xF9	; 249
    5128:	f6 4f       	sbci	r31, 0xF6	; 246
    512a:	11 86       	std	Z+9, r1	; 0x09
    512c:	10 86       	std	Z+8, r1	; 0x08
    512e:	3f 5f       	subi	r19, 0xFF	; 255
    5130:	01 c0       	rjmp	.+2      	; 0x5134 <init_Registers+0xa0>
    5132:	30 e0       	ldi	r19, 0x00	; 0
    5134:	30 34       	cpi	r19, 0x40	; 64
    5136:	38 f3       	brcs	.-50     	; 0x5106 <init_Registers+0x72>
    5138:	40 e0       	ldi	r20, 0x00	; 0
    513a:	50 e0       	ldi	r21, 0x00	; 0
    513c:	66 e0       	ldi	r22, 0x06	; 6
    513e:	81 e0       	ldi	r24, 0x01	; 1
    5140:	0c 94 52 13 	jmp	0x26a4	; 0x26a4 <log_putError>
    5144:	08 95       	ret

00005146 <regNr_to_moduleBit>:
    5146:	90 91 bb 07 	lds	r25, 0x07BB	; 0x8007bb <registerCount>
    514a:	89 17       	cp	r24, r25
    514c:	a0 f4       	brcc	.+40     	; 0x5176 <regNr_to_moduleBit+0x30>
    514e:	80 34       	cpi	r24, 0x40	; 64
    5150:	90 f4       	brcc	.+36     	; 0x5176 <regNr_to_moduleBit+0x30>
    5152:	28 e0       	ldi	r18, 0x08	; 8
    5154:	e3 ea       	ldi	r30, 0xA3	; 163
    5156:	f7 e0       	ldi	r31, 0x07	; 7
    5158:	30 81       	ld	r19, Z
    515a:	83 17       	cp	r24, r19
    515c:	48 f0       	brcs	.+18     	; 0x5170 <regNr_to_moduleBit+0x2a>
    515e:	91 81       	ldd	r25, Z+1	; 0x01
    5160:	98 17       	cp	r25, r24
    5162:	30 f0       	brcs	.+12     	; 0x5170 <regNr_to_moduleBit+0x2a>
    5164:	22 81       	ldd	r18, Z+2	; 0x02
    5166:	98 2f       	mov	r25, r24
    5168:	93 1b       	sub	r25, r19
    516a:	80 e0       	ldi	r24, 0x00	; 0
    516c:	92 0f       	add	r25, r18
    516e:	08 95       	ret
    5170:	33 96       	adiw	r30, 0x03	; 3
    5172:	21 50       	subi	r18, 0x01	; 1
    5174:	89 f7       	brne	.-30     	; 0x5158 <regNr_to_moduleBit+0x12>
    5176:	8f ef       	ldi	r24, 0xFF	; 255
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	08 95       	ret

0000517c <read_Register>:
    517c:	cf 93       	push	r28
    517e:	90 91 bb 07 	lds	r25, 0x07BB	; 0x8007bb <registerCount>
    5182:	89 17       	cp	r24, r25
    5184:	08 f0       	brcs	.+2      	; 0x5188 <read_Register+0xc>
    5186:	3c c0       	rjmp	.+120    	; 0x5200 <read_Register+0x84>
    5188:	c6 2f       	mov	r28, r22
    518a:	dd df       	rcall	.-70     	; 0x5146 <regNr_to_moduleBit>
    518c:	81 11       	cpse	r24, r1
    518e:	30 c0       	rjmp	.+96     	; 0x51f0 <read_Register+0x74>
    5190:	29 2f       	mov	r18, r25
    5192:	2f 71       	andi	r18, 0x1F	; 31
    5194:	92 95       	swap	r25
    5196:	96 95       	lsr	r25
    5198:	97 70       	andi	r25, 0x07	; 7
    519a:	41 e0       	ldi	r20, 0x01	; 1
    519c:	50 e0       	ldi	r21, 0x00	; 0
    519e:	02 c0       	rjmp	.+4      	; 0x51a4 <read_Register+0x28>
    51a0:	44 0f       	add	r20, r20
    51a2:	55 1f       	adc	r21, r21
    51a4:	9a 95       	dec	r25
    51a6:	e2 f7       	brpl	.-8      	; 0x51a0 <read_Register+0x24>
    51a8:	30 e0       	ldi	r19, 0x00	; 0
    51aa:	f9 01       	movw	r30, r18
    51ac:	ee 0f       	add	r30, r30
    51ae:	ff 1f       	adc	r31, r31
    51b0:	ee 0f       	add	r30, r30
    51b2:	ff 1f       	adc	r31, r31
    51b4:	ee 0f       	add	r30, r30
    51b6:	ff 1f       	adc	r31, r31
    51b8:	e9 5b       	subi	r30, 0xB9	; 185
    51ba:	fd 4f       	sbci	r31, 0xFD	; 253
    51bc:	91 81       	ldd	r25, Z+1	; 0x01
    51be:	94 23       	and	r25, r20
    51c0:	11 f4       	brne	.+4      	; 0x51c6 <read_Register+0x4a>
    51c2:	c1 fd       	sbrc	r28, 1
    51c4:	17 c0       	rjmp	.+46     	; 0x51f4 <read_Register+0x78>
    51c6:	22 0f       	add	r18, r18
    51c8:	33 1f       	adc	r19, r19
    51ca:	22 0f       	add	r18, r18
    51cc:	33 1f       	adc	r19, r19
    51ce:	22 0f       	add	r18, r18
    51d0:	33 1f       	adc	r19, r19
    51d2:	f9 01       	movw	r30, r18
    51d4:	e9 5b       	subi	r30, 0xB9	; 185
    51d6:	fd 4f       	sbci	r31, 0xFD	; 253
    51d8:	26 81       	ldd	r18, Z+6	; 0x06
    51da:	42 23       	and	r20, r18
    51dc:	11 f0       	breq	.+4      	; 0x51e2 <read_Register+0x66>
    51de:	c0 fd       	sbrc	r28, 0
    51e0:	0b c0       	rjmp	.+22     	; 0x51f8 <read_Register+0x7c>
    51e2:	99 23       	and	r25, r25
    51e4:	71 f0       	breq	.+28     	; 0x5202 <read_Register+0x86>
    51e6:	44 23       	and	r20, r20
    51e8:	61 f0       	breq	.+24     	; 0x5202 <read_Register+0x86>
    51ea:	c4 30       	cpi	r28, 0x04	; 4
    51ec:	51 f4       	brne	.+20     	; 0x5202 <read_Register+0x86>
    51ee:	06 c0       	rjmp	.+12     	; 0x51fc <read_Register+0x80>
    51f0:	80 e0       	ldi	r24, 0x00	; 0
    51f2:	07 c0       	rjmp	.+14     	; 0x5202 <read_Register+0x86>
    51f4:	81 e0       	ldi	r24, 0x01	; 1
    51f6:	05 c0       	rjmp	.+10     	; 0x5202 <read_Register+0x86>
    51f8:	81 e0       	ldi	r24, 0x01	; 1
    51fa:	03 c0       	rjmp	.+6      	; 0x5202 <read_Register+0x86>
    51fc:	81 e0       	ldi	r24, 0x01	; 1
    51fe:	01 c0       	rjmp	.+2      	; 0x5202 <read_Register+0x86>
    5200:	80 e0       	ldi	r24, 0x00	; 0
    5202:	cf 91       	pop	r28
    5204:	08 95       	ret

00005206 <read_allRegister>:
    5206:	ef 92       	push	r14
    5208:	ff 92       	push	r15
    520a:	0f 93       	push	r16
    520c:	1f 93       	push	r17
    520e:	cf 93       	push	r28
    5210:	df 93       	push	r29
    5212:	7c 01       	movw	r14, r24
    5214:	c0 e0       	ldi	r28, 0x00	; 0
    5216:	d0 e0       	ldi	r29, 0x00	; 0
    5218:	00 e0       	ldi	r16, 0x00	; 0
    521a:	17 c0       	rjmp	.+46     	; 0x524a <read_allRegister+0x44>
    521c:	1c 2f       	mov	r17, r28
    521e:	17 70       	andi	r17, 0x07	; 7
    5220:	09 f4       	brne	.+2      	; 0x5224 <read_allRegister+0x1e>
    5222:	d0 e0       	ldi	r29, 0x00	; 0
    5224:	d6 95       	lsr	r29
    5226:	63 e0       	ldi	r22, 0x03	; 3
    5228:	8c 2f       	mov	r24, r28
    522a:	a8 df       	rcall	.-176    	; 0x517c <read_Register>
    522c:	88 23       	and	r24, r24
    522e:	11 f0       	breq	.+4      	; 0x5234 <read_allRegister+0x2e>
    5230:	d0 68       	ori	r29, 0x80	; 128
    5232:	0f 5f       	subi	r16, 0xFF	; 255
    5234:	17 30       	cpi	r17, 0x07	; 7
    5236:	41 f4       	brne	.+16     	; 0x5248 <read_allRegister+0x42>
    5238:	e1 14       	cp	r14, r1
    523a:	f1 04       	cpc	r15, r1
    523c:	29 f0       	breq	.+10     	; 0x5248 <read_allRegister+0x42>
    523e:	f7 01       	movw	r30, r14
    5240:	d0 83       	st	Z, r29
    5242:	c7 01       	movw	r24, r14
    5244:	01 96       	adiw	r24, 0x01	; 1
    5246:	7c 01       	movw	r14, r24
    5248:	cf 5f       	subi	r28, 0xFF	; 255
    524a:	c0 34       	cpi	r28, 0x40	; 64
    524c:	38 f3       	brcs	.-50     	; 0x521c <read_allRegister+0x16>
    524e:	80 2f       	mov	r24, r16
    5250:	df 91       	pop	r29
    5252:	cf 91       	pop	r28
    5254:	1f 91       	pop	r17
    5256:	0f 91       	pop	r16
    5258:	ff 90       	pop	r15
    525a:	ef 90       	pop	r14
    525c:	08 95       	ret

0000525e <register_onOff>:
    525e:	cf 93       	push	r28
    5260:	90 91 bb 07 	lds	r25, 0x07BB	; 0x8007bb <registerCount>
    5264:	89 17       	cp	r24, r25
    5266:	b8 f5       	brcc	.+110    	; 0x52d6 <register_onOff+0x78>
    5268:	c6 2f       	mov	r28, r22
    526a:	6d df       	rcall	.-294    	; 0x5146 <regNr_to_moduleBit>
    526c:	81 11       	cpse	r24, r1
    526e:	33 c0       	rjmp	.+102    	; 0x52d6 <register_onOff+0x78>
    5270:	e9 2f       	mov	r30, r25
    5272:	ef 71       	andi	r30, 0x1F	; 31
    5274:	92 95       	swap	r25
    5276:	96 95       	lsr	r25
    5278:	97 70       	andi	r25, 0x07	; 7
    527a:	c0 ff       	sbrs	r28, 0
    527c:	17 c0       	rjmp	.+46     	; 0x52ac <register_onOff+0x4e>
    527e:	f0 e0       	ldi	r31, 0x00	; 0
    5280:	21 e0       	ldi	r18, 0x01	; 1
    5282:	30 e0       	ldi	r19, 0x00	; 0
    5284:	a9 01       	movw	r20, r18
    5286:	02 c0       	rjmp	.+4      	; 0x528c <register_onOff+0x2e>
    5288:	44 0f       	add	r20, r20
    528a:	55 1f       	adc	r21, r21
    528c:	9a 95       	dec	r25
    528e:	e2 f7       	brpl	.-8      	; 0x5288 <register_onOff+0x2a>
    5290:	ca 01       	movw	r24, r20
    5292:	ee 0f       	add	r30, r30
    5294:	ff 1f       	adc	r31, r31
    5296:	ee 0f       	add	r30, r30
    5298:	ff 1f       	adc	r31, r31
    529a:	ee 0f       	add	r30, r30
    529c:	ff 1f       	adc	r31, r31
    529e:	e9 5b       	subi	r30, 0xB9	; 185
    52a0:	fd 4f       	sbci	r31, 0xFD	; 253
    52a2:	80 95       	com	r24
    52a4:	91 81       	ldd	r25, Z+1	; 0x01
    52a6:	89 23       	and	r24, r25
    52a8:	81 83       	std	Z+1, r24	; 0x01
    52aa:	15 c0       	rjmp	.+42     	; 0x52d6 <register_onOff+0x78>
    52ac:	f0 e0       	ldi	r31, 0x00	; 0
    52ae:	21 e0       	ldi	r18, 0x01	; 1
    52b0:	30 e0       	ldi	r19, 0x00	; 0
    52b2:	a9 01       	movw	r20, r18
    52b4:	02 c0       	rjmp	.+4      	; 0x52ba <register_onOff+0x5c>
    52b6:	44 0f       	add	r20, r20
    52b8:	55 1f       	adc	r21, r21
    52ba:	9a 95       	dec	r25
    52bc:	e2 f7       	brpl	.-8      	; 0x52b6 <register_onOff+0x58>
    52be:	ca 01       	movw	r24, r20
    52c0:	ee 0f       	add	r30, r30
    52c2:	ff 1f       	adc	r31, r31
    52c4:	ee 0f       	add	r30, r30
    52c6:	ff 1f       	adc	r31, r31
    52c8:	ee 0f       	add	r30, r30
    52ca:	ff 1f       	adc	r31, r31
    52cc:	e9 5b       	subi	r30, 0xB9	; 185
    52ce:	fd 4f       	sbci	r31, 0xFD	; 253
    52d0:	91 81       	ldd	r25, Z+1	; 0x01
    52d2:	89 2b       	or	r24, r25
    52d4:	81 83       	std	Z+1, r24	; 0x01
    52d6:	cf 91       	pop	r28
    52d8:	08 95       	ret

000052da <program_toRegister>:
    52da:	bf 92       	push	r11
    52dc:	cf 92       	push	r12
    52de:	df 92       	push	r13
    52e0:	ef 92       	push	r14
    52e2:	ff 92       	push	r15
    52e4:	0f 93       	push	r16
    52e6:	1f 93       	push	r17
    52e8:	cf 93       	push	r28
    52ea:	df 93       	push	r29
    52ec:	80 34       	cpi	r24, 0x40	; 64
    52ee:	08 f0       	brcs	.+2      	; 0x52f2 <program_toRegister+0x18>
    52f0:	40 c0       	rjmp	.+128    	; 0x5372 <program_toRegister+0x98>
    52f2:	e8 2e       	mov	r14, r24
    52f4:	f1 2c       	mov	r15, r1
    52f6:	f7 01       	movw	r30, r14
    52f8:	ee 0f       	add	r30, r30
    52fa:	ff 1f       	adc	r31, r31
    52fc:	c7 01       	movw	r24, r14
    52fe:	88 0f       	add	r24, r24
    5300:	99 1f       	adc	r25, r25
    5302:	88 0f       	add	r24, r24
    5304:	99 1f       	adc	r25, r25
    5306:	88 0f       	add	r24, r24
    5308:	99 1f       	adc	r25, r25
    530a:	e8 0f       	add	r30, r24
    530c:	f9 1f       	adc	r31, r25
    530e:	e9 5f       	subi	r30, 0xF9	; 249
    5310:	f6 4f       	sbci	r31, 0xF6	; 246
    5312:	b1 2c       	mov	r11, r1
    5314:	10 e0       	ldi	r17, 0x00	; 0
    5316:	00 e0       	ldi	r16, 0x00	; 0
    5318:	18 c0       	rjmp	.+48     	; 0x534a <program_toRegister+0x70>
    531a:	6f 01       	movw	r12, r30
    531c:	8f ef       	ldi	r24, 0xFF	; 255
    531e:	c8 1a       	sub	r12, r24
    5320:	d8 0a       	sbc	r13, r24
    5322:	c0 81       	ld	r28, Z
    5324:	d0 e0       	ldi	r29, 0x00	; 0
    5326:	0d c0       	rjmp	.+26     	; 0x5342 <program_toRegister+0x68>
    5328:	8c 2f       	mov	r24, r28
    532a:	81 70       	andi	r24, 0x01	; 1
    532c:	c0 fd       	sbrc	r28, 0
    532e:	0f 5f       	subi	r16, 0xFF	; 255
    5330:	61 e0       	ldi	r22, 0x01	; 1
    5332:	81 11       	cpse	r24, r1
    5334:	01 c0       	rjmp	.+2      	; 0x5338 <program_toRegister+0x5e>
    5336:	60 e0       	ldi	r22, 0x00	; 0
    5338:	81 2f       	mov	r24, r17
    533a:	91 df       	rcall	.-222    	; 0x525e <register_onOff>
    533c:	c6 95       	lsr	r28
    533e:	1f 5f       	subi	r17, 0xFF	; 255
    5340:	df 5f       	subi	r29, 0xFF	; 255
    5342:	d8 30       	cpi	r29, 0x08	; 8
    5344:	88 f3       	brcs	.-30     	; 0x5328 <program_toRegister+0x4e>
    5346:	b3 94       	inc	r11
    5348:	f6 01       	movw	r30, r12
    534a:	87 e0       	ldi	r24, 0x07	; 7
    534c:	8b 15       	cp	r24, r11
    534e:	28 f7       	brcc	.-54     	; 0x531a <program_toRegister+0x40>
    5350:	f7 01       	movw	r30, r14
    5352:	ee 0f       	add	r30, r30
    5354:	ff 1f       	adc	r31, r31
    5356:	ee 0c       	add	r14, r14
    5358:	ff 1c       	adc	r15, r15
    535a:	ee 0c       	add	r14, r14
    535c:	ff 1c       	adc	r15, r15
    535e:	ee 0c       	add	r14, r14
    5360:	ff 1c       	adc	r15, r15
    5362:	ee 0d       	add	r30, r14
    5364:	ff 1d       	adc	r31, r15
    5366:	e9 5f       	subi	r30, 0xF9	; 249
    5368:	f6 4f       	sbci	r31, 0xF6	; 246
    536a:	80 85       	ldd	r24, Z+8	; 0x08
    536c:	91 85       	ldd	r25, Z+9	; 0x09
    536e:	59 de       	rcall	.-846    	; 0x5022 <setAllCouplers>
    5370:	01 c0       	rjmp	.+2      	; 0x5374 <program_toRegister+0x9a>
    5372:	00 e0       	ldi	r16, 0x00	; 0
    5374:	80 2f       	mov	r24, r16
    5376:	df 91       	pop	r29
    5378:	cf 91       	pop	r28
    537a:	1f 91       	pop	r17
    537c:	0f 91       	pop	r16
    537e:	ff 90       	pop	r15
    5380:	ef 90       	pop	r14
    5382:	df 90       	pop	r13
    5384:	cf 90       	pop	r12
    5386:	bf 90       	pop	r11
    5388:	08 95       	ret

0000538a <midi_resetRegisters>:
    538a:	cf 93       	push	r28
    538c:	c0 e0       	ldi	r28, 0x00	; 0
    538e:	04 c0       	rjmp	.+8      	; 0x5398 <midi_resetRegisters+0xe>
    5390:	60 e0       	ldi	r22, 0x00	; 0
    5392:	8c 2f       	mov	r24, r28
    5394:	64 df       	rcall	.-312    	; 0x525e <register_onOff>
    5396:	cf 5f       	subi	r28, 0xFF	; 255
    5398:	80 91 bb 07 	lds	r24, 0x07BB	; 0x8007bb <registerCount>
    539c:	c8 17       	cp	r28, r24
    539e:	c0 f3       	brcs	.-16     	; 0x5390 <midi_resetRegisters+0x6>
    53a0:	cf 91       	pop	r28
    53a2:	08 95       	ret

000053a4 <register_toProgram>:
    53a4:	0f 93       	push	r16
    53a6:	1f 93       	push	r17
    53a8:	cf 93       	push	r28
    53aa:	df 93       	push	r29
    53ac:	c8 2f       	mov	r28, r24
    53ae:	06 2f       	mov	r16, r22
    53b0:	80 34       	cpi	r24, 0x40	; 64
    53b2:	90 f4       	brcc	.+36     	; 0x53d8 <register_toProgram+0x34>
    53b4:	28 2f       	mov	r18, r24
    53b6:	30 e0       	ldi	r19, 0x00	; 0
    53b8:	c9 01       	movw	r24, r18
    53ba:	88 0f       	add	r24, r24
    53bc:	99 1f       	adc	r25, r25
    53be:	22 0f       	add	r18, r18
    53c0:	33 1f       	adc	r19, r19
    53c2:	22 0f       	add	r18, r18
    53c4:	33 1f       	adc	r19, r19
    53c6:	22 0f       	add	r18, r18
    53c8:	33 1f       	adc	r19, r19
    53ca:	82 0f       	add	r24, r18
    53cc:	93 1f       	adc	r25, r19
    53ce:	89 5f       	subi	r24, 0xF9	; 249
    53d0:	96 4f       	sbci	r25, 0xF6	; 246
    53d2:	19 df       	rcall	.-462    	; 0x5206 <read_allRegister>
    53d4:	18 2f       	mov	r17, r24
    53d6:	01 c0       	rjmp	.+2      	; 0x53da <register_toProgram+0x36>
    53d8:	10 e0       	ldi	r17, 0x00	; 0
    53da:	d0 e0       	ldi	r29, 0x00	; 0
    53dc:	0a de       	rcall	.-1004   	; 0x4ff2 <getAllCouplers>
    53de:	9e 01       	movw	r18, r28
    53e0:	22 0f       	add	r18, r18
    53e2:	33 1f       	adc	r19, r19
    53e4:	cc 0f       	add	r28, r28
    53e6:	dd 1f       	adc	r29, r29
    53e8:	cc 0f       	add	r28, r28
    53ea:	dd 1f       	adc	r29, r29
    53ec:	cc 0f       	add	r28, r28
    53ee:	dd 1f       	adc	r29, r29
    53f0:	c2 0f       	add	r28, r18
    53f2:	d3 1f       	adc	r29, r19
    53f4:	c9 5f       	subi	r28, 0xF9	; 249
    53f6:	d6 4f       	sbci	r29, 0xF6	; 246
    53f8:	99 87       	std	Y+9, r25	; 0x09
    53fa:	88 87       	std	Y+8, r24	; 0x08
    53fc:	01 11       	cpse	r16, r1
    53fe:	0e 94 99 0b 	call	0x1732	; 0x1732 <eeprom_UpdateProg>
    5402:	81 2f       	mov	r24, r17
    5404:	df 91       	pop	r29
    5406:	cf 91       	pop	r28
    5408:	1f 91       	pop	r17
    540a:	0f 91       	pop	r16
    540c:	08 95       	ret

0000540e <init_Midi2Manual>:
    540e:	90 e4       	ldi	r25, 0x40	; 64
    5410:	e1 ed       	ldi	r30, 0xD1	; 209
    5412:	f7 e0       	ldi	r31, 0x07	; 7
    5414:	07 c0       	rjmp	.+14     	; 0x5424 <init_Midi2Manual+0x16>
    5416:	8f ef       	ldi	r24, 0xFF	; 255
    5418:	80 83       	st	Z, r24
    541a:	81 83       	std	Z+1, r24	; 0x01
    541c:	83 83       	std	Z+3, r24	; 0x03
    541e:	12 82       	std	Z+2, r1	; 0x02
    5420:	34 96       	adiw	r30, 0x04	; 4
    5422:	91 50       	subi	r25, 0x01	; 1
    5424:	91 11       	cpse	r25, r1
    5426:	f7 cf       	rjmp	.-18     	; 0x5416 <init_Midi2Manual+0x8>
    5428:	0e 94 7e 09 	call	0x12fc	; 0x12fc <eeprom_ReadMidiInMap>
    542c:	8f 3f       	cpi	r24, 0xFF	; 255
    542e:	01 f5       	brne	.+64     	; 0x5470 <init_Midi2Manual+0x62>
    5430:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <midiEEPromLoadError>
    5434:	e1 ed       	ldi	r30, 0xD1	; 209
    5436:	f7 e0       	ldi	r31, 0x07	; 7
    5438:	10 82       	st	Z, r1
    543a:	84 e2       	ldi	r24, 0x24	; 36
    543c:	81 83       	std	Z+1, r24	; 0x01
    543e:	83 83       	std	Z+3, r24	; 0x03
    5440:	98 e3       	ldi	r25, 0x38	; 56
    5442:	92 83       	std	Z+2, r25	; 0x02
    5444:	21 e0       	ldi	r18, 0x01	; 1
    5446:	20 8b       	std	Z+16, r18	; 0x10
    5448:	81 8b       	std	Z+17, r24	; 0x11
    544a:	83 8b       	std	Z+19, r24	; 0x13
    544c:	92 8b       	std	Z+18, r25	; 0x12
    544e:	22 e0       	ldi	r18, 0x02	; 2
    5450:	20 a3       	std	Z+32, r18	; 0x20
    5452:	81 a3       	std	Z+33, r24	; 0x21
    5454:	83 a3       	std	Z+35, r24	; 0x23
    5456:	92 a3       	std	Z+34, r25	; 0x22
    5458:	93 e0       	ldi	r25, 0x03	; 3
    545a:	90 ab       	std	Z+48, r25	; 0x30
    545c:	81 ab       	std	Z+49, r24	; 0x31
    545e:	83 ab       	std	Z+51, r24	; 0x33
    5460:	8e e1       	ldi	r24, 0x1E	; 30
    5462:	82 ab       	std	Z+50, r24	; 0x32
    5464:	40 e0       	ldi	r20, 0x00	; 0
    5466:	50 e0       	ldi	r21, 0x00	; 0
    5468:	61 e0       	ldi	r22, 0x01	; 1
    546a:	81 e0       	ldi	r24, 0x01	; 1
    546c:	0c 94 52 13 	jmp	0x26a4	; 0x26a4 <log_putError>
    5470:	08 95       	ret

00005472 <init_Manual2Midi>:
    5472:	20 e0       	ldi	r18, 0x00	; 0
    5474:	06 c0       	rjmp	.+12     	; 0x5482 <init_Manual2Midi+0x10>
    5476:	fc 01       	movw	r30, r24
    5478:	ef 52       	subi	r30, 0x2F	; 47
    547a:	f7 4f       	sbci	r31, 0xF7	; 247
    547c:	3f ef       	ldi	r19, 0xFF	; 255
    547e:	30 83       	st	Z, r19
    5480:	2f 5f       	subi	r18, 0xFF	; 255
    5482:	82 2f       	mov	r24, r18
    5484:	90 e0       	ldi	r25, 0x00	; 0
    5486:	00 97       	sbiw	r24, 0x00	; 0
    5488:	b1 f7       	brne	.-20     	; 0x5476 <init_Manual2Midi+0x4>
    548a:	0e 94 a6 09 	call	0x134c	; 0x134c <eeprom_ReadMidiOutMap>
    548e:	8f 3f       	cpi	r24, 0xFF	; 255
    5490:	a9 f4       	brne	.+42     	; 0x54bc <init_Manual2Midi+0x4a>
    5492:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <midiEEPromLoadError>
    5496:	e1 ed       	ldi	r30, 0xD1	; 209
    5498:	f8 e0       	ldi	r31, 0x08	; 8
    549a:	10 82       	st	Z, r1
    549c:	81 e0       	ldi	r24, 0x01	; 1
    549e:	81 83       	std	Z+1, r24	; 0x01
    54a0:	82 e0       	ldi	r24, 0x02	; 2
    54a2:	82 83       	std	Z+2, r24	; 0x02
    54a4:	83 e0       	ldi	r24, 0x03	; 3
    54a6:	83 83       	std	Z+3, r24	; 0x03
    54a8:	e5 ed       	ldi	r30, 0xD5	; 213
    54aa:	f8 e0       	ldi	r31, 0x08	; 8
    54ac:	10 82       	st	Z, r1
    54ae:	11 82       	std	Z+1, r1	; 0x01
    54b0:	40 e0       	ldi	r20, 0x00	; 0
    54b2:	50 e0       	ldi	r21, 0x00	; 0
    54b4:	62 e0       	ldi	r22, 0x02	; 2
    54b6:	81 e0       	ldi	r24, 0x01	; 1
    54b8:	0c 94 52 13 	jmp	0x26a4	; 0x26a4 <log_putError>
    54bc:	08 95       	ret

000054be <Manual_to_MidiNote>:
    54be:	e8 2f       	mov	r30, r24
    54c0:	8f ef       	ldi	r24, 0xFF	; 255
    54c2:	9f ef       	ldi	r25, 0xFF	; 255
    54c4:	e4 30       	cpi	r30, 0x04	; 4
    54c6:	40 f4       	brcc	.+16     	; 0x54d8 <Manual_to_MidiNote+0x1a>
    54c8:	f0 e0       	ldi	r31, 0x00	; 0
    54ca:	ef 52       	subi	r30, 0x2F	; 47
    54cc:	f7 4f       	sbci	r31, 0xF7	; 247
    54ce:	20 81       	ld	r18, Z
    54d0:	2f 3f       	cpi	r18, 0xFF	; 255
    54d2:	11 f0       	breq	.+4      	; 0x54d8 <Manual_to_MidiNote+0x1a>
    54d4:	82 2f       	mov	r24, r18
    54d6:	96 2f       	mov	r25, r22
    54d8:	08 95       	ret

000054da <Midi_updateManualRange>:
    54da:	70 e0       	ldi	r23, 0x00	; 0
    54dc:	52 c0       	rjmp	.+164    	; 0x5582 <Midi_updateManualRange+0xa8>
    54de:	87 2f       	mov	r24, r23
    54e0:	90 e0       	ldi	r25, 0x00	; 0
    54e2:	24 2f       	mov	r18, r20
    54e4:	30 e0       	ldi	r19, 0x00	; 0
    54e6:	f9 01       	movw	r30, r18
    54e8:	ee 0f       	add	r30, r30
    54ea:	ff 1f       	adc	r31, r31
    54ec:	df 01       	movw	r26, r30
    54ee:	a2 0f       	add	r26, r18
    54f0:	b3 1f       	adc	r27, r19
    54f2:	fc 01       	movw	r30, r24
    54f4:	ee 0f       	add	r30, r30
    54f6:	ff 1f       	adc	r31, r31
    54f8:	e8 0f       	add	r30, r24
    54fa:	f9 1f       	adc	r31, r25
    54fc:	ee 0f       	add	r30, r30
    54fe:	ff 1f       	adc	r31, r31
    5500:	ee 0f       	add	r30, r30
    5502:	ff 1f       	adc	r31, r31
    5504:	ea 0f       	add	r30, r26
    5506:	fb 1f       	adc	r31, r27
    5508:	e9 52       	subi	r30, 0x29	; 41
    550a:	f7 4f       	sbci	r31, 0xF7	; 247
    550c:	a0 81       	ld	r26, Z
    550e:	af 3f       	cpi	r26, 0xFF	; 255
    5510:	d9 f0       	breq	.+54     	; 0x5548 <Midi_updateManualRange+0x6e>
    5512:	f9 01       	movw	r30, r18
    5514:	ee 0f       	add	r30, r30
    5516:	ff 1f       	adc	r31, r31
    5518:	e2 0f       	add	r30, r18
    551a:	f3 1f       	adc	r31, r19
    551c:	9c 01       	movw	r18, r24
    551e:	22 0f       	add	r18, r18
    5520:	33 1f       	adc	r19, r19
    5522:	28 0f       	add	r18, r24
    5524:	39 1f       	adc	r19, r25
    5526:	22 0f       	add	r18, r18
    5528:	33 1f       	adc	r19, r19
    552a:	22 0f       	add	r18, r18
    552c:	33 1f       	adc	r19, r19
    552e:	e2 0f       	add	r30, r18
    5530:	f3 1f       	adc	r31, r19
    5532:	e9 52       	subi	r30, 0x29	; 41
    5534:	f7 4f       	sbci	r31, 0xF7	; 247
    5536:	21 81       	ldd	r18, Z+1	; 0x01
    5538:	2f 3f       	cpi	r18, 0xFF	; 255
    553a:	31 f0       	breq	.+12     	; 0x5548 <Midi_updateManualRange+0x6e>
    553c:	a6 17       	cp	r26, r22
    553e:	08 f4       	brcc	.+2      	; 0x5542 <Midi_updateManualRange+0x68>
    5540:	6a 2f       	mov	r22, r26
    5542:	52 17       	cp	r21, r18
    5544:	08 f4       	brcc	.+2      	; 0x5548 <Midi_updateManualRange+0x6e>
    5546:	52 2f       	mov	r21, r18
    5548:	55 23       	and	r21, r21
    554a:	11 f0       	breq	.+4      	; 0x5550 <Midi_updateManualRange+0x76>
    554c:	6f 3f       	cpi	r22, 0xFF	; 255
    554e:	49 f4       	brne	.+18     	; 0x5562 <Midi_updateManualRange+0x88>
    5550:	88 0f       	add	r24, r24
    5552:	99 1f       	adc	r25, r25
    5554:	fc 01       	movw	r30, r24
    5556:	e7 53       	subi	r30, 0x37	; 55
    5558:	f8 4f       	sbci	r31, 0xF8	; 248
    555a:	8f ef       	ldi	r24, 0xFF	; 255
    555c:	80 83       	st	Z, r24
    555e:	81 83       	std	Z+1, r24	; 0x01
    5560:	07 c0       	rjmp	.+14     	; 0x5570 <Midi_updateManualRange+0x96>
    5562:	88 0f       	add	r24, r24
    5564:	99 1f       	adc	r25, r25
    5566:	fc 01       	movw	r30, r24
    5568:	e7 53       	subi	r30, 0x37	; 55
    556a:	f8 4f       	sbci	r31, 0xF8	; 248
    556c:	60 83       	st	Z, r22
    556e:	51 83       	std	Z+1, r21	; 0x01
    5570:	4f 5f       	subi	r20, 0xFF	; 255
    5572:	03 c0       	rjmp	.+6      	; 0x557a <Midi_updateManualRange+0xa0>
    5574:	40 e0       	ldi	r20, 0x00	; 0
    5576:	6f ef       	ldi	r22, 0xFF	; 255
    5578:	50 e0       	ldi	r21, 0x00	; 0
    557a:	44 30       	cpi	r20, 0x04	; 4
    557c:	08 f4       	brcc	.+2      	; 0x5580 <Midi_updateManualRange+0xa6>
    557e:	af cf       	rjmp	.-162    	; 0x54de <Midi_updateManualRange+0x4>
    5580:	7f 5f       	subi	r23, 0xFF	; 255
    5582:	74 30       	cpi	r23, 0x04	; 4
    5584:	b8 f3       	brcs	.-18     	; 0x5574 <Midi_updateManualRange+0x9a>
    5586:	08 95       	ret

00005588 <init_Manual2Module>:
    5588:	63 e0       	ldi	r22, 0x03	; 3
    558a:	28 c0       	rjmp	.+80     	; 0x55dc <init_Manual2Module+0x54>
    558c:	86 2f       	mov	r24, r22
    558e:	06 2e       	mov	r0, r22
    5590:	00 0c       	add	r0, r0
    5592:	99 0b       	sbc	r25, r25
    5594:	42 2f       	mov	r20, r18
    5596:	02 2e       	mov	r0, r18
    5598:	00 0c       	add	r0, r0
    559a:	55 0b       	sbc	r21, r21
    559c:	fa 01       	movw	r30, r20
    559e:	ee 0f       	add	r30, r30
    55a0:	ff 1f       	adc	r31, r31
    55a2:	e4 0f       	add	r30, r20
    55a4:	f5 1f       	adc	r31, r21
    55a6:	ac 01       	movw	r20, r24
    55a8:	44 0f       	add	r20, r20
    55aa:	55 1f       	adc	r21, r21
    55ac:	da 01       	movw	r26, r20
    55ae:	a8 0f       	add	r26, r24
    55b0:	b9 1f       	adc	r27, r25
    55b2:	aa 0f       	add	r26, r26
    55b4:	bb 1f       	adc	r27, r27
    55b6:	aa 0f       	add	r26, r26
    55b8:	bb 1f       	adc	r27, r27
    55ba:	ae 0f       	add	r26, r30
    55bc:	bf 1f       	adc	r27, r31
    55be:	a9 52       	subi	r26, 0x29	; 41
    55c0:	b7 4f       	sbci	r27, 0xF7	; 247
    55c2:	3f ef       	ldi	r19, 0xFF	; 255
    55c4:	3c 93       	st	X, r19
    55c6:	11 96       	adiw	r26, 0x01	; 1
    55c8:	3c 93       	st	X, r19
    55ca:	11 97       	sbiw	r26, 0x01	; 1
    55cc:	fd 01       	movw	r30, r26
    55ce:	12 82       	std	Z+2, r1	; 0x02
    55d0:	21 50       	subi	r18, 0x01	; 1
    55d2:	01 c0       	rjmp	.+2      	; 0x55d6 <init_Manual2Module+0x4e>
    55d4:	23 e0       	ldi	r18, 0x03	; 3
    55d6:	22 23       	and	r18, r18
    55d8:	cc f6       	brge	.-78     	; 0x558c <init_Manual2Module+0x4>
    55da:	61 50       	subi	r22, 0x01	; 1
    55dc:	66 23       	and	r22, r22
    55de:	d4 f7       	brge	.-12     	; 0x55d4 <init_Manual2Module+0x4c>
    55e0:	0e 94 56 09 	call	0x12ac	; 0x12ac <eeprom_ReadManualMap>
    55e4:	8f 3f       	cpi	r24, 0xFF	; 255
    55e6:	41 f4       	brne	.+16     	; 0x55f8 <init_Manual2Module+0x70>
    55e8:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <midiEEPromLoadError>
    55ec:	40 e0       	ldi	r20, 0x00	; 0
    55ee:	50 e0       	ldi	r21, 0x00	; 0
    55f0:	63 e0       	ldi	r22, 0x03	; 3
    55f2:	81 e0       	ldi	r24, 0x01	; 1
    55f4:	0e 94 52 13 	call	0x26a4	; 0x26a4 <log_putError>
    55f8:	70 cf       	rjmp	.-288    	; 0x54da <Midi_updateManualRange>
    55fa:	08 95       	ret

000055fc <manualNote_to_moduleBit>:
    55fc:	84 30       	cpi	r24, 0x04	; 4
    55fe:	d8 f4       	brcc	.+54     	; 0x5636 <manualNote_to_moduleBit+0x3a>
    5600:	90 e0       	ldi	r25, 0x00	; 0
    5602:	fc 01       	movw	r30, r24
    5604:	ee 0f       	add	r30, r30
    5606:	ff 1f       	adc	r31, r31
    5608:	e8 0f       	add	r30, r24
    560a:	f9 1f       	adc	r31, r25
    560c:	ee 0f       	add	r30, r30
    560e:	ff 1f       	adc	r31, r31
    5610:	ee 0f       	add	r30, r30
    5612:	ff 1f       	adc	r31, r31
    5614:	e9 52       	subi	r30, 0x29	; 41
    5616:	f7 4f       	sbci	r31, 0xF7	; 247
    5618:	84 e0       	ldi	r24, 0x04	; 4
    561a:	20 81       	ld	r18, Z
    561c:	62 17       	cp	r22, r18
    561e:	40 f0       	brcs	.+16     	; 0x5630 <manualNote_to_moduleBit+0x34>
    5620:	91 81       	ldd	r25, Z+1	; 0x01
    5622:	96 17       	cp	r25, r22
    5624:	28 f0       	brcs	.+10     	; 0x5630 <manualNote_to_moduleBit+0x34>
    5626:	92 81       	ldd	r25, Z+2	; 0x02
    5628:	62 1b       	sub	r22, r18
    562a:	80 e0       	ldi	r24, 0x00	; 0
    562c:	96 0f       	add	r25, r22
    562e:	08 95       	ret
    5630:	33 96       	adiw	r30, 0x03	; 3
    5632:	81 50       	subi	r24, 0x01	; 1
    5634:	91 f7       	brne	.-28     	; 0x561a <manualNote_to_moduleBit+0x1e>
    5636:	8f ef       	ldi	r24, 0xFF	; 255
    5638:	90 e0       	ldi	r25, 0x00	; 0
    563a:	08 95       	ret

0000563c <moduleBit_to_manualNote>:
    563c:	70 e0       	ldi	r23, 0x00	; 0
    563e:	e7 ed       	ldi	r30, 0xD7	; 215
    5640:	f8 e0       	ldi	r31, 0x08	; 8
    5642:	54 e0       	ldi	r21, 0x04	; 4
    5644:	16 c0       	rjmp	.+44     	; 0x5672 <moduleBit_to_manualNote+0x36>
    5646:	62 81       	ldd	r22, Z+2	; 0x02
    5648:	86 17       	cp	r24, r22
    564a:	88 f0       	brcs	.+34     	; 0x566e <moduleBit_to_manualNote+0x32>
    564c:	a8 2f       	mov	r26, r24
    564e:	b0 e0       	ldi	r27, 0x00	; 0
    5650:	21 81       	ldd	r18, Z+1	; 0x01
    5652:	90 81       	ld	r25, Z
    5654:	30 e0       	ldi	r19, 0x00	; 0
    5656:	29 1b       	sub	r18, r25
    5658:	31 09       	sbc	r19, r1
    565a:	26 0f       	add	r18, r22
    565c:	31 1d       	adc	r19, r1
    565e:	2a 17       	cp	r18, r26
    5660:	3b 07       	cpc	r19, r27
    5662:	2c f0       	brlt	.+10     	; 0x566e <moduleBit_to_manualNote+0x32>
    5664:	48 2f       	mov	r20, r24
    5666:	46 1b       	sub	r20, r22
    5668:	87 2f       	mov	r24, r23
    566a:	94 0f       	add	r25, r20
    566c:	08 95       	ret
    566e:	33 96       	adiw	r30, 0x03	; 3
    5670:	51 50       	subi	r21, 0x01	; 1
    5672:	51 11       	cpse	r21, r1
    5674:	e8 cf       	rjmp	.-48     	; 0x5646 <moduleBit_to_manualNote+0xa>
    5676:	7f 5f       	subi	r23, 0xFF	; 255
    5678:	75 30       	cpi	r23, 0x05	; 5
    567a:	18 f3       	brcs	.-58     	; 0x5642 <moduleBit_to_manualNote+0x6>
    567c:	48 2f       	mov	r20, r24
    567e:	50 e0       	ldi	r21, 0x00	; 0
    5680:	61 e0       	ldi	r22, 0x01	; 1
    5682:	82 e0       	ldi	r24, 0x02	; 2
    5684:	0e 94 58 13 	call	0x26b0	; 0x26b0 <log_putWarning>
    5688:	8f ef       	ldi	r24, 0xFF	; 255
    568a:	90 e0       	ldi	r25, 0x00	; 0
    568c:	08 95       	ret

0000568e <manual_NoteOnOff>:
    568e:	cf 93       	push	r28
    5690:	c4 2f       	mov	r28, r20
    5692:	b4 df       	rcall	.-152    	; 0x55fc <manualNote_to_moduleBit>
    5694:	81 11       	cpse	r24, r1
    5696:	33 c0       	rjmp	.+102    	; 0x56fe <manual_NoteOnOff+0x70>
    5698:	e9 2f       	mov	r30, r25
    569a:	ef 71       	andi	r30, 0x1F	; 31
    569c:	92 95       	swap	r25
    569e:	96 95       	lsr	r25
    56a0:	97 70       	andi	r25, 0x07	; 7
    56a2:	c1 11       	cpse	r28, r1
    56a4:	16 c0       	rjmp	.+44     	; 0x56d2 <manual_NoteOnOff+0x44>
    56a6:	f0 e0       	ldi	r31, 0x00	; 0
    56a8:	21 e0       	ldi	r18, 0x01	; 1
    56aa:	30 e0       	ldi	r19, 0x00	; 0
    56ac:	a9 01       	movw	r20, r18
    56ae:	02 c0       	rjmp	.+4      	; 0x56b4 <manual_NoteOnOff+0x26>
    56b0:	44 0f       	add	r20, r20
    56b2:	55 1f       	adc	r21, r21
    56b4:	9a 95       	dec	r25
    56b6:	e2 f7       	brpl	.-8      	; 0x56b0 <manual_NoteOnOff+0x22>
    56b8:	ca 01       	movw	r24, r20
    56ba:	ee 0f       	add	r30, r30
    56bc:	ff 1f       	adc	r31, r31
    56be:	ee 0f       	add	r30, r30
    56c0:	ff 1f       	adc	r31, r31
    56c2:	ee 0f       	add	r30, r30
    56c4:	ff 1f       	adc	r31, r31
    56c6:	e9 5b       	subi	r30, 0xB9	; 185
    56c8:	fd 4f       	sbci	r31, 0xFD	; 253
    56ca:	91 81       	ldd	r25, Z+1	; 0x01
    56cc:	89 2b       	or	r24, r25
    56ce:	81 83       	std	Z+1, r24	; 0x01
    56d0:	16 c0       	rjmp	.+44     	; 0x56fe <manual_NoteOnOff+0x70>
    56d2:	f0 e0       	ldi	r31, 0x00	; 0
    56d4:	21 e0       	ldi	r18, 0x01	; 1
    56d6:	30 e0       	ldi	r19, 0x00	; 0
    56d8:	a9 01       	movw	r20, r18
    56da:	02 c0       	rjmp	.+4      	; 0x56e0 <manual_NoteOnOff+0x52>
    56dc:	44 0f       	add	r20, r20
    56de:	55 1f       	adc	r21, r21
    56e0:	9a 95       	dec	r25
    56e2:	e2 f7       	brpl	.-8      	; 0x56dc <manual_NoteOnOff+0x4e>
    56e4:	ca 01       	movw	r24, r20
    56e6:	ee 0f       	add	r30, r30
    56e8:	ff 1f       	adc	r31, r31
    56ea:	ee 0f       	add	r30, r30
    56ec:	ff 1f       	adc	r31, r31
    56ee:	ee 0f       	add	r30, r30
    56f0:	ff 1f       	adc	r31, r31
    56f2:	e9 5b       	subi	r30, 0xB9	; 185
    56f4:	fd 4f       	sbci	r31, 0xFD	; 253
    56f6:	80 95       	com	r24
    56f8:	91 81       	ldd	r25, Z+1	; 0x01
    56fa:	89 23       	and	r24, r25
    56fc:	81 83       	std	Z+1, r24	; 0x01
    56fe:	cf 91       	pop	r28
    5700:	08 95       	ret

00005702 <midiAllNotesOff>:
    5702:	cf 92       	push	r12
    5704:	df 92       	push	r13
    5706:	ef 92       	push	r14
    5708:	ff 92       	push	r15
    570a:	0f 93       	push	r16
    570c:	1f 93       	push	r17
    570e:	cf 93       	push	r28
    5710:	df 93       	push	r29
    5712:	c8 2e       	mov	r12, r24
    5714:	d1 2c       	mov	r13, r1
    5716:	3c c0       	rjmp	.+120    	; 0x5790 <midiAllNotesOff+0x8e>
    5718:	0c 2d       	mov	r16, r12
    571a:	10 e0       	ldi	r17, 0x00	; 0
    571c:	cd 2d       	mov	r28, r13
    571e:	d0 e0       	ldi	r29, 0x00	; 0
    5720:	f8 01       	movw	r30, r16
    5722:	ee 0f       	add	r30, r30
    5724:	ff 1f       	adc	r31, r31
    5726:	ee 0f       	add	r30, r30
    5728:	ff 1f       	adc	r31, r31
    572a:	ec 0f       	add	r30, r28
    572c:	fd 1f       	adc	r31, r29
    572e:	ee 0f       	add	r30, r30
    5730:	ff 1f       	adc	r31, r31
    5732:	ee 0f       	add	r30, r30
    5734:	ff 1f       	adc	r31, r31
    5736:	ef 52       	subi	r30, 0x2F	; 47
    5738:	f8 4f       	sbci	r31, 0xF8	; 248
    573a:	80 81       	ld	r24, Z
    573c:	84 30       	cpi	r24, 0x04	; 4
    573e:	38 f5       	brcc	.+78     	; 0x578e <midiAllNotesOff+0x8c>
    5740:	f8 01       	movw	r30, r16
    5742:	ee 0f       	add	r30, r30
    5744:	ff 1f       	adc	r31, r31
    5746:	ee 0f       	add	r30, r30
    5748:	ff 1f       	adc	r31, r31
    574a:	ec 0f       	add	r30, r28
    574c:	fd 1f       	adc	r31, r29
    574e:	ee 0f       	add	r30, r30
    5750:	ff 1f       	adc	r31, r31
    5752:	ee 0f       	add	r30, r30
    5754:	ff 1f       	adc	r31, r31
    5756:	ef 52       	subi	r30, 0x2F	; 47
    5758:	f8 4f       	sbci	r31, 0xF8	; 248
    575a:	63 81       	ldd	r22, Z+3	; 0x03
    575c:	f2 80       	ldd	r15, Z+2	; 0x02
    575e:	15 c0       	rjmp	.+42     	; 0x578a <midiAllNotesOff+0x88>
    5760:	ee 24       	eor	r14, r14
    5762:	e3 94       	inc	r14
    5764:	e6 0e       	add	r14, r22
    5766:	f8 01       	movw	r30, r16
    5768:	ee 0f       	add	r30, r30
    576a:	ff 1f       	adc	r31, r31
    576c:	ee 0f       	add	r30, r30
    576e:	ff 1f       	adc	r31, r31
    5770:	ec 0f       	add	r30, r28
    5772:	fd 1f       	adc	r31, r29
    5774:	ee 0f       	add	r30, r30
    5776:	ff 1f       	adc	r31, r31
    5778:	ee 0f       	add	r30, r30
    577a:	ff 1f       	adc	r31, r31
    577c:	ef 52       	subi	r30, 0x2F	; 47
    577e:	f8 4f       	sbci	r31, 0xF8	; 248
    5780:	40 e0       	ldi	r20, 0x00	; 0
    5782:	80 81       	ld	r24, Z
    5784:	84 df       	rcall	.-248    	; 0x568e <manual_NoteOnOff>
    5786:	fa 94       	dec	r15
    5788:	6e 2d       	mov	r22, r14
    578a:	f1 10       	cpse	r15, r1
    578c:	e9 cf       	rjmp	.-46     	; 0x5760 <midiAllNotesOff+0x5e>
    578e:	d3 94       	inc	r13
    5790:	83 e0       	ldi	r24, 0x03	; 3
    5792:	8d 15       	cp	r24, r13
    5794:	08 f0       	brcs	.+2      	; 0x5798 <midiAllNotesOff+0x96>
    5796:	c0 cf       	rjmp	.-128    	; 0x5718 <midiAllNotesOff+0x16>
    5798:	df 91       	pop	r29
    579a:	cf 91       	pop	r28
    579c:	1f 91       	pop	r17
    579e:	0f 91       	pop	r16
    57a0:	ff 90       	pop	r15
    57a2:	ef 90       	pop	r14
    57a4:	df 90       	pop	r13
    57a6:	cf 90       	pop	r12
    57a8:	08 95       	ret

000057aa <midi_ManualOff>:
    57aa:	0f 93       	push	r16
    57ac:	1f 93       	push	r17
    57ae:	cf 93       	push	r28
    57b0:	df 93       	push	r29
    57b2:	84 30       	cpi	r24, 0x04	; 4
    57b4:	08 f5       	brcc	.+66     	; 0x57f8 <midi_ManualOff+0x4e>
    57b6:	08 2f       	mov	r16, r24
    57b8:	10 e0       	ldi	r17, 0x00	; 0
    57ba:	f8 01       	movw	r30, r16
    57bc:	ee 0f       	add	r30, r30
    57be:	ff 1f       	adc	r31, r31
    57c0:	e7 53       	subi	r30, 0x37	; 55
    57c2:	f8 4f       	sbci	r31, 0xF8	; 248
    57c4:	c0 81       	ld	r28, Z
    57c6:	cf 3f       	cpi	r28, 0xFF	; 255
    57c8:	b9 f0       	breq	.+46     	; 0x57f8 <midi_ManualOff+0x4e>
    57ca:	d8 2f       	mov	r29, r24
    57cc:	f8 01       	movw	r30, r16
    57ce:	ee 0f       	add	r30, r30
    57d0:	ff 1f       	adc	r31, r31
    57d2:	e7 53       	subi	r30, 0x37	; 55
    57d4:	f8 4f       	sbci	r31, 0xF8	; 248
    57d6:	81 81       	ldd	r24, Z+1	; 0x01
    57d8:	8f 3f       	cpi	r24, 0xFF	; 255
    57da:	31 f4       	brne	.+12     	; 0x57e8 <midi_ManualOff+0x3e>
    57dc:	0d c0       	rjmp	.+26     	; 0x57f8 <midi_ManualOff+0x4e>
    57de:	40 e0       	ldi	r20, 0x00	; 0
    57e0:	6c 2f       	mov	r22, r28
    57e2:	8d 2f       	mov	r24, r29
    57e4:	54 df       	rcall	.-344    	; 0x568e <manual_NoteOnOff>
    57e6:	cf 5f       	subi	r28, 0xFF	; 255
    57e8:	f8 01       	movw	r30, r16
    57ea:	ee 0f       	add	r30, r30
    57ec:	ff 1f       	adc	r31, r31
    57ee:	e7 53       	subi	r30, 0x37	; 55
    57f0:	f8 4f       	sbci	r31, 0xF8	; 248
    57f2:	91 81       	ldd	r25, Z+1	; 0x01
    57f4:	9c 17       	cp	r25, r28
    57f6:	98 f7       	brcc	.-26     	; 0x57de <midi_ManualOff+0x34>
    57f8:	df 91       	pop	r29
    57fa:	cf 91       	pop	r28
    57fc:	1f 91       	pop	r17
    57fe:	0f 91       	pop	r16
    5800:	08 95       	ret

00005802 <midi_AllManualsOff>:
    5802:	cf 93       	push	r28
    5804:	c0 e0       	ldi	r28, 0x00	; 0
    5806:	03 c0       	rjmp	.+6      	; 0x580e <midi_AllManualsOff+0xc>
    5808:	8c 2f       	mov	r24, r28
    580a:	cf df       	rcall	.-98     	; 0x57aa <midi_ManualOff>
    580c:	cf 5f       	subi	r28, 0xFF	; 255
    580e:	c4 30       	cpi	r28, 0x04	; 4
    5810:	d8 f3       	brcs	.-10     	; 0x5808 <midi_AllManualsOff+0x6>
    5812:	cf 91       	pop	r28
    5814:	08 95       	ret

00005816 <midi_CheckRxActiveSense>:
    5816:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <midiRxActivceSensing>
    581a:	88 23       	and	r24, r24
    581c:	39 f0       	breq	.+14     	; 0x582c <midi_CheckRxActiveSense+0x16>
    581e:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <swTimer+0x6>
    5822:	81 11       	cpse	r24, r1
    5824:	03 c0       	rjmp	.+6      	; 0x582c <midi_CheckRxActiveSense+0x16>
    5826:	ed df       	rcall	.-38     	; 0x5802 <midi_AllManualsOff>
    5828:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <midiRxActivceSensing>
    582c:	08 95       	ret

0000582e <midiNote_to_Manual>:
    582e:	0f 93       	push	r16
    5830:	1f 93       	push	r17
    5832:	cf 93       	push	r28
    5834:	df 93       	push	r29
    5836:	06 2f       	mov	r16, r22
    5838:	14 2f       	mov	r17, r20
    583a:	d8 2f       	mov	r29, r24
    583c:	df 70       	andi	r29, 0x0F	; 15
    583e:	c0 e0       	ldi	r28, 0x00	; 0
    5840:	90 e0       	ldi	r25, 0x00	; 0
    5842:	3c c0       	rjmp	.+120    	; 0x58bc <midiNote_to_Manual+0x8e>
    5844:	4d 2f       	mov	r20, r29
    5846:	50 e0       	ldi	r21, 0x00	; 0
    5848:	2c 2f       	mov	r18, r28
    584a:	30 e0       	ldi	r19, 0x00	; 0
    584c:	fa 01       	movw	r30, r20
    584e:	ee 0f       	add	r30, r30
    5850:	ff 1f       	adc	r31, r31
    5852:	ee 0f       	add	r30, r30
    5854:	ff 1f       	adc	r31, r31
    5856:	e2 0f       	add	r30, r18
    5858:	f3 1f       	adc	r31, r19
    585a:	ee 0f       	add	r30, r30
    585c:	ff 1f       	adc	r31, r31
    585e:	ee 0f       	add	r30, r30
    5860:	ff 1f       	adc	r31, r31
    5862:	ef 52       	subi	r30, 0x2F	; 47
    5864:	f8 4f       	sbci	r31, 0xF8	; 248
    5866:	80 81       	ld	r24, Z
    5868:	84 30       	cpi	r24, 0x04	; 4
    586a:	38 f5       	brcc	.+78     	; 0x58ba <midiNote_to_Manual+0x8c>
    586c:	df 01       	movw	r26, r30
    586e:	61 81       	ldd	r22, Z+1	; 0x01
    5870:	70 2f       	mov	r23, r16
    5872:	76 1b       	sub	r23, r22
    5874:	67 2f       	mov	r22, r23
    5876:	0a f1       	brmi	.+66     	; 0x58ba <midiNote_to_Manual+0x8c>
    5878:	fd 01       	movw	r30, r26
    587a:	e2 81       	ldd	r30, Z+2	; 0x02
    587c:	f0 e0       	ldi	r31, 0x00	; 0
    587e:	a7 2f       	mov	r26, r23
    5880:	77 0f       	add	r23, r23
    5882:	bb 0b       	sbc	r27, r27
    5884:	ae 17       	cp	r26, r30
    5886:	bf 07       	cpc	r27, r31
    5888:	c4 f4       	brge	.+48     	; 0x58ba <midiNote_to_Manual+0x8c>
    588a:	fa 01       	movw	r30, r20
    588c:	ee 0f       	add	r30, r30
    588e:	ff 1f       	adc	r31, r31
    5890:	ee 0f       	add	r30, r30
    5892:	ff 1f       	adc	r31, r31
    5894:	e2 0f       	add	r30, r18
    5896:	f3 1f       	adc	r31, r19
    5898:	ee 0f       	add	r30, r30
    589a:	ff 1f       	adc	r31, r31
    589c:	ee 0f       	add	r30, r30
    589e:	ff 1f       	adc	r31, r31
    58a0:	ef 52       	subi	r30, 0x2F	; 47
    58a2:	f8 4f       	sbci	r31, 0xF8	; 248
    58a4:	93 81       	ldd	r25, Z+3	; 0x03
    58a6:	69 0f       	add	r22, r25
    58a8:	11 30       	cpi	r17, 0x01	; 1
    58aa:	21 f4       	brne	.+8      	; 0x58b4 <midiNote_to_Manual+0x86>
    58ac:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
    58b0:	60 93 02 02 	sts	0x0202, r22	; 0x800202 <midiLastInNote>
    58b4:	41 2f       	mov	r20, r17
    58b6:	eb de       	rcall	.-554    	; 0x568e <manual_NoteOnOff>
    58b8:	9f ef       	ldi	r25, 0xFF	; 255
    58ba:	cf 5f       	subi	r28, 0xFF	; 255
    58bc:	c4 30       	cpi	r28, 0x04	; 4
    58be:	08 f4       	brcc	.+2      	; 0x58c2 <midiNote_to_Manual+0x94>
    58c0:	c1 cf       	rjmp	.-126    	; 0x5844 <midiNote_to_Manual+0x16>
    58c2:	11 30       	cpi	r17, 0x01	; 1
    58c4:	49 f4       	brne	.+18     	; 0x58d8 <midiNote_to_Manual+0xaa>
    58c6:	91 11       	cpse	r25, r1
    58c8:	07 c0       	rjmp	.+14     	; 0x58d8 <midiNote_to_Manual+0xaa>
    58ca:	00 93 02 02 	sts	0x0202, r16	; 0x800202 <midiLastInNote>
    58ce:	d0 93 01 02 	sts	0x0201, r29	; 0x800201 <midiLastInChannel>
    58d2:	8f ef       	ldi	r24, 0xFF	; 255
    58d4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
    58d8:	df 91       	pop	r29
    58da:	cf 91       	pop	r28
    58dc:	1f 91       	pop	r17
    58de:	0f 91       	pop	r16
    58e0:	08 95       	ret

000058e2 <midiIn_Process>:
    58e2:	88 23       	and	r24, r24
    58e4:	0c f0       	brlt	.+2      	; 0x58e8 <midiIn_Process+0x6>
    58e6:	4c c0       	rjmp	.+152    	; 0x5980 <midiIn_Process+0x9e>
    58e8:	88 3f       	cpi	r24, 0xF8	; 248
    58ea:	b8 f0       	brcs	.+46     	; 0x591a <midiIn_Process+0x38>
    58ec:	8e 3f       	cpi	r24, 0xFE	; 254
    58ee:	81 f4       	brne	.+32     	; 0x5910 <midiIn_Process+0x2e>
    58f0:	81 e0       	ldi	r24, 0x01	; 1
    58f2:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <midiRxActivceSensing>
    58f6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    58f8:	f8 94       	cli
    58fa:	06 c0       	rjmp	.+12     	; 0x5908 <midiIn_Process+0x26>
    58fc:	ed e2       	ldi	r30, 0x2D	; 45
    58fe:	f2 e0       	ldi	r31, 0x02	; 2
    5900:	89 e1       	ldi	r24, 0x19	; 25
    5902:	86 83       	std	Z+6, r24	; 0x06
    5904:	17 82       	std	Z+7, r1	; 0x07
    5906:	80 e0       	ldi	r24, 0x00	; 0
    5908:	81 11       	cpse	r24, r1
    590a:	f8 cf       	rjmp	.-16     	; 0x58fc <midiIn_Process+0x1a>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    590c:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    590e:	08 95       	ret
    5910:	8f 3f       	cpi	r24, 0xFF	; 255
    5912:	09 f0       	breq	.+2      	; 0x5916 <midiIn_Process+0x34>
    5914:	76 c0       	rjmp	.+236    	; 0x5a02 <midiIn_Process+0x120>
    5916:	9e cb       	rjmp	.-2244   	; 0x5054 <midiAllReset>
    5918:	08 95       	ret
    591a:	80 93 89 0b 	sts	0x0B89, r24	; 0x800b89 <midiLastCommand>
    591e:	10 92 c8 07 	sts	0x07C8, r1	; 0x8007c8 <midiDataByteCount>
    5922:	90 e8       	ldi	r25, 0x80	; 128
    5924:	98 0f       	add	r25, r24
    5926:	90 34       	cpi	r25, 0x40	; 64
    5928:	20 f4       	brcc	.+8      	; 0x5932 <midiIn_Process+0x50>
    592a:	82 e0       	ldi	r24, 0x02	; 2
    592c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    5930:	08 95       	ret
    5932:	90 e2       	ldi	r25, 0x20	; 32
    5934:	98 0f       	add	r25, r24
    5936:	90 31       	cpi	r25, 0x10	; 16
    5938:	20 f4       	brcc	.+8      	; 0x5942 <midiIn_Process+0x60>
    593a:	82 e0       	ldi	r24, 0x02	; 2
    593c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    5940:	08 95       	ret
    5942:	82 3f       	cpi	r24, 0xF2	; 242
    5944:	21 f4       	brne	.+8      	; 0x594e <midiIn_Process+0x6c>
    5946:	82 e0       	ldi	r24, 0x02	; 2
    5948:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    594c:	08 95       	ret
    594e:	80 3f       	cpi	r24, 0xF0	; 240
    5950:	21 f4       	brne	.+8      	; 0x595a <midiIn_Process+0x78>
    5952:	8f ef       	ldi	r24, 0xFF	; 255
    5954:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    5958:	08 95       	ret
    595a:	90 e4       	ldi	r25, 0x40	; 64
    595c:	98 0f       	add	r25, r24
    595e:	90 32       	cpi	r25, 0x20	; 32
    5960:	20 f4       	brcc	.+8      	; 0x596a <midiIn_Process+0x88>
    5962:	81 e0       	ldi	r24, 0x01	; 1
    5964:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    5968:	08 95       	ret
    596a:	81 3f       	cpi	r24, 0xF1	; 241
    596c:	11 f0       	breq	.+4      	; 0x5972 <midiIn_Process+0x90>
    596e:	83 3f       	cpi	r24, 0xF3	; 243
    5970:	21 f4       	brne	.+8      	; 0x597a <midiIn_Process+0x98>
    5972:	81 e0       	ldi	r24, 0x01	; 1
    5974:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <midiDataByteExpected>
    5978:	08 95       	ret
    597a:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <midiDataByteExpected>
    597e:	08 95       	ret
    5980:	e0 91 c8 07 	lds	r30, 0x07C8	; 0x8007c8 <midiDataByteCount>
    5984:	e2 30       	cpi	r30, 0x02	; 2
    5986:	40 f4       	brcc	.+16     	; 0x5998 <midiIn_Process+0xb6>
    5988:	91 e0       	ldi	r25, 0x01	; 1
    598a:	9e 0f       	add	r25, r30
    598c:	90 93 c8 07 	sts	0x07C8, r25	; 0x8007c8 <midiDataByteCount>
    5990:	f0 e0       	ldi	r31, 0x00	; 0
    5992:	e9 57       	subi	r30, 0x79	; 121
    5994:	f4 4f       	sbci	r31, 0xF4	; 244
    5996:	80 83       	st	Z, r24
    5998:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <midiDataByteExpected>
    599c:	8f 3f       	cpi	r24, 0xFF	; 255
    599e:	89 f1       	breq	.+98     	; 0x5a02 <midiIn_Process+0x120>
    59a0:	90 91 c8 07 	lds	r25, 0x07C8	; 0x8007c8 <midiDataByteCount>
    59a4:	98 17       	cp	r25, r24
    59a6:	68 f1       	brcs	.+90     	; 0x5a02 <midiIn_Process+0x120>
    59a8:	90 91 89 0b 	lds	r25, 0x0B89	; 0x800b89 <midiLastCommand>
    59ac:	90 3f       	cpi	r25, 0xF0	; 240
    59ae:	38 f5       	brcc	.+78     	; 0x59fe <midiIn_Process+0x11c>
    59b0:	89 2f       	mov	r24, r25
    59b2:	8f 70       	andi	r24, 0x0F	; 15
    59b4:	90 7f       	andi	r25, 0xF0	; 240
    59b6:	90 39       	cpi	r25, 0x90	; 144
    59b8:	71 f0       	breq	.+28     	; 0x59d6 <midiIn_Process+0xf4>
    59ba:	18 f4       	brcc	.+6      	; 0x59c2 <midiIn_Process+0xe0>
    59bc:	90 38       	cpi	r25, 0x80	; 128
    59be:	31 f0       	breq	.+12     	; 0x59cc <midiIn_Process+0xea>
    59c0:	1e c0       	rjmp	.+60     	; 0x59fe <midiIn_Process+0x11c>
    59c2:	90 3b       	cpi	r25, 0xB0	; 176
    59c4:	99 f0       	breq	.+38     	; 0x59ec <midiIn_Process+0x10a>
    59c6:	90 3c       	cpi	r25, 0xC0	; 192
    59c8:	b9 f0       	breq	.+46     	; 0x59f8 <midiIn_Process+0x116>
    59ca:	19 c0       	rjmp	.+50     	; 0x59fe <midiIn_Process+0x11c>
    59cc:	40 e0       	ldi	r20, 0x00	; 0
    59ce:	60 91 87 0b 	lds	r22, 0x0B87	; 0x800b87 <midiDataByte>
    59d2:	2d df       	rcall	.-422    	; 0x582e <midiNote_to_Manual>
    59d4:	14 c0       	rjmp	.+40     	; 0x59fe <midiIn_Process+0x11c>
    59d6:	90 91 88 0b 	lds	r25, 0x0B88	; 0x800b88 <midiDataByte+0x1>
    59da:	91 11       	cpse	r25, r1
    59dc:	02 c0       	rjmp	.+4      	; 0x59e2 <midiIn_Process+0x100>
    59de:	40 e0       	ldi	r20, 0x00	; 0
    59e0:	01 c0       	rjmp	.+2      	; 0x59e4 <midiIn_Process+0x102>
    59e2:	41 e0       	ldi	r20, 0x01	; 1
    59e4:	60 91 87 0b 	lds	r22, 0x0B87	; 0x800b87 <midiDataByte>
    59e8:	22 df       	rcall	.-444    	; 0x582e <midiNote_to_Manual>
    59ea:	09 c0       	rjmp	.+18     	; 0x59fe <midiIn_Process+0x11c>
    59ec:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <midiDataByte>
    59f0:	9b 37       	cpi	r25, 0x7B	; 123
    59f2:	29 f4       	brne	.+10     	; 0x59fe <midiIn_Process+0x11c>
    59f4:	86 de       	rcall	.-756    	; 0x5702 <midiAllNotesOff>
    59f6:	03 c0       	rjmp	.+6      	; 0x59fe <midiIn_Process+0x11c>
    59f8:	80 91 87 0b 	lds	r24, 0x0B87	; 0x800b87 <midiDataByte>
    59fc:	6e dc       	rcall	.-1828   	; 0x52da <program_toRegister>
    59fe:	10 92 c8 07 	sts	0x07C8, r1	; 0x8007c8 <midiDataByteCount>
    5a02:	08 95       	ret

00005a04 <midiKeyPress_Process>:
    5a04:	cf 92       	push	r12
    5a06:	df 92       	push	r13
    5a08:	ef 92       	push	r14
    5a0a:	ff 92       	push	r15
    5a0c:	0f 93       	push	r16
    5a0e:	1f 93       	push	r17
    5a10:	cf 93       	push	r28
    5a12:	df 93       	push	r29
    5a14:	19 2f       	mov	r17, r25
    5a16:	10 7e       	andi	r17, 0xE0	; 224
    5a18:	9f 71       	andi	r25, 0x1F	; 31
    5a1a:	d9 2e       	mov	r13, r25
    5a1c:	d8 2f       	mov	r29, r24
    5a1e:	10 32       	cpi	r17, 0x20	; 32
    5a20:	09 f4       	brne	.+2      	; 0x5a24 <midiKeyPress_Process+0x20>
    5a22:	a9 c0       	rjmp	.+338    	; 0x5b76 <midiKeyPress_Process+0x172>
    5a24:	11 23       	and	r17, r17
    5a26:	09 f4       	brne	.+2      	; 0x5a2a <midiKeyPress_Process+0x26>
    5a28:	a8 c0       	rjmp	.+336    	; 0x5b7a <midiKeyPress_Process+0x176>
    5a2a:	ab c0       	rjmp	.+342    	; 0x5b82 <midiKeyPress_Process+0x17e>
    5a2c:	d0 ff       	sbrs	r29, 0
    5a2e:	a0 c0       	rjmp	.+320    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5a30:	20 e2       	ldi	r18, 0x20	; 32
    5a32:	c2 9f       	mul	r28, r18
    5a34:	c0 01       	movw	r24, r0
    5a36:	11 24       	eor	r1, r1
    5a38:	8d 29       	or	r24, r13
    5a3a:	00 de       	rcall	.-1024   	; 0x563c <moduleBit_to_manualNote>
    5a3c:	f8 2e       	mov	r15, r24
    5a3e:	e9 2e       	mov	r14, r25
    5a40:	08 2f       	mov	r16, r24
    5a42:	8f 3f       	cpi	r24, 0xFF	; 255
    5a44:	09 f4       	brne	.+2      	; 0x5a48 <midiKeyPress_Process+0x44>
    5a46:	94 c0       	rjmp	.+296    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5a48:	69 2f       	mov	r22, r25
    5a4a:	39 dd       	rcall	.-1422   	; 0x54be <Manual_to_MidiNote>
    5a4c:	c9 2e       	mov	r12, r25
    5a4e:	8f 3f       	cpi	r24, 0xFF	; 255
    5a50:	09 f1       	breq	.+66     	; 0x5a94 <midiKeyPress_Process+0x90>
    5a52:	10 32       	cpi	r17, 0x20	; 32
    5a54:	31 f0       	breq	.+12     	; 0x5a62 <midiKeyPress_Process+0x5e>
    5a56:	90 91 d6 08 	lds	r25, 0x08D6	; 0x8008d6 <midi_Setting+0x1>
    5a5a:	99 23       	and	r25, r25
    5a5c:	21 f0       	breq	.+8      	; 0x5a66 <midiKeyPress_Process+0x62>
    5a5e:	90 e9       	ldi	r25, 0x90	; 144
    5a60:	03 c0       	rjmp	.+6      	; 0x5a68 <midiKeyPress_Process+0x64>
    5a62:	90 e9       	ldi	r25, 0x90	; 144
    5a64:	01 c0       	rjmp	.+2      	; 0x5a68 <midiKeyPress_Process+0x64>
    5a66:	90 e8       	ldi	r25, 0x80	; 128
    5a68:	89 2b       	or	r24, r25
    5a6a:	e7 d0       	rcall	.+462    	; 0x5c3a <serial1MIDISend>
    5a6c:	8c 2d       	mov	r24, r12
    5a6e:	e5 d0       	rcall	.+458    	; 0x5c3a <serial1MIDISend>
    5a70:	11 11       	cpse	r17, r1
    5a72:	06 c0       	rjmp	.+12     	; 0x5a80 <midiKeyPress_Process+0x7c>
    5a74:	80 91 d6 08 	lds	r24, 0x08D6	; 0x8008d6 <midi_Setting+0x1>
    5a78:	81 11       	cpse	r24, r1
    5a7a:	04 c0       	rjmp	.+8      	; 0x5a84 <midiKeyPress_Process+0x80>
    5a7c:	80 e4       	ldi	r24, 0x40	; 64
    5a7e:	03 c0       	rjmp	.+6      	; 0x5a86 <midiKeyPress_Process+0x82>
    5a80:	80 e4       	ldi	r24, 0x40	; 64
    5a82:	01 c0       	rjmp	.+2      	; 0x5a86 <midiKeyPress_Process+0x82>
    5a84:	80 e0       	ldi	r24, 0x00	; 0
    5a86:	d9 d0       	rcall	.+434    	; 0x5c3a <serial1MIDISend>
    5a88:	10 32       	cpi	r17, 0x20	; 32
    5a8a:	21 f4       	brne	.+8      	; 0x5a94 <midiKeyPress_Process+0x90>
    5a8c:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <midiLastOutManual>
    5a90:	e0 92 04 02 	sts	0x0204, r14	; 0x800204 <midiLastOutNote>
    5a94:	41 e0       	ldi	r20, 0x01	; 1
    5a96:	10 32       	cpi	r17, 0x20	; 32
    5a98:	09 f0       	breq	.+2      	; 0x5a9c <midiKeyPress_Process+0x98>
    5a9a:	40 e0       	ldi	r20, 0x00	; 0
    5a9c:	f4 2e       	mov	r15, r20
    5a9e:	01 11       	cpse	r16, r1
    5aa0:	19 c0       	rjmp	.+50     	; 0x5ad4 <midiKeyPress_Process+0xd0>
    5aa2:	80 91 bc 07 	lds	r24, 0x07BC	; 0x8007bc <midi_Couplers>
    5aa6:	8f 3f       	cpi	r24, 0xFF	; 255
    5aa8:	19 f4       	brne	.+6      	; 0x5ab0 <midiKeyPress_Process+0xac>
    5aaa:	6e 2d       	mov	r22, r14
    5aac:	81 e0       	ldi	r24, 0x01	; 1
    5aae:	ef dd       	rcall	.-1058   	; 0x568e <manual_NoteOnOff>
    5ab0:	80 91 bd 07 	lds	r24, 0x07BD	; 0x8007bd <midi_Couplers+0x1>
    5ab4:	8f 3f       	cpi	r24, 0xFF	; 255
    5ab6:	21 f4       	brne	.+8      	; 0x5ac0 <midiKeyPress_Process+0xbc>
    5ab8:	4f 2d       	mov	r20, r15
    5aba:	6e 2d       	mov	r22, r14
    5abc:	82 e0       	ldi	r24, 0x02	; 2
    5abe:	e7 dd       	rcall	.-1074   	; 0x568e <manual_NoteOnOff>
    5ac0:	80 91 bf 07 	lds	r24, 0x07BF	; 0x8007bf <midi_Couplers+0x3>
    5ac4:	8f 3f       	cpi	r24, 0xFF	; 255
    5ac6:	09 f0       	breq	.+2      	; 0x5aca <midiKeyPress_Process+0xc6>
    5ac8:	53 c0       	rjmp	.+166    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5aca:	4f 2d       	mov	r20, r15
    5acc:	6e 2d       	mov	r22, r14
    5ace:	83 e0       	ldi	r24, 0x03	; 3
    5ad0:	de dd       	rcall	.-1092   	; 0x568e <manual_NoteOnOff>
    5ad2:	4e c0       	rjmp	.+156    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5ad4:	01 30       	cpi	r16, 0x01	; 1
    5ad6:	c9 f4       	brne	.+50     	; 0x5b0a <midiKeyPress_Process+0x106>
    5ad8:	80 91 be 07 	lds	r24, 0x07BE	; 0x8007be <midi_Couplers+0x2>
    5adc:	8f 3f       	cpi	r24, 0xFF	; 255
    5ade:	19 f4       	brne	.+6      	; 0x5ae6 <midiKeyPress_Process+0xe2>
    5ae0:	6e 2d       	mov	r22, r14
    5ae2:	82 e0       	ldi	r24, 0x02	; 2
    5ae4:	d4 dd       	rcall	.-1112   	; 0x568e <manual_NoteOnOff>
    5ae6:	80 91 c0 07 	lds	r24, 0x07C0	; 0x8007c0 <midi_Couplers+0x4>
    5aea:	8f 3f       	cpi	r24, 0xFF	; 255
    5aec:	21 f4       	brne	.+8      	; 0x5af6 <midiKeyPress_Process+0xf2>
    5aee:	4f 2d       	mov	r20, r15
    5af0:	6e 2d       	mov	r22, r14
    5af2:	83 e0       	ldi	r24, 0x03	; 3
    5af4:	cc dd       	rcall	.-1128   	; 0x568e <manual_NoteOnOff>
    5af6:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <midi_Couplers+0x6>
    5afa:	8f 3f       	cpi	r24, 0xFF	; 255
    5afc:	09 f0       	breq	.+2      	; 0x5b00 <midiKeyPress_Process+0xfc>
    5afe:	38 c0       	rjmp	.+112    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b00:	4f 2d       	mov	r20, r15
    5b02:	6e 2d       	mov	r22, r14
    5b04:	80 e0       	ldi	r24, 0x00	; 0
    5b06:	c3 dd       	rcall	.-1146   	; 0x568e <manual_NoteOnOff>
    5b08:	33 c0       	rjmp	.+102    	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b0a:	02 30       	cpi	r16, 0x02	; 2
    5b0c:	c1 f4       	brne	.+48     	; 0x5b3e <midiKeyPress_Process+0x13a>
    5b0e:	80 91 c1 07 	lds	r24, 0x07C1	; 0x8007c1 <midi_Couplers+0x5>
    5b12:	8f 3f       	cpi	r24, 0xFF	; 255
    5b14:	19 f4       	brne	.+6      	; 0x5b1c <midiKeyPress_Process+0x118>
    5b16:	6e 2d       	mov	r22, r14
    5b18:	83 e0       	ldi	r24, 0x03	; 3
    5b1a:	b9 dd       	rcall	.-1166   	; 0x568e <manual_NoteOnOff>
    5b1c:	80 91 c3 07 	lds	r24, 0x07C3	; 0x8007c3 <midi_Couplers+0x7>
    5b20:	8f 3f       	cpi	r24, 0xFF	; 255
    5b22:	21 f4       	brne	.+8      	; 0x5b2c <midiKeyPress_Process+0x128>
    5b24:	4f 2d       	mov	r20, r15
    5b26:	6e 2d       	mov	r22, r14
    5b28:	80 e0       	ldi	r24, 0x00	; 0
    5b2a:	b1 dd       	rcall	.-1182   	; 0x568e <manual_NoteOnOff>
    5b2c:	80 91 c4 07 	lds	r24, 0x07C4	; 0x8007c4 <midi_Couplers+0x8>
    5b30:	8f 3f       	cpi	r24, 0xFF	; 255
    5b32:	f1 f4       	brne	.+60     	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b34:	4f 2d       	mov	r20, r15
    5b36:	6e 2d       	mov	r22, r14
    5b38:	81 e0       	ldi	r24, 0x01	; 1
    5b3a:	a9 dd       	rcall	.-1198   	; 0x568e <manual_NoteOnOff>
    5b3c:	19 c0       	rjmp	.+50     	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b3e:	03 30       	cpi	r16, 0x03	; 3
    5b40:	b9 f4       	brne	.+46     	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b42:	80 91 c5 07 	lds	r24, 0x07C5	; 0x8007c5 <midi_Couplers+0x9>
    5b46:	8f 3f       	cpi	r24, 0xFF	; 255
    5b48:	19 f4       	brne	.+6      	; 0x5b50 <midiKeyPress_Process+0x14c>
    5b4a:	6e 2d       	mov	r22, r14
    5b4c:	80 e0       	ldi	r24, 0x00	; 0
    5b4e:	9f dd       	rcall	.-1218   	; 0x568e <manual_NoteOnOff>
    5b50:	80 91 c6 07 	lds	r24, 0x07C6	; 0x8007c6 <midi_Couplers+0xa>
    5b54:	8f 3f       	cpi	r24, 0xFF	; 255
    5b56:	21 f4       	brne	.+8      	; 0x5b60 <midiKeyPress_Process+0x15c>
    5b58:	4f 2d       	mov	r20, r15
    5b5a:	6e 2d       	mov	r22, r14
    5b5c:	81 e0       	ldi	r24, 0x01	; 1
    5b5e:	97 dd       	rcall	.-1234   	; 0x568e <manual_NoteOnOff>
    5b60:	80 91 c7 07 	lds	r24, 0x07C7	; 0x8007c7 <midi_Couplers+0xb>
    5b64:	8f 3f       	cpi	r24, 0xFF	; 255
    5b66:	21 f4       	brne	.+8      	; 0x5b70 <midiKeyPress_Process+0x16c>
    5b68:	4f 2d       	mov	r20, r15
    5b6a:	6e 2d       	mov	r22, r14
    5b6c:	82 e0       	ldi	r24, 0x02	; 2
    5b6e:	8f dd       	rcall	.-1250   	; 0x568e <manual_NoteOnOff>
    5b70:	d6 95       	lsr	r29
    5b72:	cf 5f       	subi	r28, 0xFF	; 255
    5b74:	03 c0       	rjmp	.+6      	; 0x5b7c <midiKeyPress_Process+0x178>
    5b76:	c0 e0       	ldi	r28, 0x00	; 0
    5b78:	01 c0       	rjmp	.+2      	; 0x5b7c <midiKeyPress_Process+0x178>
    5b7a:	c0 e0       	ldi	r28, 0x00	; 0
    5b7c:	c8 30       	cpi	r28, 0x08	; 8
    5b7e:	08 f4       	brcc	.+2      	; 0x5b82 <midiKeyPress_Process+0x17e>
    5b80:	55 cf       	rjmp	.-342    	; 0x5a2c <midiKeyPress_Process+0x28>
    5b82:	df 91       	pop	r29
    5b84:	cf 91       	pop	r28
    5b86:	1f 91       	pop	r17
    5b88:	0f 91       	pop	r16
    5b8a:	ff 90       	pop	r15
    5b8c:	ef 90       	pop	r14
    5b8e:	df 90       	pop	r13
    5b90:	cf 90       	pop	r12
    5b92:	08 95       	ret

00005b94 <midiSendAllNotesOff>:
    5b94:	cf 93       	push	r28
    5b96:	c0 e0       	ldi	r28, 0x00	; 0
    5b98:	0e c0       	rjmp	.+28     	; 0x5bb6 <midiSendAllNotesOff+0x22>
    5b9a:	ec 2f       	mov	r30, r28
    5b9c:	f0 e0       	ldi	r31, 0x00	; 0
    5b9e:	ef 52       	subi	r30, 0x2F	; 47
    5ba0:	f7 4f       	sbci	r31, 0xF7	; 247
    5ba2:	80 81       	ld	r24, Z
    5ba4:	80 31       	cpi	r24, 0x10	; 16
    5ba6:	30 f4       	brcc	.+12     	; 0x5bb4 <midiSendAllNotesOff+0x20>
    5ba8:	80 6b       	ori	r24, 0xB0	; 176
    5baa:	47 d0       	rcall	.+142    	; 0x5c3a <serial1MIDISend>
    5bac:	8b e7       	ldi	r24, 0x7B	; 123
    5bae:	45 d0       	rcall	.+138    	; 0x5c3a <serial1MIDISend>
    5bb0:	80 e0       	ldi	r24, 0x00	; 0
    5bb2:	43 d0       	rcall	.+134    	; 0x5c3a <serial1MIDISend>
    5bb4:	cf 5f       	subi	r28, 0xFF	; 255
    5bb6:	c4 30       	cpi	r28, 0x04	; 4
    5bb8:	80 f3       	brcs	.-32     	; 0x5b9a <midiSendAllNotesOff+0x6>
    5bba:	cf 91       	pop	r28
    5bbc:	08 95       	ret

00005bbe <midi_SendActiveSense>:
    5bbe:	8e ef       	ldi	r24, 0xFE	; 254
    5bc0:	3c c0       	rjmp	.+120    	; 0x5c3a <serial1MIDISend>
    5bc2:	08 95       	ret

00005bc4 <midi_CheckTxActiveSense>:
    5bc4:	80 91 d5 08 	lds	r24, 0x08D5	; 0x8008d5 <midi_Setting>
    5bc8:	88 23       	and	r24, r24
    5bca:	b1 f0       	breq	.+44     	; 0x5bf8 <midi_CheckTxActiveSense+0x34>
    5bcc:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <swTimer+0x10>
    5bd0:	88 23       	and	r24, r24
    5bd2:	21 f0       	breq	.+8      	; 0x5bdc <midi_CheckTxActiveSense+0x18>
    5bd4:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <swTimer+0x10>
    5bd8:	8f 3f       	cpi	r24, 0xFF	; 255
    5bda:	71 f4       	brne	.+28     	; 0x5bf8 <midi_CheckTxActiveSense+0x34>
    5bdc:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    5bde:	f8 94       	cli
    5be0:	81 e0       	ldi	r24, 0x01	; 1
    5be2:	06 c0       	rjmp	.+12     	; 0x5bf0 <midi_CheckTxActiveSense+0x2c>
    5be4:	ed e2       	ldi	r30, 0x2D	; 45
    5be6:	f2 e0       	ldi	r31, 0x02	; 2
    5be8:	8a e0       	ldi	r24, 0x0A	; 10
    5bea:	80 8b       	std	Z+16, r24	; 0x10
    5bec:	11 8a       	std	Z+17, r1	; 0x11
    5bee:	80 e0       	ldi	r24, 0x00	; 0
    5bf0:	81 11       	cpse	r24, r1
    5bf2:	f8 cf       	rjmp	.-16     	; 0x5be4 <midi_CheckTxActiveSense+0x20>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    5bf4:	9f bf       	out	0x3f, r25	; 63
    5bf6:	e3 cf       	rjmp	.-58     	; 0x5bbe <midi_SendActiveSense>
    5bf8:	08 95       	ret

00005bfa <init_Serial1MIDI>:
    5bfa:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    5bfe:	8f e1       	ldi	r24, 0x1F	; 31
    5c00:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    5c04:	e9 ec       	ldi	r30, 0xC9	; 201
    5c06:	f0 e0       	ldi	r31, 0x00	; 0
    5c08:	80 81       	ld	r24, Z
    5c0a:	88 69       	ori	r24, 0x98	; 152
    5c0c:	80 83       	st	Z, r24
    5c0e:	ea ec       	ldi	r30, 0xCA	; 202
    5c10:	f0 e0       	ldi	r31, 0x00	; 0
    5c12:	80 81       	ld	r24, Z
    5c14:	86 60       	ori	r24, 0x06	; 6
    5c16:	80 83       	st	Z, r24
    5c18:	10 92 cf 0b 	sts	0x0BCF, r1	; 0x800bcf <midiRxInIndex>
    5c1c:	10 92 17 0d 	sts	0x0D17, r1	; 0x800d17 <midiRxOutIndex>
    5c20:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <midiTxInIndex>
    5c24:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <midiTxOutIndex>
    5c28:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <midiRxOvfl>
    5c2c:	10 92 8e 0b 	sts	0x0B8E, r1	; 0x800b8e <midiTxOvfl>
    5c30:	10 92 13 0c 	sts	0x0C13, r1	; 0x800c13 <midiRxOvflCount>
    5c34:	10 92 18 0d 	sts	0x0D18, r1	; 0x800d18 <midiTxOvflCount>
    5c38:	08 95       	ret

00005c3a <serial1MIDISend>:
    5c3a:	e9 ec       	ldi	r30, 0xC9	; 201
    5c3c:	f0 e0       	ldi	r31, 0x00	; 0
    5c3e:	90 81       	ld	r25, Z
    5c40:	9f 7d       	andi	r25, 0xDF	; 223
    5c42:	90 83       	st	Z, r25
    5c44:	e0 91 8a 0b 	lds	r30, 0x0B8A	; 0x800b8a <midiTxInIndex>
    5c48:	f0 e0       	ldi	r31, 0x00	; 0
    5c4a:	e1 55       	subi	r30, 0x51	; 81
    5c4c:	f4 4f       	sbci	r31, 0xF4	; 244
    5c4e:	80 83       	st	Z, r24
    5c50:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <midiTxInIndex>
    5c54:	8f 5f       	subi	r24, 0xFF	; 255
    5c56:	8f 71       	andi	r24, 0x1F	; 31
    5c58:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <midiTxInIndex>
    5c5c:	90 91 8a 0b 	lds	r25, 0x0B8A	; 0x800b8a <midiTxInIndex>
    5c60:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <midiTxOutIndex>
    5c64:	98 13       	cpse	r25, r24
    5c66:	0d c0       	rjmp	.+26     	; 0x5c82 <serial1MIDISend+0x48>
    5c68:	80 91 18 0d 	lds	r24, 0x0D18	; 0x800d18 <midiTxOvflCount>
    5c6c:	88 23       	and	r24, r24
    5c6e:	31 f0       	breq	.+12     	; 0x5c7c <serial1MIDISend+0x42>
    5c70:	8f 3f       	cpi	r24, 0xFF	; 255
    5c72:	39 f0       	breq	.+14     	; 0x5c82 <serial1MIDISend+0x48>
    5c74:	8f 5f       	subi	r24, 0xFF	; 255
    5c76:	80 93 18 0d 	sts	0x0D18, r24	; 0x800d18 <midiTxOvflCount>
    5c7a:	03 c0       	rjmp	.+6      	; 0x5c82 <serial1MIDISend+0x48>
    5c7c:	81 e0       	ldi	r24, 0x01	; 1
    5c7e:	80 93 18 0d 	sts	0x0D18, r24	; 0x800d18 <midiTxOvflCount>
    5c82:	e9 ec       	ldi	r30, 0xC9	; 201
    5c84:	f0 e0       	ldi	r31, 0x00	; 0
    5c86:	80 81       	ld	r24, Z
    5c88:	80 62       	ori	r24, 0x20	; 32
    5c8a:	80 83       	st	Z, r24
    5c8c:	08 95       	ret

00005c8e <serial1MIDIReadRx>:
    5c8e:	90 91 cf 0b 	lds	r25, 0x0BCF	; 0x800bcf <midiRxInIndex>
    5c92:	80 91 17 0d 	lds	r24, 0x0D17	; 0x800d17 <midiRxOutIndex>
    5c96:	98 17       	cp	r25, r24
    5c98:	69 f0       	breq	.+26     	; 0x5cb4 <serial1MIDIReadRx+0x26>
    5c9a:	e0 91 17 0d 	lds	r30, 0x0D17	; 0x800d17 <midiRxOutIndex>
    5c9e:	f0 e0       	ldi	r31, 0x00	; 0
    5ca0:	e1 57       	subi	r30, 0x71	; 113
    5ca2:	f4 4f       	sbci	r31, 0xF4	; 244
    5ca4:	80 81       	ld	r24, Z
    5ca6:	90 91 17 0d 	lds	r25, 0x0D17	; 0x800d17 <midiRxOutIndex>
    5caa:	9f 5f       	subi	r25, 0xFF	; 255
    5cac:	9f 71       	andi	r25, 0x1F	; 31
    5cae:	90 93 17 0d 	sts	0x0D17, r25	; 0x800d17 <midiRxOutIndex>
    5cb2:	08 95       	ret
    5cb4:	8d ef       	ldi	r24, 0xFD	; 253
    5cb6:	08 95       	ret

00005cb8 <__vector_36>:
    5cb8:	1f 92       	push	r1
    5cba:	0f 92       	push	r0
    5cbc:	0f b6       	in	r0, 0x3f	; 63
    5cbe:	0f 92       	push	r0
    5cc0:	11 24       	eor	r1, r1
    5cc2:	0b b6       	in	r0, 0x3b	; 59
    5cc4:	0f 92       	push	r0
    5cc6:	8f 93       	push	r24
    5cc8:	9f 93       	push	r25
    5cca:	ef 93       	push	r30
    5ccc:	ff 93       	push	r31
    5cce:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    5cd2:	e0 91 cf 0b 	lds	r30, 0x0BCF	; 0x800bcf <midiRxInIndex>
    5cd6:	f0 e0       	ldi	r31, 0x00	; 0
    5cd8:	e1 57       	subi	r30, 0x71	; 113
    5cda:	f4 4f       	sbci	r31, 0xF4	; 244
    5cdc:	80 83       	st	Z, r24
    5cde:	80 91 cf 0b 	lds	r24, 0x0BCF	; 0x800bcf <midiRxInIndex>
    5ce2:	8f 5f       	subi	r24, 0xFF	; 255
    5ce4:	8f 71       	andi	r24, 0x1F	; 31
    5ce6:	80 93 cf 0b 	sts	0x0BCF, r24	; 0x800bcf <midiRxInIndex>
    5cea:	90 91 cf 0b 	lds	r25, 0x0BCF	; 0x800bcf <midiRxInIndex>
    5cee:	80 91 17 0d 	lds	r24, 0x0D17	; 0x800d17 <midiRxOutIndex>
    5cf2:	98 13       	cpse	r25, r24
    5cf4:	0d c0       	rjmp	.+26     	; 0x5d10 <__vector_36+0x58>
    5cf6:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <midiRxOvflCount>
    5cfa:	88 23       	and	r24, r24
    5cfc:	31 f0       	breq	.+12     	; 0x5d0a <__vector_36+0x52>
    5cfe:	8f 3f       	cpi	r24, 0xFF	; 255
    5d00:	39 f0       	breq	.+14     	; 0x5d10 <__vector_36+0x58>
    5d02:	8f 5f       	subi	r24, 0xFF	; 255
    5d04:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <midiRxOvflCount>
    5d08:	03 c0       	rjmp	.+6      	; 0x5d10 <__vector_36+0x58>
    5d0a:	81 e0       	ldi	r24, 0x01	; 1
    5d0c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <midiRxOvflCount>
    5d10:	80 91 19 0d 	lds	r24, 0x0D19	; 0x800d19 <midiRxBytesCount>
    5d14:	90 91 1a 0d 	lds	r25, 0x0D1A	; 0x800d1a <midiRxBytesCount+0x1>
    5d18:	01 96       	adiw	r24, 0x01	; 1
    5d1a:	90 93 1a 0d 	sts	0x0D1A, r25	; 0x800d1a <midiRxBytesCount+0x1>
    5d1e:	80 93 19 0d 	sts	0x0D19, r24	; 0x800d19 <midiRxBytesCount>
    5d22:	ff 91       	pop	r31
    5d24:	ef 91       	pop	r30
    5d26:	9f 91       	pop	r25
    5d28:	8f 91       	pop	r24
    5d2a:	0f 90       	pop	r0
    5d2c:	0b be       	out	0x3b, r0	; 59
    5d2e:	0f 90       	pop	r0
    5d30:	0f be       	out	0x3f, r0	; 63
    5d32:	0f 90       	pop	r0
    5d34:	1f 90       	pop	r1
    5d36:	18 95       	reti

00005d38 <__vector_37>:
    5d38:	1f 92       	push	r1
    5d3a:	0f 92       	push	r0
    5d3c:	0f b6       	in	r0, 0x3f	; 63
    5d3e:	0f 92       	push	r0
    5d40:	11 24       	eor	r1, r1
    5d42:	0b b6       	in	r0, 0x3b	; 59
    5d44:	0f 92       	push	r0
    5d46:	8f 93       	push	r24
    5d48:	9f 93       	push	r25
    5d4a:	ef 93       	push	r30
    5d4c:	ff 93       	push	r31
    5d4e:	90 91 8c 0b 	lds	r25, 0x0B8C	; 0x800b8c <midiTxOutIndex>
    5d52:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <midiTxInIndex>
    5d56:	98 17       	cp	r25, r24
    5d58:	c1 f0       	breq	.+48     	; 0x5d8a <__vector_37+0x52>
    5d5a:	e0 91 8c 0b 	lds	r30, 0x0B8C	; 0x800b8c <midiTxOutIndex>
    5d5e:	f0 e0       	ldi	r31, 0x00	; 0
    5d60:	e1 55       	subi	r30, 0x51	; 81
    5d62:	f4 4f       	sbci	r31, 0xF4	; 244
    5d64:	80 81       	ld	r24, Z
    5d66:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    5d6a:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <midiTxOutIndex>
    5d6e:	8f 5f       	subi	r24, 0xFF	; 255
    5d70:	8f 71       	andi	r24, 0x1F	; 31
    5d72:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <midiTxOutIndex>
    5d76:	80 91 14 0c 	lds	r24, 0x0C14	; 0x800c14 <midiTxBytesCount>
    5d7a:	90 91 15 0c 	lds	r25, 0x0C15	; 0x800c15 <midiTxBytesCount+0x1>
    5d7e:	01 96       	adiw	r24, 0x01	; 1
    5d80:	90 93 15 0c 	sts	0x0C15, r25	; 0x800c15 <midiTxBytesCount+0x1>
    5d84:	80 93 14 0c 	sts	0x0C14, r24	; 0x800c14 <midiTxBytesCount>
    5d88:	05 c0       	rjmp	.+10     	; 0x5d94 <__vector_37+0x5c>
    5d8a:	e9 ec       	ldi	r30, 0xC9	; 201
    5d8c:	f0 e0       	ldi	r31, 0x00	; 0
    5d8e:	80 81       	ld	r24, Z
    5d90:	8f 7d       	andi	r24, 0xDF	; 223
    5d92:	80 83       	st	Z, r24
    5d94:	ff 91       	pop	r31
    5d96:	ef 91       	pop	r30
    5d98:	9f 91       	pop	r25
    5d9a:	8f 91       	pop	r24
    5d9c:	0f 90       	pop	r0
    5d9e:	0b be       	out	0x3b, r0	; 59
    5da0:	0f 90       	pop	r0
    5da2:	0f be       	out	0x3f, r0	; 63
    5da4:	0f 90       	pop	r0
    5da6:	1f 90       	pop	r1
    5da8:	18 95       	reti

00005daa <serial0SER_USBSend>:
    5daa:	90 91 d1 0b 	lds	r25, 0x0BD1	; 0x800bd1 <serusbTxInIndex>
    5dae:	e1 ec       	ldi	r30, 0xC1	; 193
    5db0:	f0 e0       	ldi	r31, 0x00	; 0
    5db2:	20 81       	ld	r18, Z
    5db4:	2f 7d       	andi	r18, 0xDF	; 223
    5db6:	20 83       	st	Z, r18
    5db8:	e9 2f       	mov	r30, r25
    5dba:	f0 e0       	ldi	r31, 0x00	; 0
    5dbc:	ea 5e       	subi	r30, 0xEA	; 234
    5dbe:	f3 4f       	sbci	r31, 0xF3	; 243
    5dc0:	80 83       	st	Z, r24
    5dc2:	81 e0       	ldi	r24, 0x01	; 1
    5dc4:	89 0f       	add	r24, r25
    5dc6:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <serusbTxOutIndex>
    5dca:	89 13       	cpse	r24, r25
    5dcc:	0c c0       	rjmp	.+24     	; 0x5de6 <serial0SER_USBSend+0x3c>
    5dce:	e1 ec       	ldi	r30, 0xC1	; 193
    5dd0:	f0 e0       	ldi	r31, 0x00	; 0
    5dd2:	90 81       	ld	r25, Z
    5dd4:	90 62       	ori	r25, 0x20	; 32
    5dd6:	90 83       	st	Z, r25
    5dd8:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <serusbTxOutIndex>
    5ddc:	89 17       	cp	r24, r25
    5dde:	e1 f3       	breq	.-8      	; 0x5dd8 <serial0SER_USBSend+0x2e>
    5de0:	80 93 d1 0b 	sts	0x0BD1, r24	; 0x800bd1 <serusbTxInIndex>
    5de4:	08 95       	ret
    5de6:	80 93 d1 0b 	sts	0x0BD1, r24	; 0x800bd1 <serusbTxInIndex>
    5dea:	e1 ec       	ldi	r30, 0xC1	; 193
    5dec:	f0 e0       	ldi	r31, 0x00	; 0
    5dee:	80 81       	ld	r24, Z
    5df0:	80 62       	ori	r24, 0x20	; 32
    5df2:	80 83       	st	Z, r24
    5df4:	08 95       	ret

00005df6 <serial0SER_USB_sendStringP>:
    5df6:	cf 93       	push	r28
    5df8:	df 93       	push	r29
    5dfa:	fc 01       	movw	r30, r24
    5dfc:	02 c0       	rjmp	.+4      	; 0x5e02 <serial0SER_USB_sendStringP+0xc>
    5dfe:	d5 df       	rcall	.-86     	; 0x5daa <serial0SER_USBSend>
    5e00:	fe 01       	movw	r30, r28
    5e02:	ef 01       	movw	r28, r30
    5e04:	21 96       	adiw	r28, 0x01	; 1
    5e06:	84 91       	lpm	r24, Z
    5e08:	88 23       	and	r24, r24
    5e0a:	21 f0       	breq	.+8      	; 0x5e14 <serial0SER_USB_sendStringP+0x1e>
    5e0c:	90 91 16 0d 	lds	r25, 0x0D16	; 0x800d16 <serusbOvflFlag>
    5e10:	9f 3f       	cpi	r25, 0xFF	; 255
    5e12:	a9 f7       	brne	.-22     	; 0x5dfe <serial0SER_USB_sendStringP+0x8>
    5e14:	df 91       	pop	r29
    5e16:	cf 91       	pop	r28
    5e18:	08 95       	ret

00005e1a <serial0SER_USB_sendCRLF>:
    5e1a:	82 ef       	ldi	r24, 0xF2	; 242
    5e1c:	90 e1       	ldi	r25, 0x10	; 16
    5e1e:	eb cf       	rjmp	.-42     	; 0x5df6 <serial0SER_USB_sendStringP>
    5e20:	08 95       	ret

00005e22 <init_Serial0SerUSB>:
    5e22:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    5e26:	83 e3       	ldi	r24, 0x33	; 51
    5e28:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    5e2c:	e1 ec       	ldi	r30, 0xC1	; 193
    5e2e:	f0 e0       	ldi	r31, 0x00	; 0
    5e30:	80 81       	ld	r24, Z
    5e32:	88 69       	ori	r24, 0x98	; 152
    5e34:	80 83       	st	Z, r24
    5e36:	e2 ec       	ldi	r30, 0xC2	; 194
    5e38:	f0 e0       	ldi	r31, 0x00	; 0
    5e3a:	80 81       	ld	r24, Z
    5e3c:	86 60       	ori	r24, 0x06	; 6
    5e3e:	80 83       	st	Z, r24
    5e40:	10 92 cf 0b 	sts	0x0BCF, r1	; 0x800bcf <midiRxInIndex>
    5e44:	10 92 17 0d 	sts	0x0D17, r1	; 0x800d17 <midiRxOutIndex>
    5e48:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <midiTxInIndex>
    5e4c:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <midiTxOutIndex>
    5e50:	10 92 16 0d 	sts	0x0D16, r1	; 0x800d16 <serusbOvflFlag>
    5e54:	0e 94 02 0a 	call	0x1404	; 0x1404 <eeprom_ReadUSB>
    5e58:	8f 3f       	cpi	r24, 0xFF	; 255
    5e5a:	41 f4       	brne	.+16     	; 0x5e6c <init_Serial0SerUSB+0x4a>
    5e5c:	10 92 d0 0b 	sts	0x0BD0, r1	; 0x800bd0 <serusb_Active>
    5e60:	40 e0       	ldi	r20, 0x00	; 0
    5e62:	50 e0       	ldi	r21, 0x00	; 0
    5e64:	64 e0       	ldi	r22, 0x04	; 4
    5e66:	81 e0       	ldi	r24, 0x01	; 1
    5e68:	0e 94 52 13 	call	0x26a4	; 0x26a4 <log_putError>
    5e6c:	80 91 d0 0b 	lds	r24, 0x0BD0	; 0x800bd0 <serusb_Active>
    5e70:	8f 3f       	cpi	r24, 0xFF	; 255
    5e72:	41 f4       	brne	.+16     	; 0x5e84 <init_Serial0SerUSB+0x62>
    5e74:	86 e0       	ldi	r24, 0x06	; 6
    5e76:	93 e0       	ldi	r25, 0x03	; 3
    5e78:	be df       	rcall	.-132    	; 0x5df6 <serial0SER_USB_sendStringP>
    5e7a:	82 e9       	ldi	r24, 0x92	; 146
    5e7c:	90 e1       	ldi	r25, 0x10	; 16
    5e7e:	bb df       	rcall	.-138    	; 0x5df6 <serial0SER_USB_sendStringP>
    5e80:	cc df       	rcall	.-104    	; 0x5e1a <serial0SER_USB_sendCRLF>
    5e82:	cb cf       	rjmp	.-106    	; 0x5e1a <serial0SER_USB_sendCRLF>
    5e84:	08 95       	ret

00005e86 <serial0SER_USB_sendString>:
    5e86:	1f 93       	push	r17
    5e88:	cf 93       	push	r28
    5e8a:	df 93       	push	r29
    5e8c:	ec 01       	movw	r28, r24
    5e8e:	10 e5       	ldi	r17, 0x50	; 80
    5e90:	03 c0       	rjmp	.+6      	; 0x5e98 <serial0SER_USB_sendString+0x12>
    5e92:	21 96       	adiw	r28, 0x01	; 1
    5e94:	8a df       	rcall	.-236    	; 0x5daa <serial0SER_USBSend>
    5e96:	11 50       	subi	r17, 0x01	; 1
    5e98:	88 81       	ld	r24, Y
    5e9a:	88 23       	and	r24, r24
    5e9c:	31 f0       	breq	.+12     	; 0x5eaa <serial0SER_USB_sendString+0x24>
    5e9e:	90 91 16 0d 	lds	r25, 0x0D16	; 0x800d16 <serusbOvflFlag>
    5ea2:	9f 3f       	cpi	r25, 0xFF	; 255
    5ea4:	11 f0       	breq	.+4      	; 0x5eaa <serial0SER_USB_sendString+0x24>
    5ea6:	11 11       	cpse	r17, r1
    5ea8:	f4 cf       	rjmp	.-24     	; 0x5e92 <serial0SER_USB_sendString+0xc>
    5eaa:	df 91       	pop	r29
    5eac:	cf 91       	pop	r28
    5eae:	1f 91       	pop	r17
    5eb0:	08 95       	ret

00005eb2 <__vector_25>:
    5eb2:	1f 92       	push	r1
    5eb4:	0f 92       	push	r0
    5eb6:	0f b6       	in	r0, 0x3f	; 63
    5eb8:	0f 92       	push	r0
    5eba:	11 24       	eor	r1, r1
    5ebc:	0b b6       	in	r0, 0x3b	; 59
    5ebe:	0f 92       	push	r0
    5ec0:	8f 93       	push	r24
    5ec2:	9f 93       	push	r25
    5ec4:	ef 93       	push	r30
    5ec6:	ff 93       	push	r31
    5ec8:	e0 91 1b 0d 	lds	r30, 0x0D1B	; 0x800d1b <serusbRxInIndex>
    5ecc:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    5ed0:	81 e0       	ldi	r24, 0x01	; 1
    5ed2:	8e 0f       	add	r24, r30
    5ed4:	f0 e0       	ldi	r31, 0x00	; 0
    5ed6:	ed 52       	subi	r30, 0x2D	; 45
    5ed8:	f4 4f       	sbci	r31, 0xF4	; 244
    5eda:	90 83       	st	Z, r25
    5edc:	8f 73       	andi	r24, 0x3F	; 63
    5ede:	90 91 d2 0b 	lds	r25, 0x0BD2	; 0x800bd2 <serusbRxOutIndex>
    5ee2:	89 13       	cpse	r24, r25
    5ee4:	04 c0       	rjmp	.+8      	; 0x5eee <__vector_25+0x3c>
    5ee6:	8f ef       	ldi	r24, 0xFF	; 255
    5ee8:	80 93 16 0d 	sts	0x0D16, r24	; 0x800d16 <serusbOvflFlag>
    5eec:	02 c0       	rjmp	.+4      	; 0x5ef2 <__vector_25+0x40>
    5eee:	80 93 1b 0d 	sts	0x0D1B, r24	; 0x800d1b <serusbRxInIndex>
    5ef2:	ff 91       	pop	r31
    5ef4:	ef 91       	pop	r30
    5ef6:	9f 91       	pop	r25
    5ef8:	8f 91       	pop	r24
    5efa:	0f 90       	pop	r0
    5efc:	0b be       	out	0x3b, r0	; 59
    5efe:	0f 90       	pop	r0
    5f00:	0f be       	out	0x3f, r0	; 63
    5f02:	0f 90       	pop	r0
    5f04:	1f 90       	pop	r1
    5f06:	18 95       	reti

00005f08 <__vector_26>:
    5f08:	1f 92       	push	r1
    5f0a:	0f 92       	push	r0
    5f0c:	0f b6       	in	r0, 0x3f	; 63
    5f0e:	0f 92       	push	r0
    5f10:	11 24       	eor	r1, r1
    5f12:	0b b6       	in	r0, 0x3b	; 59
    5f14:	0f 92       	push	r0
    5f16:	2f 93       	push	r18
    5f18:	8f 93       	push	r24
    5f1a:	9f 93       	push	r25
    5f1c:	ef 93       	push	r30
    5f1e:	ff 93       	push	r31
    5f20:	80 91 8d 0b 	lds	r24, 0x0B8D	; 0x800b8d <serusbTxOutIndex>
    5f24:	20 91 d1 0b 	lds	r18, 0x0BD1	; 0x800bd1 <serusbTxInIndex>
    5f28:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <serusbTxOutIndex>
    5f2c:	29 17       	cp	r18, r25
    5f2e:	59 f0       	breq	.+22     	; 0x5f46 <__vector_26+0x3e>
    5f30:	e8 2f       	mov	r30, r24
    5f32:	f0 e0       	ldi	r31, 0x00	; 0
    5f34:	ea 5e       	subi	r30, 0xEA	; 234
    5f36:	f3 4f       	sbci	r31, 0xF3	; 243
    5f38:	90 81       	ld	r25, Z
    5f3a:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    5f3e:	8f 5f       	subi	r24, 0xFF	; 255
    5f40:	80 93 8d 0b 	sts	0x0B8D, r24	; 0x800b8d <serusbTxOutIndex>
    5f44:	05 c0       	rjmp	.+10     	; 0x5f50 <__vector_26+0x48>
    5f46:	e1 ec       	ldi	r30, 0xC1	; 193
    5f48:	f0 e0       	ldi	r31, 0x00	; 0
    5f4a:	80 81       	ld	r24, Z
    5f4c:	8f 7d       	andi	r24, 0xDF	; 223
    5f4e:	80 83       	st	Z, r24
    5f50:	ff 91       	pop	r31
    5f52:	ef 91       	pop	r30
    5f54:	9f 91       	pop	r25
    5f56:	8f 91       	pop	r24
    5f58:	2f 91       	pop	r18
    5f5a:	0f 90       	pop	r0
    5f5c:	0b be       	out	0x3b, r0	; 59
    5f5e:	0f 90       	pop	r0
    5f60:	0f be       	out	0x3f, r0	; 63
    5f62:	0f 90       	pop	r0
    5f64:	1f 90       	pop	r1
    5f66:	18 95       	reti

00005f68 <nibbleToChr>:
	if ((myNibbles[0] + 10*myNibbles[1] + 100*myNibbles[2]) > 255) {
		return(DEC_OVFL);
	}  else {
		return(0);
	}
}
    5f68:	8a 30       	cpi	r24, 0x0A	; 10
    5f6a:	10 f0       	brcs	.+4      	; 0x5f70 <nibbleToChr+0x8>
    5f6c:	89 5c       	subi	r24, 0xC9	; 201
    5f6e:	08 95       	ret
    5f70:	80 5d       	subi	r24, 0xD0	; 208
    5f72:	08 95       	ret

00005f74 <lcd_setCG>:
    5f74:	ef 92       	push	r14
    5f76:	ff 92       	push	r15
    5f78:	1f 93       	push	r17
    5f7a:	cf 93       	push	r28
    5f7c:	df 93       	push	r29
    5f7e:	eb 01       	movw	r28, r22
    5f80:	90 e0       	ldi	r25, 0x00	; 0
    5f82:	88 0f       	add	r24, r24
    5f84:	99 1f       	adc	r25, r25
    5f86:	88 0f       	add	r24, r24
    5f88:	99 1f       	adc	r25, r25
    5f8a:	88 0f       	add	r24, r24
    5f8c:	99 1f       	adc	r25, r25
    5f8e:	80 64       	ori	r24, 0x40	; 64
    5f90:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_write_command>
    5f94:	10 e0       	ldi	r17, 0x00	; 0
    5f96:	0a c0       	rjmp	.+20     	; 0x5fac <lcd_setCG+0x38>
    5f98:	7e 01       	movw	r14, r28
    5f9a:	8f ef       	ldi	r24, 0xFF	; 255
    5f9c:	e8 1a       	sub	r14, r24
    5f9e:	f8 0a       	sbc	r15, r24
    5fa0:	fe 01       	movw	r30, r28
    5fa2:	84 91       	lpm	r24, Z
    5fa4:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <lcd_write_character>
    5fa8:	1f 5f       	subi	r17, 0xFF	; 255
    5faa:	e7 01       	movw	r28, r14
    5fac:	18 30       	cpi	r17, 0x08	; 8
    5fae:	a0 f3       	brcs	.-24     	; 0x5f98 <lcd_setCG+0x24>
    5fb0:	df 91       	pop	r29
    5fb2:	cf 91       	pop	r28
    5fb4:	1f 91       	pop	r17
    5fb6:	ff 90       	pop	r15
    5fb8:	ef 90       	pop	r14
    5fba:	08 95       	ret

00005fbc <lcd_initCG>:
    5fbc:	6a ee       	ldi	r22, 0xEA	; 234
    5fbe:	70 e1       	ldi	r23, 0x10	; 16
    5fc0:	80 e0       	ldi	r24, 0x00	; 0
    5fc2:	d8 df       	rcall	.-80     	; 0x5f74 <lcd_setCG>
    5fc4:	62 ee       	ldi	r22, 0xE2	; 226
    5fc6:	70 e1       	ldi	r23, 0x10	; 16
    5fc8:	81 e0       	ldi	r24, 0x01	; 1
    5fca:	d4 df       	rcall	.-88     	; 0x5f74 <lcd_setCG>
    5fcc:	6a ed       	ldi	r22, 0xDA	; 218
    5fce:	70 e1       	ldi	r23, 0x10	; 16
    5fd0:	82 e0       	ldi	r24, 0x02	; 2
    5fd2:	d0 cf       	rjmp	.-96     	; 0x5f74 <lcd_setCG>
    5fd4:	08 95       	ret

00005fd6 <lcd_hexout>:
    5fd6:	cf 93       	push	r28
    5fd8:	c8 2f       	mov	r28, r24
    5fda:	82 95       	swap	r24
    5fdc:	8f 70       	andi	r24, 0x0F	; 15
    5fde:	8a 30       	cpi	r24, 0x0A	; 10
    5fe0:	10 f0       	brcs	.+4      	; 0x5fe6 <lcd_hexout+0x10>
    5fe2:	89 5c       	subi	r24, 0xC9	; 201
    5fe4:	01 c0       	rjmp	.+2      	; 0x5fe8 <lcd_hexout+0x12>
    5fe6:	80 5d       	subi	r24, 0xD0	; 208
    5fe8:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    5fec:	cf 70       	andi	r28, 0x0F	; 15
    5fee:	ca 30       	cpi	r28, 0x0A	; 10
    5ff0:	18 f0       	brcs	.+6      	; 0x5ff8 <lcd_hexout+0x22>
    5ff2:	87 e3       	ldi	r24, 0x37	; 55
    5ff4:	8c 0f       	add	r24, r28
    5ff6:	02 c0       	rjmp	.+4      	; 0x5ffc <lcd_hexout+0x26>
    5ff8:	80 e3       	ldi	r24, 0x30	; 48
    5ffa:	8c 0f       	add	r24, r28
    5ffc:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6000:	cf 91       	pop	r28
    6002:	08 95       	ret

00006004 <lcd_longout>:
    6004:	cf 93       	push	r28
    6006:	df 93       	push	r29
    6008:	d3 e0       	ldi	r29, 0x03	; 3
    600a:	1c c0       	rjmp	.+56     	; 0x6044 <lcd_longout+0x40>
    600c:	ed 2f       	mov	r30, r29
    600e:	0d 2e       	mov	r0, r29
    6010:	00 0c       	add	r0, r0
    6012:	ff 0b       	sbc	r31, r31
    6014:	e2 5e       	subi	r30, 0xE2	; 226
    6016:	f2 4f       	sbci	r31, 0xF2	; 242
    6018:	c0 81       	ld	r28, Z
    601a:	8c 2f       	mov	r24, r28
    601c:	82 95       	swap	r24
    601e:	8f 70       	andi	r24, 0x0F	; 15
    6020:	8a 30       	cpi	r24, 0x0A	; 10
    6022:	10 f0       	brcs	.+4      	; 0x6028 <lcd_longout+0x24>
    6024:	89 5c       	subi	r24, 0xC9	; 201
    6026:	01 c0       	rjmp	.+2      	; 0x602a <lcd_longout+0x26>
    6028:	80 5d       	subi	r24, 0xD0	; 208
    602a:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    602e:	cf 70       	andi	r28, 0x0F	; 15
    6030:	ca 30       	cpi	r28, 0x0A	; 10
    6032:	18 f0       	brcs	.+6      	; 0x603a <lcd_longout+0x36>
    6034:	87 e3       	ldi	r24, 0x37	; 55
    6036:	8c 0f       	add	r24, r28
    6038:	02 c0       	rjmp	.+4      	; 0x603e <lcd_longout+0x3a>
    603a:	80 e3       	ldi	r24, 0x30	; 48
    603c:	8c 0f       	add	r24, r28
    603e:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6042:	d1 50       	subi	r29, 0x01	; 1
    6044:	dd 23       	and	r29, r29
    6046:	14 f7       	brge	.-60     	; 0x600c <lcd_longout+0x8>
    6048:	df 91       	pop	r29
    604a:	cf 91       	pop	r28
    604c:	08 95       	ret

0000604e <lcd_dec2out>:
    604e:	cf 93       	push	r28
    6050:	c8 2f       	mov	r28, r24
    6052:	84 36       	cpi	r24, 0x64	; 100
    6054:	50 f0       	brcs	.+20     	; 0x606a <lcd_dec2out+0x1c>
    6056:	8d e2       	ldi	r24, 0x2D	; 45
    6058:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    605c:	8d e2       	ldi	r24, 0x2D	; 45
    605e:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6062:	0d c0       	rjmp	.+26     	; 0x607e <lcd_dec2out+0x30>
    6064:	ca 50       	subi	r28, 0x0A	; 10
    6066:	8f 5f       	subi	r24, 0xFF	; 255
    6068:	01 c0       	rjmp	.+2      	; 0x606c <lcd_dec2out+0x1e>
    606a:	80 e0       	ldi	r24, 0x00	; 0
    606c:	ca 30       	cpi	r28, 0x0A	; 10
    606e:	d0 f7       	brcc	.-12     	; 0x6064 <lcd_dec2out+0x16>
    6070:	80 5d       	subi	r24, 0xD0	; 208
    6072:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6076:	80 e3       	ldi	r24, 0x30	; 48
    6078:	8c 0f       	add	r24, r28
    607a:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    607e:	cf 91       	pop	r28
    6080:	08 95       	ret

00006082 <putChar_Dec2>:
    6082:	84 36       	cpi	r24, 0x64	; 100
    6084:	58 f0       	brcs	.+22     	; 0x609c <putChar_Dec2+0x1a>
    6086:	8d e2       	ldi	r24, 0x2D	; 45
    6088:	db 01       	movw	r26, r22
    608a:	8c 93       	st	X, r24
    608c:	fb 01       	movw	r30, r22
    608e:	32 96       	adiw	r30, 0x02	; 2
    6090:	11 96       	adiw	r26, 0x01	; 1
    6092:	8c 93       	st	X, r24
    6094:	0f c0       	rjmp	.+30     	; 0x60b4 <putChar_Dec2+0x32>
    6096:	8a 50       	subi	r24, 0x0A	; 10
    6098:	9f 5f       	subi	r25, 0xFF	; 255
    609a:	01 c0       	rjmp	.+2      	; 0x609e <putChar_Dec2+0x1c>
    609c:	90 e0       	ldi	r25, 0x00	; 0
    609e:	8a 30       	cpi	r24, 0x0A	; 10
    60a0:	d0 f7       	brcc	.-12     	; 0x6096 <putChar_Dec2+0x14>
    60a2:	90 5d       	subi	r25, 0xD0	; 208
    60a4:	fb 01       	movw	r30, r22
    60a6:	90 83       	st	Z, r25
    60a8:	32 96       	adiw	r30, 0x02	; 2
    60aa:	90 e3       	ldi	r25, 0x30	; 48
    60ac:	98 0f       	add	r25, r24
    60ae:	db 01       	movw	r26, r22
    60b0:	11 96       	adiw	r26, 0x01	; 1
    60b2:	9c 93       	st	X, r25
    60b4:	10 82       	st	Z, r1
    60b6:	cf 01       	movw	r24, r30
    60b8:	08 95       	ret

000060ba <putChar_hex>:
    60ba:	fb 01       	movw	r30, r22
    60bc:	98 2f       	mov	r25, r24
    60be:	92 95       	swap	r25
    60c0:	9f 70       	andi	r25, 0x0F	; 15
    60c2:	9a 30       	cpi	r25, 0x0A	; 10
    60c4:	10 f0       	brcs	.+4      	; 0x60ca <putChar_hex+0x10>
    60c6:	99 5c       	subi	r25, 0xC9	; 201
    60c8:	01 c0       	rjmp	.+2      	; 0x60cc <putChar_hex+0x12>
    60ca:	90 5d       	subi	r25, 0xD0	; 208
    60cc:	90 83       	st	Z, r25
    60ce:	98 2f       	mov	r25, r24
    60d0:	9f 70       	andi	r25, 0x0F	; 15
    60d2:	9f 01       	movw	r18, r30
    60d4:	2e 5f       	subi	r18, 0xFE	; 254
    60d6:	3f 4f       	sbci	r19, 0xFF	; 255
    60d8:	9a 30       	cpi	r25, 0x0A	; 10
    60da:	10 f0       	brcs	.+4      	; 0x60e0 <putChar_hex+0x26>
    60dc:	99 5c       	subi	r25, 0xC9	; 201
    60de:	01 c0       	rjmp	.+2      	; 0x60e2 <putChar_hex+0x28>
    60e0:	90 5d       	subi	r25, 0xD0	; 208
    60e2:	91 83       	std	Z+1, r25	; 0x01
    60e4:	12 82       	std	Z+2, r1	; 0x02
    60e6:	c9 01       	movw	r24, r18
    60e8:	08 95       	ret

000060ea <putChar_long>:
    60ea:	ac 01       	movw	r20, r24
    60ec:	fb 01       	movw	r30, r22
    60ee:	34 96       	adiw	r30, 0x04	; 4
    60f0:	db 01       	movw	r26, r22
    60f2:	14 96       	adiw	r26, 0x04	; 4
    60f4:	1c 92       	st	X, r1
    60f6:	20 e0       	ldi	r18, 0x00	; 0
    60f8:	10 c0       	rjmp	.+32     	; 0x611a <putChar_long+0x30>
    60fa:	94 2f       	mov	r25, r20
    60fc:	9f 70       	andi	r25, 0x0F	; 15
    60fe:	31 97       	sbiw	r30, 0x01	; 1
    6100:	9a 30       	cpi	r25, 0x0A	; 10
    6102:	10 f0       	brcs	.+4      	; 0x6108 <putChar_long+0x1e>
    6104:	99 5c       	subi	r25, 0xC9	; 201
    6106:	01 c0       	rjmp	.+2      	; 0x610a <putChar_long+0x20>
    6108:	90 5d       	subi	r25, 0xD0	; 208
    610a:	90 83       	st	Z, r25
    610c:	52 95       	swap	r21
    610e:	42 95       	swap	r20
    6110:	4f 70       	andi	r20, 0x0F	; 15
    6112:	45 27       	eor	r20, r21
    6114:	5f 70       	andi	r21, 0x0F	; 15
    6116:	45 27       	eor	r20, r21
    6118:	2f 5f       	subi	r18, 0xFF	; 255
    611a:	24 30       	cpi	r18, 0x04	; 4
    611c:	70 f3       	brcs	.-36     	; 0x60fa <putChar_long+0x10>
    611e:	cf 01       	movw	r24, r30
    6120:	04 96       	adiw	r24, 0x04	; 4
    6122:	08 95       	ret

00006124 <putChar_Note>:
    6124:	88 23       	and	r24, r24
    6126:	8c f4       	brge	.+34     	; 0x614a <putChar_Note+0x26>
    6128:	8d e2       	ldi	r24, 0x2D	; 45
    612a:	db 01       	movw	r26, r22
    612c:	8c 93       	st	X, r24
    612e:	9e e6       	ldi	r25, 0x6E	; 110
    6130:	11 96       	adiw	r26, 0x01	; 1
    6132:	9c 93       	st	X, r25
    6134:	11 97       	sbiw	r26, 0x01	; 1
    6136:	12 96       	adiw	r26, 0x02	; 2
    6138:	8c 93       	st	X, r24
    613a:	12 97       	sbiw	r26, 0x02	; 2
    613c:	14 96       	adiw	r26, 0x04	; 4
    613e:	fb 01       	movw	r30, r22
    6140:	13 82       	std	Z+3, r1	; 0x03
    6142:	49 c0       	rjmp	.+146    	; 0x61d6 <putChar_Note+0xb2>
    6144:	8c 50       	subi	r24, 0x0C	; 12
    6146:	9f 5f       	subi	r25, 0xFF	; 255
    6148:	01 c0       	rjmp	.+2      	; 0x614c <putChar_Note+0x28>
    614a:	90 e0       	ldi	r25, 0x00	; 0
    614c:	8c 30       	cpi	r24, 0x0C	; 12
    614e:	d0 f7       	brcc	.-12     	; 0x6144 <putChar_Note+0x20>
    6150:	8b 30       	cpi	r24, 0x0B	; 11
    6152:	39 f4       	brne	.+14     	; 0x6162 <putChar_Note+0x3e>
    6154:	fb 01       	movw	r30, r22
    6156:	31 96       	adiw	r30, 0x01	; 1
    6158:	88 e4       	ldi	r24, 0x48	; 72
    615a:	db 01       	movw	r26, r22
    615c:	8c 93       	st	X, r24
    615e:	8f e5       	ldi	r24, 0x5F	; 95
    6160:	27 c0       	rjmp	.+78     	; 0x61b0 <putChar_Note+0x8c>
    6162:	85 30       	cpi	r24, 0x05	; 5
    6164:	58 f4       	brcc	.+22     	; 0x617c <putChar_Note+0x58>
    6166:	fb 01       	movw	r30, r22
    6168:	31 96       	adiw	r30, 0x01	; 1
    616a:	28 2f       	mov	r18, r24
    616c:	26 95       	lsr	r18
    616e:	2d 5b       	subi	r18, 0xBD	; 189
    6170:	db 01       	movw	r26, r22
    6172:	2c 93       	st	X, r18
    6174:	80 fd       	sbrc	r24, 0
    6176:	19 c0       	rjmp	.+50     	; 0x61aa <putChar_Note+0x86>
    6178:	8f e5       	ldi	r24, 0x5F	; 95
    617a:	1a c0       	rjmp	.+52     	; 0x61b0 <putChar_Note+0x8c>
    617c:	89 30       	cpi	r24, 0x09	; 9
    617e:	30 f0       	brcs	.+12     	; 0x618c <putChar_Note+0x68>
    6180:	fb 01       	movw	r30, r22
    6182:	31 96       	adiw	r30, 0x01	; 1
    6184:	21 e4       	ldi	r18, 0x41	; 65
    6186:	db 01       	movw	r26, r22
    6188:	2c 93       	st	X, r18
    618a:	0b c0       	rjmp	.+22     	; 0x61a2 <putChar_Note+0x7e>
    618c:	fb 01       	movw	r30, r22
    618e:	31 96       	adiw	r30, 0x01	; 1
    6190:	28 2f       	mov	r18, r24
    6192:	30 e0       	ldi	r19, 0x00	; 0
    6194:	25 50       	subi	r18, 0x05	; 5
    6196:	31 09       	sbc	r19, r1
    6198:	35 95       	asr	r19
    619a:	27 95       	ror	r18
    619c:	2a 5b       	subi	r18, 0xBA	; 186
    619e:	db 01       	movw	r26, r22
    61a0:	2c 93       	st	X, r18
    61a2:	80 ff       	sbrs	r24, 0
    61a4:	04 c0       	rjmp	.+8      	; 0x61ae <putChar_Note+0x8a>
    61a6:	8f e5       	ldi	r24, 0x5F	; 95
    61a8:	03 c0       	rjmp	.+6      	; 0x61b0 <putChar_Note+0x8c>
    61aa:	83 e2       	ldi	r24, 0x23	; 35
    61ac:	01 c0       	rjmp	.+2      	; 0x61b0 <putChar_Note+0x8c>
    61ae:	83 e2       	ldi	r24, 0x23	; 35
    61b0:	80 83       	st	Z, r24
    61b2:	91 11       	cpse	r25, r1
    61b4:	05 c0       	rjmp	.+10     	; 0x61c0 <putChar_Note+0x9c>
    61b6:	df 01       	movw	r26, r30
    61b8:	12 96       	adiw	r26, 0x02	; 2
    61ba:	8d e6       	ldi	r24, 0x6D	; 109
    61bc:	81 83       	std	Z+1, r24	; 0x01
    61be:	0b c0       	rjmp	.+22     	; 0x61d6 <putChar_Note+0xb2>
    61c0:	9c 30       	cpi	r25, 0x0C	; 12
    61c2:	28 f4       	brcc	.+10     	; 0x61ce <putChar_Note+0xaa>
    61c4:	df 01       	movw	r26, r30
    61c6:	12 96       	adiw	r26, 0x02	; 2
    61c8:	91 5d       	subi	r25, 0xD1	; 209
    61ca:	91 83       	std	Z+1, r25	; 0x01
    61cc:	04 c0       	rjmp	.+8      	; 0x61d6 <putChar_Note+0xb2>
    61ce:	df 01       	movw	r26, r30
    61d0:	12 96       	adiw	r26, 0x02	; 2
    61d2:	8d e2       	ldi	r24, 0x2D	; 45
    61d4:	81 83       	std	Z+1, r24	; 0x01
    61d6:	1c 92       	st	X, r1
    61d8:	cd 01       	movw	r24, r26
    61da:	08 95       	ret

000061dc <putChar_Manual>:
    61dc:	83 30       	cpi	r24, 0x03	; 3
    61de:	38 f4       	brcc	.+14     	; 0x61ee <putChar_Manual+0x12>
    61e0:	fb 01       	movw	r30, r22
    61e2:	31 96       	adiw	r30, 0x01	; 1
    61e4:	93 e3       	ldi	r25, 0x33	; 51
    61e6:	98 1b       	sub	r25, r24
    61e8:	db 01       	movw	r26, r22
    61ea:	9c 93       	st	X, r25
    61ec:	0d c0       	rjmp	.+26     	; 0x6208 <putChar_Manual+0x2c>
    61ee:	83 30       	cpi	r24, 0x03	; 3
    61f0:	31 f4       	brne	.+12     	; 0x61fe <putChar_Manual+0x22>
    61f2:	fb 01       	movw	r30, r22
    61f4:	31 96       	adiw	r30, 0x01	; 1
    61f6:	80 e5       	ldi	r24, 0x50	; 80
    61f8:	db 01       	movw	r26, r22
    61fa:	8c 93       	st	X, r24
    61fc:	05 c0       	rjmp	.+10     	; 0x6208 <putChar_Manual+0x2c>
    61fe:	fb 01       	movw	r30, r22
    6200:	31 96       	adiw	r30, 0x01	; 1
    6202:	8d e2       	ldi	r24, 0x2D	; 45
    6204:	db 01       	movw	r26, r22
    6206:	8c 93       	st	X, r24
    6208:	10 82       	st	Z, r1
    620a:	cf 01       	movw	r24, r30
    620c:	08 95       	ret

0000620e <putString_P>:
    620e:	fc 01       	movw	r30, r24
    6210:	db 01       	movw	r26, r22
    6212:	20 e0       	ldi	r18, 0x00	; 0
    6214:	02 c0       	rjmp	.+4      	; 0x621a <putString_P+0xc>
    6216:	28 2f       	mov	r18, r24
    6218:	da 01       	movw	r26, r20
    621a:	94 91       	lpm	r25, Z
    621c:	99 23       	and	r25, r25
    621e:	51 f0       	breq	.+20     	; 0x6234 <putString_P+0x26>
    6220:	ad 01       	movw	r20, r26
    6222:	4f 5f       	subi	r20, 0xFF	; 255
    6224:	5f 4f       	sbci	r21, 0xFF	; 255
    6226:	31 96       	adiw	r30, 0x01	; 1
    6228:	9c 93       	st	X, r25
    622a:	81 e0       	ldi	r24, 0x01	; 1
    622c:	82 0f       	add	r24, r18
    622e:	24 31       	cpi	r18, 0x14	; 20
    6230:	90 f3       	brcs	.-28     	; 0x6216 <putString_P+0x8>
    6232:	01 c0       	rjmp	.+2      	; 0x6236 <putString_P+0x28>
    6234:	ad 01       	movw	r20, r26
    6236:	ca 01       	movw	r24, r20
    6238:	08 95       	ret

0000623a <lcd_wordout>:
    623a:	cf 93       	push	r28
    623c:	c8 2f       	mov	r28, r24
    623e:	89 2f       	mov	r24, r25
    6240:	ca de       	rcall	.-620    	; 0x5fd6 <lcd_hexout>
    6242:	8c 2f       	mov	r24, r28
    6244:	c8 de       	rcall	.-624    	; 0x5fd6 <lcd_hexout>
    6246:	cf 91       	pop	r28
    6248:	08 95       	ret

0000624a <lcd_noteOut>:
    624a:	cf 93       	push	r28
    624c:	df 93       	push	r29
    624e:	88 23       	and	r24, r24
    6250:	dc f1       	brlt	.+118    	; 0x62c8 <lcd_noteOut+0x7e>
    6252:	90 e0       	ldi	r25, 0x00	; 0
    6254:	02 c0       	rjmp	.+4      	; 0x625a <lcd_noteOut+0x10>
    6256:	9f 5f       	subi	r25, 0xFF	; 255
    6258:	8c 50       	subi	r24, 0x0C	; 12
    625a:	8c 30       	cpi	r24, 0x0C	; 12
    625c:	e0 f7       	brcc	.-8      	; 0x6256 <lcd_noteOut+0xc>
    625e:	48 2f       	mov	r20, r24
    6260:	50 e0       	ldi	r21, 0x00	; 0
    6262:	4c 30       	cpi	r20, 0x0C	; 12
    6264:	51 05       	cpc	r21, r1
    6266:	30 f4       	brcc	.+12     	; 0x6274 <lcd_noteOut+0x2a>
    6268:	fa 01       	movw	r30, r20
    626a:	88 27       	eor	r24, r24
    626c:	ea 55       	subi	r30, 0x5A	; 90
    626e:	ff 4f       	sbci	r31, 0xFF	; 255
    6270:	8f 4f       	sbci	r24, 0xFF	; 255
    6272:	5d c1       	rjmp	.+698    	; 0x652e <__tablejump2__>
    6274:	d3 e2       	ldi	r29, 0x23	; 35
    6276:	23 c0       	rjmp	.+70     	; 0x62be <lcd_noteOut+0x74>
    6278:	d3 e2       	ldi	r29, 0x23	; 35
    627a:	24 e4       	ldi	r18, 0x44	; 68
    627c:	20 c0       	rjmp	.+64     	; 0x62be <lcd_noteOut+0x74>
    627e:	d3 e2       	ldi	r29, 0x23	; 35
    6280:	26 e4       	ldi	r18, 0x46	; 70
    6282:	1d c0       	rjmp	.+58     	; 0x62be <lcd_noteOut+0x74>
    6284:	d3 e2       	ldi	r29, 0x23	; 35
    6286:	27 e4       	ldi	r18, 0x47	; 71
    6288:	1a c0       	rjmp	.+52     	; 0x62be <lcd_noteOut+0x74>
    628a:	d3 e2       	ldi	r29, 0x23	; 35
    628c:	21 e4       	ldi	r18, 0x41	; 65
    628e:	17 c0       	rjmp	.+46     	; 0x62be <lcd_noteOut+0x74>
    6290:	d5 ea       	ldi	r29, 0xA5	; 165
    6292:	23 e4       	ldi	r18, 0x43	; 67
    6294:	14 c0       	rjmp	.+40     	; 0x62be <lcd_noteOut+0x74>
    6296:	d5 ea       	ldi	r29, 0xA5	; 165
    6298:	24 e4       	ldi	r18, 0x44	; 68
    629a:	11 c0       	rjmp	.+34     	; 0x62be <lcd_noteOut+0x74>
    629c:	d5 ea       	ldi	r29, 0xA5	; 165
    629e:	25 e4       	ldi	r18, 0x45	; 69
    62a0:	0e c0       	rjmp	.+28     	; 0x62be <lcd_noteOut+0x74>
    62a2:	d5 ea       	ldi	r29, 0xA5	; 165
    62a4:	26 e4       	ldi	r18, 0x46	; 70
    62a6:	0b c0       	rjmp	.+22     	; 0x62be <lcd_noteOut+0x74>
    62a8:	d5 ea       	ldi	r29, 0xA5	; 165
    62aa:	27 e4       	ldi	r18, 0x47	; 71
    62ac:	08 c0       	rjmp	.+16     	; 0x62be <lcd_noteOut+0x74>
    62ae:	d5 ea       	ldi	r29, 0xA5	; 165
    62b0:	21 e4       	ldi	r18, 0x41	; 65
    62b2:	05 c0       	rjmp	.+10     	; 0x62be <lcd_noteOut+0x74>
    62b4:	d5 ea       	ldi	r29, 0xA5	; 165
    62b6:	28 e4       	ldi	r18, 0x48	; 72
    62b8:	02 c0       	rjmp	.+4      	; 0x62be <lcd_noteOut+0x74>
    62ba:	d3 e2       	ldi	r29, 0x23	; 35
    62bc:	23 e4       	ldi	r18, 0x43	; 67
    62be:	99 23       	and	r25, r25
    62c0:	39 f0       	breq	.+14     	; 0x62d0 <lcd_noteOut+0x86>
    62c2:	cf e2       	ldi	r28, 0x2F	; 47
    62c4:	c9 0f       	add	r28, r25
    62c6:	05 c0       	rjmp	.+10     	; 0x62d2 <lcd_noteOut+0x88>
    62c8:	cd e2       	ldi	r28, 0x2D	; 45
    62ca:	dd e2       	ldi	r29, 0x2D	; 45
    62cc:	2d e2       	ldi	r18, 0x2D	; 45
    62ce:	01 c0       	rjmp	.+2      	; 0x62d2 <lcd_noteOut+0x88>
    62d0:	cd e2       	ldi	r28, 0x2D	; 45
    62d2:	82 2f       	mov	r24, r18
    62d4:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    62d8:	8d 2f       	mov	r24, r29
    62da:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    62de:	8c 2f       	mov	r24, r28
    62e0:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    62e4:	83 e0       	ldi	r24, 0x03	; 3
    62e6:	df 91       	pop	r29
    62e8:	cf 91       	pop	r28
    62ea:	08 95       	ret

000062ec <lcd_ChannelOut>:
    62ec:	cf 93       	push	r28
    62ee:	c8 2f       	mov	r28, r24
    62f0:	cf 70       	andi	r28, 0x0F	; 15
    62f2:	81 e0       	ldi	r24, 0x01	; 1
    62f4:	8c 0f       	add	r24, r28
    62f6:	8a 30       	cpi	r24, 0x0A	; 10
    62f8:	28 f0       	brcs	.+10     	; 0x6304 <lcd_ChannelOut+0x18>
    62fa:	81 e3       	ldi	r24, 0x31	; 49
    62fc:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6300:	87 ef       	ldi	r24, 0xF7	; 247
    6302:	8c 0f       	add	r24, r28
    6304:	80 5d       	subi	r24, 0xD0	; 208
    6306:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    630a:	cf 91       	pop	r28
    630c:	08 95       	ret

0000630e <lcd_ManualOutDec>:
    630e:	84 30       	cpi	r24, 0x04	; 4
    6310:	20 f0       	brcs	.+8      	; 0x631a <lcd_ManualOutDec+0xc>
    6312:	8d e2       	ldi	r24, 0x2D	; 45
    6314:	0c 94 84 11 	jmp	0x2308	; 0x2308 <lcd_putc>
    6318:	08 95       	ret
    631a:	83 30       	cpi	r24, 0x03	; 3
    631c:	21 f4       	brne	.+8      	; 0x6326 <lcd_ManualOutDec+0x18>
    631e:	80 e5       	ldi	r24, 0x50	; 80
    6320:	0c 94 84 11 	jmp	0x2308	; 0x2308 <lcd_putc>
    6324:	08 95       	ret
    6326:	93 e3       	ldi	r25, 0x33	; 51
    6328:	98 1b       	sub	r25, r24
    632a:	89 2f       	mov	r24, r25
    632c:	0c 94 84 11 	jmp	0x2308	; 0x2308 <lcd_putc>
    6330:	08 95       	ret

00006332 <lcd_blank>:
    6332:	cf 93       	push	r28
    6334:	04 c0       	rjmp	.+8      	; 0x633e <lcd_blank+0xc>
    6336:	80 e2       	ldi	r24, 0x20	; 32
    6338:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    633c:	8c 2f       	mov	r24, r28
    633e:	cf ef       	ldi	r28, 0xFF	; 255
    6340:	c8 0f       	add	r28, r24
    6342:	81 11       	cpse	r24, r1
    6344:	f8 cf       	rjmp	.-16     	; 0x6336 <lcd_blank+0x4>
    6346:	cf 91       	pop	r28
    6348:	08 95       	ret

0000634a <lcd_clrEol>:
    634a:	cf 93       	push	r28
    634c:	90 e0       	ldi	r25, 0x00	; 0
    634e:	04 c0       	rjmp	.+8      	; 0x6358 <lcd_clrEol+0xe>
    6350:	80 e2       	ldi	r24, 0x20	; 32
    6352:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    6356:	9c 2f       	mov	r25, r28
    6358:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <lcd_cursorPos>
    635c:	84 31       	cpi	r24, 0x14	; 20
    635e:	51 f0       	breq	.+20     	; 0x6374 <lcd_clrEol+0x2a>
    6360:	84 35       	cpi	r24, 0x54	; 84
    6362:	41 f0       	breq	.+16     	; 0x6374 <lcd_clrEol+0x2a>
    6364:	88 32       	cpi	r24, 0x28	; 40
    6366:	31 f0       	breq	.+12     	; 0x6374 <lcd_clrEol+0x2a>
    6368:	88 36       	cpi	r24, 0x68	; 104
    636a:	21 f0       	breq	.+8      	; 0x6374 <lcd_clrEol+0x2a>
    636c:	c1 e0       	ldi	r28, 0x01	; 1
    636e:	c9 0f       	add	r28, r25
    6370:	94 31       	cpi	r25, 0x14	; 20
    6372:	70 f3       	brcs	.-36     	; 0x6350 <lcd_clrEol+0x6>
    6374:	cf 91       	pop	r28
    6376:	08 95       	ret

00006378 <lcd_cursosblink>:
    6378:	8d e0       	ldi	r24, 0x0D	; 13
    637a:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_write_command>
    637e:	8f ef       	ldi	r24, 0xFF	; 255
    6380:	80 93 1c 0d 	sts	0x0D1C, r24	; 0x800d1c <lcd_cursorIsOn>
    6384:	08 95       	ret

00006386 <lcd_cursoroff>:
    6386:	8c e0       	ldi	r24, 0x0C	; 12
    6388:	0e 94 08 11 	call	0x2210	; 0x2210 <lcd_write_command>
    638c:	10 92 1c 0d 	sts	0x0D1C, r1	; 0x800d1c <lcd_cursorIsOn>
    6390:	08 95       	ret

00006392 <lcd_waitSymbolOn>:
    6392:	cf 93       	push	r28
    6394:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    6398:	8c e0       	ldi	r24, 0x0C	; 12
    639a:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    639e:	81 ea       	ldi	r24, 0xA1	; 161
    63a0:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    63a4:	8c 2f       	mov	r24, r28
    63a6:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    63aa:	cf 91       	pop	r28
    63ac:	08 95       	ret

000063ae <lcd_waitSymbolOff>:
    63ae:	cf 93       	push	r28
    63b0:	c0 91 56 03 	lds	r28, 0x0356	; 0x800356 <lcd_cursorPos>
    63b4:	8c e0       	ldi	r24, 0x0C	; 12
    63b6:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    63ba:	80 e2       	ldi	r24, 0x20	; 32
    63bc:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>
    63c0:	8c 2f       	mov	r24, r28
    63c2:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
    63c6:	cf 91       	pop	r28
    63c8:	08 95       	ret

000063ca <keylabel_set>:
static char labelBuffer [KEYLABEL_COUNT * KEYLABEL_LEN];

void keylabel_set(uint8_t keyNr, const __flash char* labelPStr){
	const __flash char* tempLabelPStr = labelPStr;
	uint8_t labelLen = 0;
	if (keyNr < KEYLABEL_COUNT){
    63ca:	84 30       	cpi	r24, 0x04	; 4
    63cc:	28 f0       	brcs	.+10     	; 0x63d8 <keylabel_set+0xe>

static char labelBuffer [KEYLABEL_COUNT * KEYLABEL_LEN];

void keylabel_set(uint8_t keyNr, const __flash char* labelPStr){
	const __flash char* tempLabelPStr = labelPStr;
	uint8_t labelLen = 0;
    63ce:	20 e0       	ldi	r18, 0x00	; 0
    63d0:	0d c0       	rjmp	.+26     	; 0x63ec <keylabel_set+0x22>
	if (keyNr < KEYLABEL_COUNT){
		while ((*tempLabelPStr++ != 0) && (labelLen <KEYLABEL_LEN)) {
			labelLen++;
    63d2:	2f 5f       	subi	r18, 0xFF	; 255

void keylabel_set(uint8_t keyNr, const __flash char* labelPStr){
	const __flash char* tempLabelPStr = labelPStr;
	uint8_t labelLen = 0;
	if (keyNr < KEYLABEL_COUNT){
		while ((*tempLabelPStr++ != 0) && (labelLen <KEYLABEL_LEN)) {
    63d4:	fa 01       	movw	r30, r20
    63d6:	02 c0       	rjmp	.+4      	; 0x63dc <keylabel_set+0x12>
    63d8:	fb 01       	movw	r30, r22
    63da:	20 e0       	ldi	r18, 0x00	; 0
    63dc:	af 01       	movw	r20, r30
    63de:	4f 5f       	subi	r20, 0xFF	; 255
    63e0:	5f 4f       	sbci	r21, 0xFF	; 255
    63e2:	94 91       	lpm	r25, Z
    63e4:	99 23       	and	r25, r25
    63e6:	11 f0       	breq	.+4      	; 0x63ec <keylabel_set+0x22>
    63e8:	25 30       	cpi	r18, 0x05	; 5
    63ea:	98 f3       	brcs	.-26     	; 0x63d2 <keylabel_set+0x8>
			labelLen++;
		}
	}
	char * charBufPtr = & labelBuffer[keyNr*KEYLABEL_LEN];
    63ec:	90 e0       	ldi	r25, 0x00	; 0
    63ee:	dc 01       	movw	r26, r24
    63f0:	aa 0f       	add	r26, r26
    63f2:	bb 1f       	adc	r27, r27
    63f4:	aa 0f       	add	r26, r26
    63f6:	bb 1f       	adc	r27, r27
    63f8:	8a 0f       	add	r24, r26
    63fa:	9b 1f       	adc	r25, r27
    63fc:	dc 01       	movw	r26, r24
    63fe:	a1 5f       	subi	r26, 0xF1	; 241
    6400:	bd 4f       	sbci	r27, 0xFD	; 253
	uint8_t i = 0;
	uint8_t startText = (KEYLABEL_LEN - labelLen) / 2;
    6402:	45 e0       	ldi	r20, 0x05	; 5
    6404:	50 e0       	ldi	r21, 0x00	; 0
    6406:	42 1b       	sub	r20, r18
    6408:	51 09       	sbc	r21, r1
    640a:	ca 01       	movw	r24, r20
    640c:	99 23       	and	r25, r25
    640e:	0c f4       	brge	.+2      	; 0x6412 <keylabel_set+0x48>
    6410:	01 96       	adiw	r24, 0x01	; 1
    6412:	95 95       	asr	r25
    6414:	87 95       	ror	r24
    6416:	38 2f       	mov	r19, r24
	uint8_t startEndSpaces = startText + labelLen;
    6418:	82 0f       	add	r24, r18
		while ((*tempLabelPStr++ != 0) && (labelLen <KEYLABEL_LEN)) {
			labelLen++;
		}
	}
	char * charBufPtr = & labelBuffer[keyNr*KEYLABEL_LEN];
	uint8_t i = 0;
    641a:	90 e0       	ldi	r25, 0x00	; 0
	uint8_t startText = (KEYLABEL_LEN - labelLen) / 2;
	uint8_t startEndSpaces = startText + labelLen;
	while (i < KEYLABEL_LEN){
    641c:	0e c0       	rjmp	.+28     	; 0x643a <keylabel_set+0x70>
		if ((i < startText) || (i >= startEndSpaces)){
    641e:	93 17       	cp	r25, r19
    6420:	10 f0       	brcs	.+4      	; 0x6426 <keylabel_set+0x5c>
    6422:	98 17       	cp	r25, r24
    6424:	18 f0       	brcs	.+6      	; 0x642c <keylabel_set+0x62>
			*charBufPtr = ' ';
    6426:	20 e2       	ldi	r18, 0x20	; 32
    6428:	2c 93       	st	X, r18
    642a:	05 c0       	rjmp	.+10     	; 0x6436 <keylabel_set+0x6c>
		} else {
			*charBufPtr = *labelPStr++;
    642c:	fb 01       	movw	r30, r22
    642e:	24 91       	lpm	r18, Z
    6430:	2c 93       	st	X, r18
    6432:	6f 5f       	subi	r22, 0xFF	; 255
    6434:	7f 4f       	sbci	r23, 0xFF	; 255
		}
		charBufPtr++;
    6436:	11 96       	adiw	r26, 0x01	; 1
		i++;
    6438:	9f 5f       	subi	r25, 0xFF	; 255
	}
	char * charBufPtr = & labelBuffer[keyNr*KEYLABEL_LEN];
	uint8_t i = 0;
	uint8_t startText = (KEYLABEL_LEN - labelLen) / 2;
	uint8_t startEndSpaces = startText + labelLen;
	while (i < KEYLABEL_LEN){
    643a:	95 30       	cpi	r25, 0x05	; 5
    643c:	80 f3       	brcs	.-32     	; 0x641e <keylabel_set+0x54>
			*charBufPtr = *labelPStr++;
		}
		charBufPtr++;
		i++;
	}
}
    643e:	08 95       	ret

00006440 <keylabel_clr>:

void keylabel_clr(uint8_t keyNr){
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
    6440:	90 e0       	ldi	r25, 0x00	; 0
    6442:	fc 01       	movw	r30, r24
    6444:	ee 0f       	add	r30, r30
    6446:	ff 1f       	adc	r31, r31
    6448:	ee 0f       	add	r30, r30
    644a:	ff 1f       	adc	r31, r31
    644c:	8e 0f       	add	r24, r30
    644e:	9f 1f       	adc	r25, r31
    6450:	fc 01       	movw	r30, r24
    6452:	e1 5f       	subi	r30, 0xF1	; 241
    6454:	fd 4f       	sbci	r31, 0xFD	; 253
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    6456:	80 e0       	ldi	r24, 0x00	; 0
    6458:	04 c0       	rjmp	.+8      	; 0x6462 <keylabel_clr+0x22>
		*charPtr++ = ' ';
    645a:	90 e2       	ldi	r25, 0x20	; 32
    645c:	90 83       	st	Z, r25
	}
}

void keylabel_clr(uint8_t keyNr){
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    645e:	8f 5f       	subi	r24, 0xFF	; 255
		*charPtr++ = ' ';
    6460:	31 96       	adiw	r30, 0x01	; 1
	}
}

void keylabel_clr(uint8_t keyNr){
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    6462:	85 30       	cpi	r24, 0x05	; 5
    6464:	d0 f3       	brcs	.-12     	; 0x645a <keylabel_clr+0x1a>
		*charPtr++ = ' ';
	}
}
    6466:	08 95       	ret

00006468 <keylabel_toLCD>:

void keylabel_toLCD(){
    6468:	0f 93       	push	r16
    646a:	1f 93       	push	r17
    646c:	cf 93       	push	r28
    646e:	df 93       	push	r29
	uint8_t oldCursor = lcd_cursorPos;
    6470:	d0 91 56 03 	lds	r29, 0x0356	; 0x800356 <lcd_cursorPos>
	lcd_goto(KEYLABEL_LCDLINE);
    6474:	84 e5       	ldi	r24, 0x54	; 84
    6476:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
	char *pChar = &labelBuffer[0];
	for (uint8_t i = 0; i < (KEYLABEL_COUNT * KEYLABEL_LEN); i++){
    647a:	c0 e0       	ldi	r28, 0x00	; 0
}

void keylabel_toLCD(){
	uint8_t oldCursor = lcd_cursorPos;
	lcd_goto(KEYLABEL_LCDLINE);
	char *pChar = &labelBuffer[0];
    647c:	ef e0       	ldi	r30, 0x0F	; 15
    647e:	f2 e0       	ldi	r31, 0x02	; 2
	for (uint8_t i = 0; i < (KEYLABEL_COUNT * KEYLABEL_LEN); i++){
    6480:	08 c0       	rjmp	.+16     	; 0x6492 <keylabel_toLCD+0x2a>
		lcd_putc(*pChar++);
    6482:	8f 01       	movw	r16, r30
    6484:	0f 5f       	subi	r16, 0xFF	; 255
    6486:	1f 4f       	sbci	r17, 0xFF	; 255
    6488:	80 81       	ld	r24, Z
    648a:	0e 94 84 11 	call	0x2308	; 0x2308 <lcd_putc>

void keylabel_toLCD(){
	uint8_t oldCursor = lcd_cursorPos;
	lcd_goto(KEYLABEL_LCDLINE);
	char *pChar = &labelBuffer[0];
	for (uint8_t i = 0; i < (KEYLABEL_COUNT * KEYLABEL_LEN); i++){
    648e:	cf 5f       	subi	r28, 0xFF	; 255
		lcd_putc(*pChar++);
    6490:	f8 01       	movw	r30, r16

void keylabel_toLCD(){
	uint8_t oldCursor = lcd_cursorPos;
	lcd_goto(KEYLABEL_LCDLINE);
	char *pChar = &labelBuffer[0];
	for (uint8_t i = 0; i < (KEYLABEL_COUNT * KEYLABEL_LEN); i++){
    6492:	c4 31       	cpi	r28, 0x14	; 20
    6494:	b0 f3       	brcs	.-20     	; 0x6482 <keylabel_toLCD+0x1a>
		lcd_putc(*pChar++);
	}
	lcd_goto(oldCursor);
    6496:	8d 2f       	mov	r24, r29
    6498:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <lcd_goto>
}
    649c:	df 91       	pop	r29
    649e:	cf 91       	pop	r28
    64a0:	1f 91       	pop	r17
    64a2:	0f 91       	pop	r16
    64a4:	08 95       	ret

000064a6 <keylabel_statcheck>:

uint8_t keylabel_statcheck(uint8_t keyNr, uint8_t status){
	// adapt statuscharacter KEYLABEL_STATEON_CHAR KEYLABEL_STATEOFF_CHAR to parameter status
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
    64a6:	90 e0       	ldi	r25, 0x00	; 0
    64a8:	fc 01       	movw	r30, r24
    64aa:	ee 0f       	add	r30, r30
    64ac:	ff 1f       	adc	r31, r31
    64ae:	ee 0f       	add	r30, r30
    64b0:	ff 1f       	adc	r31, r31
    64b2:	8e 0f       	add	r24, r30
    64b4:	9f 1f       	adc	r25, r31
    64b6:	fc 01       	movw	r30, r24
    64b8:	e1 5f       	subi	r30, 0xF1	; 241
    64ba:	fd 4f       	sbci	r31, 0xFD	; 253
	uint8_t result = 0;
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    64bc:	90 e0       	ldi	r25, 0x00	; 0
}

uint8_t keylabel_statcheck(uint8_t keyNr, uint8_t status){
	// adapt statuscharacter KEYLABEL_STATEON_CHAR KEYLABEL_STATEOFF_CHAR to parameter status
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
	uint8_t result = 0;
    64be:	80 e0       	ldi	r24, 0x00	; 0
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    64c0:	12 c0       	rjmp	.+36     	; 0x64e6 <keylabel_statcheck+0x40>
		uint8_t tempChar = *charPtr;
    64c2:	20 81       	ld	r18, Z
		if ((status == 0) && (tempChar == KEYLABEL_STATEON_CHAR)) {
    64c4:	61 11       	cpse	r22, r1
    64c6:	06 c0       	rjmp	.+12     	; 0x64d4 <keylabel_statcheck+0x2e>
    64c8:	2a 30       	cpi	r18, 0x0A	; 10
    64ca:	21 f4       	brne	.+8      	; 0x64d4 <keylabel_statcheck+0x2e>
			*charPtr = KEYLABEL_STATEOFF_CHAR;
    64cc:	80 e8       	ldi	r24, 0x80	; 128
    64ce:	80 83       	st	Z, r24
			result = 0xFF;
    64d0:	8f ef       	ldi	r24, 0xFF	; 255
    64d2:	07 c0       	rjmp	.+14     	; 0x64e2 <keylabel_statcheck+0x3c>
		} else if ((status != 0) && (tempChar == KEYLABEL_STATEOFF_CHAR)) {
    64d4:	66 23       	and	r22, r22
    64d6:	29 f0       	breq	.+10     	; 0x64e2 <keylabel_statcheck+0x3c>
    64d8:	20 38       	cpi	r18, 0x80	; 128
    64da:	19 f4       	brne	.+6      	; 0x64e2 <keylabel_statcheck+0x3c>
			*charPtr = KEYLABEL_STATEON_CHAR;
    64dc:	8a e0       	ldi	r24, 0x0A	; 10
    64de:	80 83       	st	Z, r24
			result = 0xFF;
    64e0:	8f ef       	ldi	r24, 0xFF	; 255
		}
		charPtr++;
    64e2:	31 96       	adiw	r30, 0x01	; 1

uint8_t keylabel_statcheck(uint8_t keyNr, uint8_t status){
	// adapt statuscharacter KEYLABEL_STATEON_CHAR KEYLABEL_STATEOFF_CHAR to parameter status
	char* charPtr = & labelBuffer[keyNr * KEYLABEL_LEN];
	uint8_t result = 0;
	for (uint8_t i = 0; i < KEYLABEL_LEN; i++){
    64e4:	9f 5f       	subi	r25, 0xFF	; 255
    64e6:	95 30       	cpi	r25, 0x05	; 5
    64e8:	60 f3       	brcs	.-40     	; 0x64c2 <keylabel_statcheck+0x1c>
			result = 0xFF;
		}
		charPtr++;
	}
	return result; // true if changes made
}
    64ea:	08 95       	ret

000064ec <get_StrLenP>:
// -------------------------------------------  G E N E R A L -----------------------------------------

uint8_t get_StrLenP(const __flash char* pString){
    64ec:	fc 01       	movw	r30, r24
	uint8_t result = 0;
    64ee:	80 e0       	ldi	r24, 0x00	; 0
	do
	{
		if (*pString == 0) {
    64f0:	94 91       	lpm	r25, Z
    64f2:	99 23       	and	r25, r25
    64f4:	21 f0       	breq	.+8      	; 0x64fe <get_StrLenP+0x12>
			return result;
		}
		pString++;
    64f6:	31 96       	adiw	r30, 0x01	; 1
	} while (++ result < GET_STRLEN_MAXLEN);
    64f8:	8f 5f       	subi	r24, 0xFF	; 255
    64fa:	80 32       	cpi	r24, 0x20	; 32
    64fc:	c8 f3       	brcs	.-14     	; 0x64f0 <get_StrLenP+0x4>
	return result;
}
    64fe:	08 95       	ret

00006500 <get_StrLen>:

uint8_t get_StrLen(const char* pString){
    6500:	fc 01       	movw	r30, r24
	uint8_t result = 0;
    6502:	80 e0       	ldi	r24, 0x00	; 0
	do
	{
		if (*pString == 0) {
    6504:	90 81       	ld	r25, Z
    6506:	99 23       	and	r25, r25
    6508:	21 f0       	breq	.+8      	; 0x6512 <get_StrLen+0x12>
			return result;
		}
		pString++;
    650a:	31 96       	adiw	r30, 0x01	; 1
	} while (++ result < GET_STRLEN_MAXLEN);
    650c:	8f 5f       	subi	r24, 0xFF	; 255
    650e:	80 32       	cpi	r24, 0x20	; 32
    6510:	c8 f3       	brcs	.-14     	; 0x6504 <get_StrLen+0x4>
	return result;
}
    6512:	08 95       	ret

00006514 <reverse_Bits>:

extern uint8_t reverse_Bits(uint8_t val){
    6514:	28 2f       	mov	r18, r24
	uint8_t result = 0;
	for (uint8_t i = 0; i < 8; i++) {
    6516:	90 e0       	ldi	r25, 0x00	; 0
	} while (++ result < GET_STRLEN_MAXLEN);
	return result;
}

extern uint8_t reverse_Bits(uint8_t val){
	uint8_t result = 0;
    6518:	80 e0       	ldi	r24, 0x00	; 0
	for (uint8_t i = 0; i < 8; i++) {
    651a:	06 c0       	rjmp	.+12     	; 0x6528 <reverse_Bits+0x14>
		result = result << 1;
    651c:	88 0f       	add	r24, r24
		result = result | (val & 0x01);
    651e:	32 2f       	mov	r19, r18
    6520:	31 70       	andi	r19, 0x01	; 1
    6522:	83 2b       	or	r24, r19
		val = val >> 1;
    6524:	26 95       	lsr	r18
	return result;
}

extern uint8_t reverse_Bits(uint8_t val){
	uint8_t result = 0;
	for (uint8_t i = 0; i < 8; i++) {
    6526:	9f 5f       	subi	r25, 0xFF	; 255
    6528:	98 30       	cpi	r25, 0x08	; 8
    652a:	c0 f3       	brcs	.-16     	; 0x651c <reverse_Bits+0x8>
		result = result << 1;
		result = result | (val & 0x01);
		val = val >> 1;
	}
	return result;
    652c:	08 95       	ret

0000652e <__tablejump2__>:
    652e:	ee 0f       	add	r30, r30
    6530:	ff 1f       	adc	r31, r31
    6532:	88 1f       	adc	r24, r24
    6534:	8b bf       	out	0x3b, r24	; 59
    6536:	07 90       	elpm	r0, Z+
    6538:	f6 91       	elpm	r31, Z
    653a:	e0 2d       	mov	r30, r0
    653c:	19 94       	eijmp

0000653e <eeprom_read_block>:
    653e:	dc 01       	movw	r26, r24
    6540:	cb 01       	movw	r24, r22

00006542 <eeprom_read_blraw>:
    6542:	fc 01       	movw	r30, r24
    6544:	f9 99       	sbic	0x1f, 1	; 31
    6546:	fe cf       	rjmp	.-4      	; 0x6544 <eeprom_read_blraw+0x2>
    6548:	06 c0       	rjmp	.+12     	; 0x6556 <eeprom_read_blraw+0x14>
    654a:	f2 bd       	out	0x22, r31	; 34
    654c:	e1 bd       	out	0x21, r30	; 33
    654e:	f8 9a       	sbi	0x1f, 0	; 31
    6550:	31 96       	adiw	r30, 0x01	; 1
    6552:	00 b4       	in	r0, 0x20	; 32
    6554:	0d 92       	st	X+, r0
    6556:	41 50       	subi	r20, 0x01	; 1
    6558:	50 40       	sbci	r21, 0x00	; 0
    655a:	b8 f7       	brcc	.-18     	; 0x654a <eeprom_read_blraw+0x8>
    655c:	08 95       	ret

0000655e <eeprom_read_byte>:
    655e:	f9 99       	sbic	0x1f, 1	; 31
    6560:	fe cf       	rjmp	.-4      	; 0x655e <eeprom_read_byte>
    6562:	92 bd       	out	0x22, r25	; 34
    6564:	81 bd       	out	0x21, r24	; 33
    6566:	f8 9a       	sbi	0x1f, 0	; 31
    6568:	99 27       	eor	r25, r25
    656a:	80 b5       	in	r24, 0x20	; 32
    656c:	08 95       	ret

0000656e <eeprom_read_word>:
    656e:	a8 e1       	ldi	r26, 0x18	; 24
    6570:	b0 e0       	ldi	r27, 0x00	; 0
    6572:	42 e0       	ldi	r20, 0x02	; 2
    6574:	50 e0       	ldi	r21, 0x00	; 0
    6576:	e5 cf       	rjmp	.-54     	; 0x6542 <eeprom_read_blraw>

00006578 <eeprom_update_block>:
    6578:	dc 01       	movw	r26, r24
    657a:	a4 0f       	add	r26, r20
    657c:	b5 1f       	adc	r27, r21
    657e:	41 50       	subi	r20, 0x01	; 1
    6580:	50 40       	sbci	r21, 0x00	; 0
    6582:	40 f0       	brcs	.+16     	; 0x6594 <eeprom_update_block+0x1c>
    6584:	cb 01       	movw	r24, r22
    6586:	84 0f       	add	r24, r20
    6588:	95 1f       	adc	r25, r21
    658a:	2e 91       	ld	r18, -X
    658c:	05 d0       	rcall	.+10     	; 0x6598 <eeprom_update_r18>
    658e:	41 50       	subi	r20, 0x01	; 1
    6590:	50 40       	sbci	r21, 0x00	; 0
    6592:	d8 f7       	brcc	.-10     	; 0x658a <eeprom_update_block+0x12>
    6594:	08 95       	ret

00006596 <eeprom_update_byte>:
    6596:	26 2f       	mov	r18, r22

00006598 <eeprom_update_r18>:
    6598:	f9 99       	sbic	0x1f, 1	; 31
    659a:	fe cf       	rjmp	.-4      	; 0x6598 <eeprom_update_r18>
    659c:	92 bd       	out	0x22, r25	; 34
    659e:	81 bd       	out	0x21, r24	; 33
    65a0:	f8 9a       	sbi	0x1f, 0	; 31
    65a2:	01 97       	sbiw	r24, 0x01	; 1
    65a4:	00 b4       	in	r0, 0x20	; 32
    65a6:	02 16       	cp	r0, r18
    65a8:	39 f0       	breq	.+14     	; 0x65b8 <eeprom_update_r18+0x20>
    65aa:	1f ba       	out	0x1f, r1	; 31
    65ac:	20 bd       	out	0x20, r18	; 32
    65ae:	0f b6       	in	r0, 0x3f	; 63
    65b0:	f8 94       	cli
    65b2:	fa 9a       	sbi	0x1f, 2	; 31
    65b4:	f9 9a       	sbi	0x1f, 1	; 31
    65b6:	0f be       	out	0x3f, r0	; 63
    65b8:	08 95       	ret

000065ba <eeprom_update_word>:
    65ba:	01 96       	adiw	r24, 0x01	; 1
    65bc:	27 2f       	mov	r18, r23
    65be:	ec df       	rcall	.-40     	; 0x6598 <eeprom_update_r18>
    65c0:	ea cf       	rjmp	.-44     	; 0x6596 <eeprom_update_byte>

000065c2 <_exit>:
    65c2:	f8 94       	cli

000065c4 <__stop_program>:
    65c4:	ff cf       	rjmp	.-2      	; 0x65c4 <__stop_program>
